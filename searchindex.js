Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[159, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[159, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[161, "adding-your-own-model"]], "Adding custom Labels": [[155, "adding-custom-labels"]], "Adding custom truth labels": [[156, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[156, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[156, "appendix"]], "Choosing a subset of events using selection": [[155, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[153, "code-quality"]], "Combining Multiple Datasets": [[155, "combining-multiple-datasets"], [156, "combining-multiple-datasets"]], "Contents": [[156, "contents"]], "Contributing To GraphNeTgraphnet": [[153, null]], "Conventions": [[153, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[156, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[156, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[154, null]], "DataConverter": [[154, "dataconverter"]], "Dataset": [[155, "dataset"]], "Datasets In GraphNeTgraphnet": [[155, null]], "Example DataConfig": [[156, "example-dataconfig"]], "Example ModelConfig": [[156, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[159, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[161, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[161, "experiment-tracking"]], "Extractors": [[154, "extractors"]], "GitHub issues": [[153, "github-issues"]], "GraphDefinition, backbone & Task": [[161, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[156, null]], "GraphNeTgraphnet": [[157, null], [160, null]], "Implementing a new Dataset": [[155, "implementing-a-new-dataset"]], "Installation": [[158, null]], "Installation in CVMFS (IceCube)": [[158, "installation-in-cvmfs-icecube"]], "Installation with km3io (KM3NeT)": [[158, "installation-with-km3io-km3net"]], "Instantiating a StandardModel": [[161, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[159, null]], "Introduction": [[156, "introduction"]], "Model.save": [[161, "model-save"]], "ModelConfig and state_dict": [[161, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[161, null]], "Overview of GraphNeT": [[156, "overview-of-graphnet"]], "Pull requests": [[153, "pull-requests"]], "Quick Start": [[158, "quick-start"]], "RNN_tito": [[100, null]], "Readers": [[154, "readers"]], "SQLiteDataset & ParquetDataset": [[155, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[155, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[161, "saving-loading-and-checkpointing-models"]], "The Model class": [[156, "the-model-class"], [161, "the-model-class"]], "The StandardModel class": [[156, "the-standardmodel-class"], [161, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[161, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[161, "using-checkpoints"]], "Writers": [[154, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[159, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[138, null]], "base_config": [[140, null]], "callbacks": [[132, null]], "classification": [[125, null]], "cleaning_module": [[81, null]], "coarsening": [[87, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[88, null]], "config": [[139, null]], "configurable": [[141, null]], "constants": [[2, null], [4, null]], "convnet": [[101, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[53, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[142, null]], "datasets": [[72, null]], "decorators": [[146, null]], "deployer": [[76, null]], "deployment": [[75, null]], "deployment_module": [[77, null]], "deprecated_methods": [[51, null], [62, null], [79, null]], "deprecation_tools": [[147, null]], "detector": [[92, null], [93, null]], "dynedge": [[102, null]], "dynedge_jinst": [[103, null]], "dynedge_kaggle_tito": [[104, null]], "easy_model": [[98, null]], "edges": [[110, null], [111, null]], "embedding": [[89, null]], "exceptions": [[84, null], [85, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[148, null]], "frames": [[35, null]], "gnn": [[99, null], [105, null]], "graph_definition": [[113, null]], "graphnet_file_reader": [[55, null]], "graphnet_writer": [[69, null]], "graphs": [[109, null], [114, null]], "grit": [[106, null]], "h5_extractor": [[47, null]], "i3_filters": [[36, null]], "i3deployer": [[82, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[78, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[56, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [80, null], [94, null]], "icemix": [[107, null]], "imports": [[149, null]], "inference_module": [[83, null]], "internal": [[38, null]], "internal_parquet_reader": [[57, null]], "iseecube": [[129, null]], "km3net": [[40, null]], "km3net_utilities": [[45, null]], "km3netextractor": [[41, null]], "km3netpulseextractor": [[42, null]], "km3netreader": [[58, null]], "km3nettruthextractor": [[43, null]], "labels": [[133, null]], "layers": [[90, null]], "liquido": [[46, null], [95, null]], "liquido_reader": [[59, null]], "logging": [[150, null]], "loss_functions": [[134, null]], "maths": [[151, null]], "minkowski": [[112, null]], "model": [[118, null]], "model_config": [[143, null]], "models": [[86, null]], "node_rnn": [[121, null]], "nodes": [[115, null], [116, null]], "normalizing_flow": [[119, null]], "orca": [[96, null]], "parquet": [[12, null], [50, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[64, null]], "parquet_writer": [[70, null]], "parsing": [[144, null]], "particlenet": [[108, null]], "pool": [[91, null]], "pre_configured": [[52, null]], "prometheus": [[48, null], [97, null]], "prometheus_datasets": [[73, null]], "prometheus_extractor": [[49, null]], "prometheus_reader": [[60, null]], "random": [[65, null]], "readers": [[54, null]], "reconstruction": [[126, null]], "rnn": [[120, null]], "samplers": [[14, null]], "sqlite": [[15, null], [61, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[66, null]], "sqlite_writer": [[71, null]], "src": [[152, null]], "standard_averaged_model": [[122, null]], "standard_model": [[123, null]], "string_selection_resolver": [[67, null]], "task": [[124, null], [127, null]], "test_dataset": [[74, null]], "training": [[131, null]], "training_config": [[145, null]], "transformer": [[128, null]], "types": [[37, null]], "utilities": [[33, null], [44, null], [63, null], [137, null]], "utils": [[117, null], [130, null], [135, null]], "weight_fitting": [[136, null]], "writers": [[68, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.km3net", "api/graphnet.data.extractors.km3net.km3netextractor", "api/graphnet.data.extractors.km3net.km3netpulseextractor", "api/graphnet.data.extractors.km3net.km3nettruthextractor", "api/graphnet.data.extractors.km3net.utilities", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.km3netreader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.orca", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.grit", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.km3net.rst", "api/graphnet.data.extractors.km3net.km3netextractor.rst", "api/graphnet.data.extractors.km3net.km3netpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3nettruthextractor.rst", "api/graphnet.data.extractors.km3net.utilities.rst", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.km3netreader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.orca.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.grit.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"add_charge_threshold_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_counts", false]], "add_full_rrwp() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.add_full_rrwp", false]], "add_mean() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.graphs.utils.cluster_and_pad method)": [[117, "graphnet.models.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[143, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "assert_no_uint_values() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.assert_no_uint_values", false]], "attention_rel (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.AttributeCoarsening", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "block (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.Coarsening", false]], "columnmissingexception": [[85, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[127, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[112, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[141, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[141, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[101, "graphnet.models.gnn.convnet.ConvNet", false]], "create_unique_id_filetype() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.create_unique_id_filetype", false]], "creating_time_zero() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.creating_time_zero", false]], "critical() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.debug", false]], "deepice (class in graphnet.models.gnn.icemix)": [[107, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[127, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[76, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[77, "graphnet.deployment.deployment_module.DeploymentModule", false]], "detector (class in graphnet.models.detector.detector)": [[93, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[102, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[103, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[104, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[98, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[111, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[114, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[151, "graphnet.utilities.maths.eps_like", false]], "error() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[111, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[90, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.extra_repr_recursive", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[93, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[94, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[94, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca115 method)": [[96, "graphnet.models.detector.orca.ORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca6 method)": [[96, "graphnet.models.detector.orca.ORCA6.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[97, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[97, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[97, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[97, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[150, "graphnet.utilities.logging.RepeatFilter.filter", false]], "filter_none_nan() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.filter_None_NaN", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[87, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[89, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearedgeencoder method)": [[89, "graphnet.models.components.embedding.LinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.linearnodeencoder method)": [[89, "graphnet.models.components.embedding.LinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearedgeencoder method)": [[89, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rrwplinearnodeencoder method)": [[89, "graphnet.models.components.embedding.RRWPLinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.rwselinearnodeencoder method)": [[89, "graphnet.models.components.embedding.RWSELinearNodeEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[89, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[89, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[90, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[90, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[90, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[90, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[90, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[90, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.gritsparsemha method)": [[90, "graphnet.models.components.layers.GritSparseMHA.forward", false]], "forward() (graphnet.models.components.layers.grittransformerlayer method)": [[90, "graphnet.models.components.layers.GritTransformerLayer.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[90, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.sangraphhead method)": [[90, "graphnet.models.components.layers.SANGraphHead.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[93, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[101, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[102, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[103, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[104, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[105, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.grit.grit method)": [[106, "graphnet.models.gnn.grit.GRIT.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[107, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[108, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[100, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[111, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[113, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrrwp method)": [[114, "graphnet.models.graphs.graphs.KNNGraphRRWP.forward", false]], "forward() (graphnet.models.graphs.graphs.knngraphrwse method)": [[114, "graphnet.models.graphs.graphs.KNNGraphRWSE.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[116, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[129, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[134, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.models.model.model class method)": [[118, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[141, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "full_edge_index() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.full_edge_index", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_rw_landing_probs() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.get_rw_landing_probs", false]], "gnn (class in graphnet.models.gnn.gnn)": [[105, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[113, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.km3net.km3netextractor": [[41, "module-graphnet.data.extractors.km3net.km3netextractor", false]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false]], "graphnet.data.extractors.km3net.utilities": [[44, "module-graphnet.data.extractors.km3net.utilities", false]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[45, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false]], "graphnet.data.extractors.liquido": [[46, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[47, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[48, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[49, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.deployment": [[75, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[76, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[77, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[78, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[79, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[80, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[81, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[82, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[83, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[84, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[85, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[86, "module-graphnet.models", false]], "graphnet.models.coarsening": [[87, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[88, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[89, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[90, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[91, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[92, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[93, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[94, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[95, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.orca": [[96, "module-graphnet.models.detector.orca", false]], "graphnet.models.detector.prometheus": [[97, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[98, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[99, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[101, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[102, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[103, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[104, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[105, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.grit": [[106, "module-graphnet.models.gnn.grit", false]], "graphnet.models.gnn.icemix": [[107, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[108, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[100, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[109, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[110, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[111, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[112, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[113, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[114, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[115, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[116, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[117, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[118, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[119, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[120, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[121, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[122, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[123, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[124, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[125, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[126, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[127, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[128, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[129, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[130, "module-graphnet.models.utils", false]], "graphnet.training": [[131, "module-graphnet.training", false]], "graphnet.training.callbacks": [[132, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[133, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[134, "module-graphnet.training.loss_functions", false]], "graphnet.utilities": [[137, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[138, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[139, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[140, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[141, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[142, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[143, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[144, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[145, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[146, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[147, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[148, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[149, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[150, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[151, "module-graphnet.utilities.maths", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[79, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "grit (class in graphnet.models.gnn.grit)": [[106, "graphnet.models.gnn.grit.GRIT", false]], "gritsparsemha (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.GritSparseMHA", false]], "grittransformerlayer (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.GritTransformerLayer", false]], "group_by() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_km3net_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_km3net_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[82, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[83, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[81, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[116, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.info", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[129, "graphnet.models.transformer.iseecube.ISeeCube", false]], "key (graphnet.training.labels.label property)": [[133, "graphnet.training.labels.Label.key", false]], "km3netextractor (class in graphnet.data.extractors.km3net.km3netextractor)": [[41, "graphnet.data.extractors.km3net.km3netextractor.KM3NeTExtractor", false]], "km3netfullpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTFullPulseExtractor", false]], "km3netpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTPulseExtractor", false]], "km3nettriggpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTTriggPulseExtractor", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.knn_graph_batch", false]], "knndistanceedges (class in graphnet.models.graphs.edges.edges)": [[111, "graphnet.models.graphs.edges.edges.KNNDistanceEdges", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[111, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[114, "graphnet.models.graphs.graphs.KNNGraph", false]], "knngraphrrwp (class in graphnet.models.graphs.graphs)": [[114, "graphnet.models.graphs.graphs.KNNGraphRRWP", false]], "knngraphrwse (class in graphnet.models.graphs.graphs)": [[114, "graphnet.models.graphs.graphs.KNNGraphRWSE", false]], "label (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[117, "graphnet.models.graphs.utils.lex_sort", false]], "linearedgeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.LinearEdgeEncoder", false]], "linearnodeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.LinearNodeEncoder", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[95, "graphnet.models.detector.liquido.LiquidO_v1", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[118, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_state_dict() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.MAELoss", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[112, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[118, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[140, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [6, "module-graphnet.data.dataclasses", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [41, "module-graphnet.data.extractors.km3net.km3netextractor", false], [42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false], [44, "module-graphnet.data.extractors.km3net.utilities", false], [45, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false], [46, "module-graphnet.data.extractors.liquido", false], [47, "module-graphnet.data.extractors.liquido.h5_extractor", false], [48, "module-graphnet.data.extractors.prometheus", false], [49, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [75, "module-graphnet.deployment", false], [76, "module-graphnet.deployment.deployer", false], [77, "module-graphnet.deployment.deployment_module", false], [78, "module-graphnet.deployment.i3modules", false], [79, "module-graphnet.deployment.i3modules.deprecated_methods", false], [80, "module-graphnet.deployment.icecube", false], [81, "module-graphnet.deployment.icecube.cleaning_module", false], [82, "module-graphnet.deployment.icecube.i3deployer", false], [83, "module-graphnet.deployment.icecube.inference_module", false], [84, "module-graphnet.exceptions", false], [85, "module-graphnet.exceptions.exceptions", false], [86, "module-graphnet.models", false], [87, "module-graphnet.models.coarsening", false], [88, "module-graphnet.models.components", false], [89, "module-graphnet.models.components.embedding", false], [90, "module-graphnet.models.components.layers", false], [91, "module-graphnet.models.components.pool", false], [92, "module-graphnet.models.detector", false], [93, "module-graphnet.models.detector.detector", false], [94, "module-graphnet.models.detector.icecube", false], [95, "module-graphnet.models.detector.liquido", false], [96, "module-graphnet.models.detector.orca", false], [97, "module-graphnet.models.detector.prometheus", false], [98, "module-graphnet.models.easy_model", false], [99, "module-graphnet.models.gnn", false], [100, "module-graphnet.models.gnn.RNN_tito", false], [101, "module-graphnet.models.gnn.convnet", false], [102, "module-graphnet.models.gnn.dynedge", false], [103, "module-graphnet.models.gnn.dynedge_jinst", false], [104, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [105, "module-graphnet.models.gnn.gnn", false], [106, "module-graphnet.models.gnn.grit", false], [107, "module-graphnet.models.gnn.icemix", false], [108, "module-graphnet.models.gnn.particlenet", false], [109, "module-graphnet.models.graphs", false], [110, "module-graphnet.models.graphs.edges", false], [111, "module-graphnet.models.graphs.edges.edges", false], [112, "module-graphnet.models.graphs.edges.minkowski", false], [113, "module-graphnet.models.graphs.graph_definition", false], [114, "module-graphnet.models.graphs.graphs", false], [115, "module-graphnet.models.graphs.nodes", false], [116, "module-graphnet.models.graphs.nodes.nodes", false], [117, "module-graphnet.models.graphs.utils", false], [118, "module-graphnet.models.model", false], [119, "module-graphnet.models.normalizing_flow", false], [120, "module-graphnet.models.rnn", false], [121, "module-graphnet.models.rnn.node_rnn", false], [122, "module-graphnet.models.standard_averaged_model", false], [123, "module-graphnet.models.standard_model", false], [124, "module-graphnet.models.task", false], [125, "module-graphnet.models.task.classification", false], [126, "module-graphnet.models.task.reconstruction", false], [127, "module-graphnet.models.task.task", false], [128, "module-graphnet.models.transformer", false], [129, "module-graphnet.models.transformer.iseecube", false], [130, "module-graphnet.models.utils", false], [131, "module-graphnet.training", false], [132, "module-graphnet.training.callbacks", false], [133, "module-graphnet.training.labels", false], [134, "module-graphnet.training.loss_functions", false], [137, "module-graphnet.utilities", false], [138, "module-graphnet.utilities.argparse", false], [139, "module-graphnet.utilities.config", false], [140, "module-graphnet.utilities.config.base_config", false], [141, "module-graphnet.utilities.config.configurable", false], [142, "module-graphnet.utilities.config.dataset_config", false], [143, "module-graphnet.utilities.config.model_config", false], [144, "module-graphnet.utilities.config.parsing", false], [145, "module-graphnet.utilities.config.training_config", false], [146, "module-graphnet.utilities.decorators", false], [147, "module-graphnet.utilities.deprecation_tools", false], [148, "module-graphnet.utilities.filesys", false], [149, "module-graphnet.utilities.imports", false], [150, "module-graphnet.utilities.logging", false], [151, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[105, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[127, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[127, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[105, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[116, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[150, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[107, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[116, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[116, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[116, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.Options", false]], "orca115 (class in graphnet.models.detector.orca)": [[96, "graphnet.models.detector.orca.ORCA115", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "orca6 (class in graphnet.models.detector.orca)": [[96, "graphnet.models.detector.orca.ORCA6", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[108, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[116, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[98, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "progressbar (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[111, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[87, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[147, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "rmseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[100, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "rrwplinearedgeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.RRWPLinearEdgeEncoder", false]], "rrwplinearnodeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.RRWPLinearNodeEncoder", false]], "run() (graphnet.deployment.deployer.deployer method)": [[76, "graphnet.deployment.deployer.Deployer.run", false]], "rwselinearnodeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.RWSELinearNodeEncoder", false]], "sangraphhead (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.SANGraphHead", false]], "save() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[141, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.save_model_config", false]], "save_state_dict() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.save_state_dict", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[116, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[116, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[118, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[138, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[123, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[98, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.Task", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.train", false]], "train_eval() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[145, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.unbatch_edge_index", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[119, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[118, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.WaterDemo81", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[138, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "xyz_dir_to_zen_az() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.xyz_dir_to_zen_az", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [75, 0, 0, "-", "deployment"], [84, 0, 0, "-", "exceptions"], [86, 0, 0, "-", "models"], [131, 0, 0, "-", "training"], [137, 0, 0, "-", "utilities"]], "graphnet.data": [[6, 0, 0, "-", "dataclasses"], [17, 0, 0, "-", "extractors"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [46, 0, 0, "-", "liquido"], [48, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.km3net": [[41, 0, 0, "-", "km3netextractor"], [42, 0, 0, "-", "km3netpulseextractor"], [44, 0, 0, "-", "utilities"]], "graphnet.data.extractors.km3net.km3netextractor": [[41, 1, 1, "", "KM3NeTExtractor"]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, 1, 1, "", "KM3NeTFullPulseExtractor"], [42, 1, 1, "", "KM3NeTPulseExtractor"], [42, 1, 1, "", "KM3NeTTriggPulseExtractor"]], "graphnet.data.extractors.km3net.utilities": [[45, 0, 0, "-", "km3net_utilities"]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[45, 5, 1, "", "assert_no_uint_values"], [45, 5, 1, "", "create_unique_id_filetype"], [45, 5, 1, "", "creating_time_zero"], [45, 5, 1, "", "filter_None_NaN"], [45, 5, 1, "", "xyz_dir_to_zen_az"]], "graphnet.data.extractors.liquido": [[47, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[47, 1, 1, "", "H5Extractor"], [47, 1, 1, "", "H5HitExtractor"], [47, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[49, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[49, 1, 1, "", "PrometheusExtractor"], [49, 1, 1, "", "PrometheusFeatureExtractor"], [49, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.deployment": [[76, 0, 0, "-", "deployer"], [77, 0, 0, "-", "deployment_module"], [78, 0, 0, "-", "i3modules"], [80, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[76, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[76, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[77, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[79, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[79, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[81, 0, 0, "-", "cleaning_module"], [82, 0, 0, "-", "i3deployer"], [83, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[81, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[82, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[83, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[85, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[85, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[87, 0, 0, "-", "coarsening"], [88, 0, 0, "-", "components"], [92, 0, 0, "-", "detector"], [98, 0, 0, "-", "easy_model"], [99, 0, 0, "-", "gnn"], [109, 0, 0, "-", "graphs"], [118, 0, 0, "-", "model"], [119, 0, 0, "-", "normalizing_flow"], [120, 0, 0, "-", "rnn"], [122, 0, 0, "-", "standard_averaged_model"], [123, 0, 0, "-", "standard_model"], [124, 0, 0, "-", "task"], [128, 0, 0, "-", "transformer"], [130, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[87, 1, 1, "", "AttributeCoarsening"], [87, 1, 1, "", "Coarsening"], [87, 1, 1, "", "CustomDOMCoarsening"], [87, 1, 1, "", "DOMAndTimeWindowCoarsening"], [87, 1, 1, "", "DOMCoarsening"], [87, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[87, 4, 1, "", "forward"], [87, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[89, 0, 0, "-", "embedding"], [90, 0, 0, "-", "layers"], [91, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[89, 1, 1, "", "FourierEncoder"], [89, 1, 1, "", "LinearEdgeEncoder"], [89, 1, 1, "", "LinearNodeEncoder"], [89, 1, 1, "", "RRWPLinearEdgeEncoder"], [89, 1, 1, "", "RRWPLinearNodeEncoder"], [89, 1, 1, "", "RWSELinearNodeEncoder"], [89, 1, 1, "", "SinusoidalPosEmb"], [89, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearEdgeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.LinearNodeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearEdgeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RRWPLinearNodeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.RWSELinearNodeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[90, 1, 1, "", "Attention_rel"], [90, 1, 1, "", "Block"], [90, 1, 1, "", "Block_rel"], [90, 1, 1, "", "DropPath"], [90, 1, 1, "", "DynEdgeConv"], [90, 1, 1, "", "DynTrans"], [90, 1, 1, "", "EdgeConvTito"], [90, 1, 1, "", "GritSparseMHA"], [90, 1, 1, "", "GritTransformerLayer"], [90, 1, 1, "", "Mlp"], [90, 1, 1, "", "SANGraphHead"]], "graphnet.models.components.layers.Attention_rel": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[90, 4, 1, "", "extra_repr"], [90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[90, 4, 1, "", "forward"], [90, 4, 1, "", "message"], [90, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.GritSparseMHA": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.GritTransformerLayer": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.SANGraphHead": [[90, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[91, 5, 1, "", "group_by"], [91, 5, 1, "", "group_pulses_to_dom"], [91, 5, 1, "", "group_pulses_to_pmt"], [91, 5, 1, "", "min_pool"], [91, 5, 1, "", "min_pool_x"], [91, 5, 1, "", "std_pool"], [91, 5, 1, "", "std_pool_x"], [91, 5, 1, "", "sum_pool"], [91, 5, 1, "", "sum_pool_and_distribute"], [91, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[93, 0, 0, "-", "detector"], [94, 0, 0, "-", "icecube"], [95, 0, 0, "-", "liquido"], [96, 0, 0, "-", "orca"], [97, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[93, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[93, 4, 1, "", "feature_map"], [93, 4, 1, "", "forward"], [93, 3, 1, "", "geometry_table"], [93, 3, 1, "", "sensor_index_name"], [93, 3, 1, "", "sensor_position_names"], [93, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[94, 1, 1, "", "IceCube86"], [94, 1, 1, "", "IceCubeDeepCore"], [94, 1, 1, "", "IceCubeKaggle"], [94, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[94, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[95, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[95, 4, 1, "", "feature_map"], [95, 2, 1, "", "geometry_table_path"], [95, 2, 1, "", "sensor_id_column"], [95, 2, 1, "", "string_id_column"], [95, 2, 1, "", "xyz"]], "graphnet.models.detector.orca": [[96, 1, 1, "", "ORCA115"], [96, 1, 1, "", "ORCA6"]], "graphnet.models.detector.orca.ORCA115": [[96, 4, 1, "", "feature_map"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA6": [[96, 4, 1, "", "feature_map"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[97, 1, 1, "", "ARCA115"], [97, 1, 1, "", "BaikalGVD8"], [97, 1, 1, "", "IceCube86Prometheus"], [97, 1, 1, "", "IceCubeDeepCore8"], [97, 1, 1, "", "IceCubeGen2"], [97, 1, 1, "", "IceCubeUpgrade7"], [97, 1, 1, "", "IceDemo81"], [97, 1, 1, "", "ORCA150"], [97, 1, 1, "", "ORCA150SuperDense"], [97, 1, 1, "", "PONETriangle"], [97, 1, 1, "", "Prometheus"], [97, 1, 1, "", "TRIDENT1211"], [97, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[98, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[98, 4, 1, "", "compute_loss"], [98, 4, 1, "", "configure_optimizers"], [98, 4, 1, "", "fit"], [98, 4, 1, "", "forward"], [98, 4, 1, "", "inference"], [98, 4, 1, "", "predict"], [98, 4, 1, "", "predict_as_dataframe"], [98, 3, 1, "", "prediction_labels"], [98, 4, 1, "", "shared_step"], [98, 3, 1, "", "target_labels"], [98, 4, 1, "", "train"], [98, 4, 1, "", "training_step"], [98, 4, 1, "", "validate_tasks"], [98, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[100, 0, 0, "-", "RNN_tito"], [101, 0, 0, "-", "convnet"], [102, 0, 0, "-", "dynedge"], [103, 0, 0, "-", "dynedge_jinst"], [104, 0, 0, "-", "dynedge_kaggle_tito"], [105, 0, 0, "-", "gnn"], [106, 0, 0, "-", "grit"], [107, 0, 0, "-", "icemix"], [108, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[100, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[100, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[101, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[101, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[102, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[102, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[103, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[103, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[104, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[104, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[105, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[105, 4, 1, "", "forward"], [105, 3, 1, "", "nb_inputs"], [105, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.grit": [[106, 1, 1, "", "GRIT"]], "graphnet.models.gnn.grit.GRIT": [[106, 4, 1, "", "forward"]], "graphnet.models.gnn.icemix": [[107, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[107, 4, 1, "", "forward"], [107, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[108, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[108, 4, 1, "", "forward"]], "graphnet.models.graphs": [[110, 0, 0, "-", "edges"], [113, 0, 0, "-", "graph_definition"], [114, 0, 0, "-", "graphs"], [115, 0, 0, "-", "nodes"], [117, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[111, 0, 0, "-", "edges"], [112, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[111, 1, 1, "", "EdgeDefinition"], [111, 1, 1, "", "EuclideanEdges"], [111, 1, 1, "", "KNNDistanceEdges"], [111, 1, 1, "", "KNNEdges"], [111, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[111, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[112, 1, 1, "", "MinkowskiKNNEdges"], [112, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[113, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[113, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[114, 1, 1, "", "EdgelessGraph"], [114, 1, 1, "", "KNNGraph"], [114, 1, 1, "", "KNNGraphRRWP"], [114, 1, 1, "", "KNNGraphRWSE"]], "graphnet.models.graphs.graphs.KNNGraphRRWP": [[114, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs.KNNGraphRWSE": [[114, 4, 1, "", "forward"]], "graphnet.models.graphs.nodes": [[116, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[116, 1, 1, "", "IceMixNodes"], [116, 1, 1, "", "NodeAsDOMTimeSeries"], [116, 1, 1, "", "NodeDefinition"], [116, 1, 1, "", "NodesAsPulses"], [116, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[116, 4, 1, "", "forward"], [116, 3, 1, "", "nb_outputs"], [116, 4, 1, "", "set_number_of_inputs"], [116, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[117, 1, 1, "", "cluster_and_pad"], [117, 5, 1, "", "cluster_summarize_with_percentiles"], [117, 5, 1, "", "gather_cluster_sequence"], [117, 5, 1, "", "ice_transparency"], [117, 5, 1, "", "identify_indices"], [117, 5, 1, "", "lex_sort"]], "graphnet.models.graphs.utils.cluster_and_pad": [[117, 4, 1, "", "add_charge_threshold_summary"], [117, 4, 1, "", "add_counts"], [117, 4, 1, "", "add_mean"], [117, 4, 1, "", "add_percentile_summary"], [117, 4, 1, "", "add_std"], [117, 4, 1, "", "add_sum_charge"]], "graphnet.models.model": [[118, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[118, 4, 1, "", "extra_repr"], [118, 4, 1, "", "extra_repr_recursive"], [118, 4, 1, "", "from_config"], [118, 4, 1, "", "load"], [118, 4, 1, "", "load_state_dict"], [118, 4, 1, "", "save"], [118, 4, 1, "", "save_state_dict"], [118, 4, 1, "", "set_verbose_print_recursively"], [118, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[119, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[119, 4, 1, "", "forward"], [119, 4, 1, "", "shared_step"], [119, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[121, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[121, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[121, 4, 1, "", "clean_up_data_object"], [121, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[122, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[122, 4, 1, "", "load_state_dict"], [122, 4, 1, "", "on_train_end"], [122, 4, 1, "", "optimizer_step"], [122, 4, 1, "", "training_step"], [122, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[123, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[123, 4, 1, "", "compute_loss"], [123, 4, 1, "", "forward"], [123, 4, 1, "", "shared_step"], [123, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[125, 0, 0, "-", "classification"], [126, 0, 0, "-", "reconstruction"], [127, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[125, 1, 1, "", "BinaryClassificationTask"], [125, 1, 1, "", "BinaryClassificationTaskLogits"], [125, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[126, 1, 1, "", "AzimuthReconstruction"], [126, 1, 1, "", "AzimuthReconstructionWithKappa"], [126, 1, 1, "", "DirectionReconstructionWithKappa"], [126, 1, 1, "", "EnergyReconstruction"], [126, 1, 1, "", "EnergyReconstructionWithPower"], [126, 1, 1, "", "EnergyReconstructionWithUncertainty"], [126, 1, 1, "", "EnergyTCReconstruction"], [126, 1, 1, "", "InelasticityReconstruction"], [126, 1, 1, "", "PositionReconstruction"], [126, 1, 1, "", "TimeReconstruction"], [126, 1, 1, "", "VertexReconstruction"], [126, 1, 1, "", "VisibleInelasticityReconstruction"], [126, 1, 1, "", "ZenithReconstruction"], [126, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[127, 1, 1, "", "IdentityTask"], [127, 1, 1, "", "LearnedTask"], [127, 1, 1, "", "StandardFlowTask"], [127, 1, 1, "", "StandardLearnedTask"], [127, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[127, 3, 1, "", "default_prediction_labels"], [127, 3, 1, "", "default_target_labels"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[127, 4, 1, "", "compute_loss"], [127, 4, 1, "", "forward"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[127, 3, 1, "", "default_prediction_labels"], [127, 4, 1, "", "forward"], [127, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[127, 4, 1, "", "compute_loss"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[127, 3, 1, "", "default_prediction_labels"], [127, 3, 1, "", "default_target_labels"], [127, 4, 1, "", "inference"], [127, 3, 1, "", "nb_inputs"], [127, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[129, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[129, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[129, 4, 1, "", "forward"]], "graphnet.models.utils": [[130, 5, 1, "", "add_full_rrwp"], [130, 5, 1, "", "array_to_sequence"], [130, 5, 1, "", "calculate_distance_matrix"], [130, 5, 1, "", "calculate_xyzt_homophily"], [130, 5, 1, "", "full_edge_index"], [130, 5, 1, "", "get_fields"], [130, 5, 1, "", "get_rw_landing_probs"], [130, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[132, 0, 0, "-", "callbacks"], [133, 0, 0, "-", "labels"], [134, 0, 0, "-", "loss_functions"]], "graphnet.training.callbacks": [[132, 1, 1, "", "GraphnetEarlyStopping"], [132, 1, 1, "", "PiecewiseLinearLR"], [132, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[132, 4, 1, "", "on_fit_end"], [132, 4, 1, "", "on_train_epoch_end"], [132, 4, 1, "", "on_validation_end"], [132, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[132, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[132, 4, 1, "", "get_metrics"], [132, 4, 1, "", "init_predict_tqdm"], [132, 4, 1, "", "init_test_tqdm"], [132, 4, 1, "", "init_train_tqdm"], [132, 4, 1, "", "init_validation_tqdm"], [132, 4, 1, "", "on_train_epoch_end"], [132, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[133, 1, 1, "", "Direction"], [133, 1, 1, "", "Label"], [133, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[133, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[134, 1, 1, "", "BinaryCrossEntropyLoss"], [134, 1, 1, "", "CrossEntropyLoss"], [134, 1, 1, "", "EnsembleLoss"], [134, 1, 1, "", "EuclideanDistanceLoss"], [134, 1, 1, "", "LogCMK"], [134, 1, 1, "", "LogCoshLoss"], [134, 1, 1, "", "LossFunction"], [134, 1, 1, "", "MAELoss"], [134, 1, 1, "", "MSELoss"], [134, 1, 1, "", "RMSELoss"], [134, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisher2DLoss"], [134, 1, 1, "", "VonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[134, 4, 1, "", "backward"], [134, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[134, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[134, 4, 1, "", "log_cmk"], [134, 4, 1, "", "log_cmk_approx"], [134, 4, 1, "", "log_cmk_exact"]], "graphnet.utilities": [[138, 0, 0, "-", "argparse"], [139, 0, 0, "-", "config"], [146, 0, 0, "-", "decorators"], [147, 0, 0, "-", "deprecation_tools"], [148, 0, 0, "-", "filesys"], [149, 0, 0, "-", "imports"], [150, 0, 0, "-", "logging"], [151, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[138, 1, 1, "", "ArgumentParser"], [138, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[138, 2, 1, "", "standard_arguments"], [138, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[138, 4, 1, "", "contains"], [138, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[140, 0, 0, "-", "base_config"], [141, 0, 0, "-", "configurable"], [142, 0, 0, "-", "dataset_config"], [143, 0, 0, "-", "model_config"], [144, 0, 0, "-", "parsing"], [145, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[140, 1, 1, "", "BaseConfig"], [140, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[140, 4, 1, "", "as_dict"], [140, 4, 1, "", "dump"], [140, 4, 1, "", "load"], [140, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[141, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[141, 3, 1, "", "config"], [141, 4, 1, "", "from_config"], [141, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[142, 1, 1, "", "DatasetConfig"], [142, 1, 1, "", "DatasetConfigSaverABCMeta"], [142, 1, 1, "", "DatasetConfigSaverMeta"], [142, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[142, 4, 1, "", "as_dict"], [142, 2, 1, "", "features"], [142, 2, 1, "", "graph_definition"], [142, 2, 1, "", "index_column"], [142, 2, 1, "", "labels"], [142, 2, 1, "", "loss_weight_column"], [142, 2, 1, "", "loss_weight_default_value"], [142, 2, 1, "", "loss_weight_table"], [142, 2, 1, "", "model_config"], [142, 2, 1, "", "node_truth"], [142, 2, 1, "", "node_truth_table"], [142, 2, 1, "", "path"], [142, 2, 1, "", "pulsemaps"], [142, 2, 1, "", "seed"], [142, 2, 1, "", "selection"], [142, 2, 1, "", "string_selection"], [142, 2, 1, "", "truth"], [142, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[143, 1, 1, "", "ModelConfig"], [143, 1, 1, "", "ModelConfigSaverABC"], [143, 1, 1, "", "ModelConfigSaverMeta"], [143, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[143, 2, 1, "", "arguments"], [143, 4, 1, "", "as_dict"], [143, 2, 1, "", "class_name"], [143, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[144, 5, 1, "", "get_all_grapnet_classes"], [144, 5, 1, "", "get_graphnet_classes"], [144, 5, 1, "", "is_graphnet_class"], [144, 5, 1, "", "is_graphnet_module"], [144, 5, 1, "", "list_all_submodules"], [144, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[145, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[145, 2, 1, "", "dataloader"], [145, 2, 1, "", "early_stopping_patience"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "model_config"], [145, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[147, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[148, 5, 1, "", "find_i3_files"], [148, 5, 1, "", "has_extension"], [148, 5, 1, "", "is_gcd_file"], [148, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[149, 5, 1, "", "has_icecube_package"], [149, 5, 1, "", "has_jammy_flows_package"], [149, 5, 1, "", "has_km3net_package"], [149, 5, 1, "", "has_torch_package"], [149, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[150, 1, 1, "", "Logger"], [150, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[150, 4, 1, "", "critical"], [150, 4, 1, "", "debug"], [150, 4, 1, "", "error"], [150, 3, 1, "", "file_handlers"], [150, 3, 1, "", "handlers"], [150, 4, 1, "", "info"], [150, 4, 1, "", "setLevel"], [150, 3, 1, "", "stream_handlers"], [150, 4, 1, "", "warning"], [150, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[150, 4, 1, "", "filter"], [150, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[151, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 34, 76, 89, 93, 98, 101, 102, 108, 113, 119, 127, 130, 132, 138, 142, 143, 150, 151, 154, 155, 156, 157, 159, 160, 161], "0": [31, 45, 81, 87, 89, 90, 91, 100, 101, 102, 104, 106, 108, 111, 112, 114, 117, 121, 127, 130, 133, 134, 142, 155, 156, 158, 159, 161], "000": 155, "001": [156, 161], "01": [156, 161], "0221": 156, "02_data": 156, "03042": 103, "03762": 89, "04616": 134, "04_ensemble_dataset": 156, "05": 134, "06": 153, "06166": 111, "08570": 108, "0e04": 159, "0e4": 159, "1": [0, 19, 34, 45, 76, 79, 82, 87, 90, 91, 100, 102, 104, 106, 107, 108, 111, 112, 114, 117, 121, 125, 126, 127, 130, 132, 133, 134, 142, 154, 155, 156, 157, 158, 160, 161], "10": [94, 95, 97, 106, 116, 117, 138, 155, 156, 159, 161], "100": 155, "1000": [127, 155, 156], "10000": 89, "1088": 156, "10th": 117, "11": [156, 158], "115": 96, "12": [107, 129, 142, 155, 156], "120": 156, "128": [89, 101, 102, 104, 108, 138, 155, 156, 161], "13": 158, "14": [142, 155, 156], "1536": 129, "15674": 89, "16": [89, 100, 108, 129, 142, 155, 156, 161], "17": 156, "1706": 89, "1748": 156, "17589": 106, "1809": 111, "1812": 134, "1902": 108, "192": 107, "196": 129, "1e6": 127, "2": [34, 90, 91, 100, 102, 104, 106, 108, 111, 114, 117, 121, 126, 130, 134, 142, 155, 156, 158, 161], "20": [150, 156, 158, 159, 161], "200": [155, 159], "2018": 153, "2019": 134, "2020": [0, 157, 160], "21": [106, 153, 155, 156], "2209": 103, "2305": 106, "2310": 89, "256": [102, 104, 108, 129], "26": 155, "2d": [130, 134], "2nd": [89, 107], "3": [91, 100, 101, 104, 112, 117, 121, 126, 129, 130, 134, 153, 156, 158, 159], "30": 159, "300": [155, 159], "32": [89, 107, 129], "336": [102, 104], "384": [89, 107, 129], "39": [0, 157, 160], "3d": [126, 134], "4": [90, 103, 107, 117, 126, 156, 159, 161], "40": 159, "5": [90, 100, 106, 117, 121, 134, 138, 154, 155, 156, 158, 159, 161], "50": [116, 117, 138, 159], "500": [117, 159], "50000": [142, 155, 156], "5001": 155, "50th": 117, "59": 158, "6": [89, 91, 96, 107, 129], "64": [100, 108], "7": [81, 91], "70": 158, "700": 134, "768": 116, "8": [90, 91, 100, 102, 104, 106, 114, 121, 130, 134, 153, 155, 156, 158, 161], "80": [156, 161], "86": [22, 94], "890778": [0, 157, 160], "9": 158, "90": [116, 117], "90th": 117, "A": [36, 45, 76, 77, 81, 82, 91, 93, 94, 95, 96, 97, 98, 113, 114, 117, 118, 119, 123, 125, 127, 130, 134, 154, 155, 156, 159, 161], "AND": 134, "AS": 134, "As": [102, 108, 161], "BE": 134, "BUT": 134, "But": 161, "By": [0, 127, 155, 156, 157, 160, 161], "FOR": 134, "For": [37, 116, 132, 155, 156, 161], "IN": 134, "If": [21, 23, 31, 36, 89, 90, 102, 107, 108, 113, 116, 117, 118, 127, 132, 134, 153, 154, 156, 158, 161], "In": [130, 142, 143, 154, 156, 158], "It": [1, 34, 81, 89, 117, 125, 127, 153, 155, 156, 161], "NO": 134, "NOT": [134, 156], "No": [0, 156, 157, 160], "OF": 134, "OR": 134, "One": 156, "Or": 155, "THE": 134, "TO": 134, "That": [102, 108, 126, 133, 156, 161], "The": [0, 18, 34, 37, 76, 77, 79, 81, 82, 83, 87, 89, 90, 91, 100, 102, 104, 107, 108, 111, 113, 114, 117, 119, 121, 125, 126, 127, 129, 130, 132, 133, 134, 147, 154, 155, 157, 158, 159, 160], "Then": 153, "There": [156, 161], "These": [0, 113, 153, 155, 156, 157, 159, 160, 161], "To": [155, 156, 158, 159, 161], "WITH": 134, "Will": [76, 79, 81, 82, 83, 111, 154], "With": [156, 159, 161], "_": 156, "__": [34, 37, 156], "_____________________": 134, "__call__": [19, 21, 77, 154, 155, 156, 159], "__init__": [142, 143, 154, 155, 156, 161], "_accepted_extractor": [154, 159], "_accepted_file_extens": [154, 159], "_and_": [102, 108], "_charge_sum": 117, "_charge_weight": 117, "_cluster_nam": 117, "_column_nam": 154, "_construct_edg": 111, "_count": 117, "_definition_": 156, "_extractor": [154, 159], "_extractor_nam": [154, 159], "_file_extens": 154, "_forward": 161, "_layer": 161, "_lrschedul": 132, "_merge_datafram": 154, "_padded_x": 117, "_pred": 127, "_save_fil": 154, "_sensor_tim": 159, "_sensor_xyz": 159, "_tabl": 154, "_task": [98, 119, 123], "_verify_column": 154, "_x_": 156, "a__b": 34, "ab": [106, 108, 134, 142, 155, 156], "abc": [19, 76, 118, 133, 141, 142, 143], "abcmeta": [142, 143], "abil": 155, "abl": [34, 116, 119, 154, 156, 158, 159, 161], "about": [118, 155, 156, 159], "abov": [134, 155, 156, 159, 161], "abs_p": 114, "absolut": [90, 106, 114, 130, 134], "absopt": 116, "absorpt": 117, "abstract": [1, 93, 105, 113, 127, 141, 156], "abstractmethod": 155, "acceler": 1, "accept": [153, 161], "accepted_extractor": 154, "accepted_file_extens": 154, "access": [114, 133, 155], "accompani": 156, "accord": [87, 91, 111, 113, 114, 117, 134], "achiev": 158, "achitectur": 161, "across": [1, 2, 37, 76, 79, 82, 91, 98, 123, 130, 134, 137, 138, 139, 150, 159], "act": [127, 134, 156, 161], "action": 134, "activ": [90, 98, 100, 102, 106, 108, 116, 121, 127, 153, 158], "activation_lay": [102, 108], "actual": [156, 161], "ad": [22, 89, 102, 107, 116, 117], "adam": [119, 156, 161], "adapt": [106, 156, 161], "add": [89, 90, 102, 106, 108, 114, 117, 130, 138, 147, 153, 156, 158, 159], "add_batchnorm_lay": 108, "add_charge_threshold_summari": 117, "add_count": [116, 117], "add_full_rrwp": [86, 130], "add_global_variables_after_pool": [102, 156, 161], "add_ice_properti": 116, "add_ident": 130, "add_inactive_sensor": 113, "add_label": [155, 156], "add_mean": 117, "add_node_attr_as_self_loop": [89, 106], "add_norm_lay": 102, "add_percentile_summari": 117, "add_std": 117, "add_sum_charg": 117, "addit": [87, 90, 98, 114, 117, 134, 154, 156, 161], "additional_attribut": [98, 156, 161], "address": 161, "adher": [153, 161], "adjac": [93, 130], "adjust": 161, "advanc": [1, 91], "after": [90, 100, 102, 104, 106, 108, 132, 138, 142, 155, 156, 161], "again": [156, 161], "aggr": 90, "aggreg": [90, 91, 117], "agnost": [0, 157, 160, 161], "agreement": [0, 153, 157, 160], "ai": 156, "aim": [0, 1, 153, 156, 157, 160], "algorithm": 26, "all": [1, 18, 19, 21, 23, 36, 41, 42, 81, 89, 90, 91, 93, 102, 105, 108, 112, 113, 117, 118, 127, 134, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "allow": [0, 39, 75, 78, 86, 91, 132, 140, 145, 155, 156, 157, 160, 161], "almost": 130, "along": [117, 156, 161], "alongsid": [156, 161], "alreadi": 158, "also": [100, 142, 154, 155, 156, 159, 161], "alter": [113, 117], "altern": [102, 134, 153], "amount": 100, "an": [0, 19, 37, 78, 82, 106, 113, 114, 121, 122, 134, 148, 150, 153, 154, 156, 157, 158, 159, 160, 161], "anaconda": 158, "analys": [75, 156], "analysi": [76, 82], "angl": [45, 126, 133, 156, 161], "ani": [6, 34, 35, 36, 37, 81, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 138, 140, 141, 142, 143, 144, 145, 150, 155, 156, 161], "anoth": [142, 143, 155, 156], "anyth": 153, "api": [152, 154, 156], "appear": [76, 79, 82, 155, 156], "append": 113, "appli": [76, 79, 82, 89, 90, 91, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 117, 119, 121, 123, 125, 127, 129, 134, 144, 154, 155, 156], "applic": [34, 155, 156, 161], "apply_norm": 89, "appropri": [127, 156, 158], "approx": 134, "ar": [0, 1, 21, 23, 31, 36, 37, 76, 81, 82, 90, 91, 100, 102, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 125, 130, 134, 142, 143, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161], "arbitrari": [0, 157, 160], "arca": [97, 158], "arca115": [92, 97], "architectur": [1, 101, 102, 103, 104, 108, 119, 121, 129, 156, 161], "area": 1, "arg": [18, 36, 87, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 125, 126, 127, 129, 134, 138, 140, 150, 154, 159], "argpars": [1, 137], "argument": [107, 119, 132, 138, 140, 142, 143, 145, 155, 156, 159, 161], "argumentpars": [137, 138], "aris": 134, "arrai": [19, 31, 34, 116, 117, 130, 154, 155, 156, 159], "array_to_sequ": [86, 130], "arriv": 155, "art": [0, 157, 160], "articl": 156, "artifact": [156, 161], "arxiv": [89, 106, 108, 111, 134], "as_dict": [140, 142, 143, 156, 161], "assert": [45, 154, 155], "assert_no_uint_valu": [44, 45], "assertionerror": 154, "assign": [87, 91, 111, 114, 130, 153, 154], "associ": [81, 83, 113, 117, 126, 134, 154, 155, 156, 159, 161], "assort": 151, "assum": [81, 89, 93, 113, 117, 127, 130], "atmospher": 155, "attempt": [21, 31, 156], "attent": [89, 90, 106, 107, 129], "attention_rel": [88, 90], "attn_activ": [90, 106], "attn_bia": 90, "attn_clamp": [90, 106], "attn_drop": 90, "attn_dropout": [90, 106], "attn_edge_enh": 90, "attn_head_dim": 90, "attn_mask": 90, "attr": [89, 106], "attr_name_ab": 130, "attr_name_rel": 130, "attribut": [87, 89, 111, 127, 155, 156, 161], "attributecoarsen": [86, 87], "author": [101, 103, 106, 134], "auto": 127, "autom": 153, "automat": [23, 89, 113, 117, 134, 153, 154, 156, 159], "auxiliari": [89, 156, 161], "avail": [23, 125, 126, 127, 149, 154, 155, 156, 158, 159, 161], "available_t": 154, "averag": [91, 122, 134], "avg": 87, "avg_pool": 87, "avg_pool_x": 87, "avoid": [150, 153], "awai": [1, 156], "azimiuth": 133, "azimuth": [45, 126, 133], "azimuth_kappa": 126, "azimuth_kei": 133, "azimuth_pr": 126, "azimuthreconstruct": [124, 126], "azimuthreconstructionwithkappa": [124, 126], "b": [34, 87, 91, 130, 156, 159, 161], "backbon": [119, 156], "backend": 159, "backward": [117, 134], "baikalgvd8": [92, 97], "bar": 132, "base": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 138, 140, 141, 142, 143, 145, 149, 150, 154, 155, 156, 157, 158, 160, 161], "base_config": [137, 139], "baseclass": [76, 82], "baseconfig": [139, 140, 141, 142, 143, 145], "basemodel": [140, 142, 143], "basi": 161, "basic": [1, 156], "batch": [0, 87, 90, 91, 98, 108, 119, 121, 123, 130, 138, 155, 157, 160], "batch_idx": [98, 119, 122, 123, 130], "batch_norm_momentum": 90, "batch_norm_runn": 90, "batch_siz": [130, 155, 156, 161], "batchnorm": [89, 90, 106], "batchnorm1d": [89, 90, 106], "becaus": [156, 161], "been": [79, 81, 134, 153, 161], "befor": [102, 112, 121, 127, 132], "behavior": 154, "behaviour": 132, "behind": [156, 161], "being": [21, 31, 81, 89, 125, 127, 155, 156, 161], "beitv2": 90, "belong": 130, "below": [116, 153, 154, 156, 157, 158, 159, 160, 161], "benchmark": 130, "besid": 155, "bessel": 134, "best": [0, 132, 153, 157, 160], "better": 153, "between": [39, 89, 98, 109, 110, 111, 112, 115, 119, 123, 127, 130, 132, 134, 142, 143, 156, 161], "bia": [89, 90, 129], "bias": [106, 156, 161], "big": [156, 161], "biject": 154, "binari": [123, 125, 134, 161], "binaryclassificationtask": [124, 125, 156, 161], "binaryclassificationtasklogit": [124, 125], "binarycrossentropyloss": [131, 134], "black": 153, "blob": [89, 90, 106, 130, 134, 156], "block": [0, 1, 88, 90, 108, 156, 157, 160], "block_rel": [88, 90], "boilerpl": 161, "bool": [35, 36, 37, 42, 81, 89, 90, 98, 100, 102, 104, 106, 107, 108, 113, 114, 116, 117, 118, 123, 129, 130, 132, 134, 138, 144, 147, 148, 149, 150], "boost": 37, "border": 31, "both": [0, 23, 119, 123, 127, 156, 157, 159, 160, 161], "boundari": 31, "box": [154, 156, 161], "branch": 153, "break_cyclic_recurs": [33, 37], "bucket": 129, "bug": [153, 156], "build": [0, 1, 86, 93, 111, 112, 116, 117, 118, 119, 140, 142, 143, 156, 157, 160, 161], "built": [0, 86, 113, 119, 155, 156, 157, 158, 159, 160, 161], "c": [21, 31, 34, 91, 112, 134, 156, 158], "c_": 134, "calcul": [81, 89, 90, 98, 106, 111, 114, 116, 117, 119, 123, 130, 133, 134, 155, 156, 161], "calculate_distance_matrix": [86, 130], "calculate_xyzt_homophili": [86, 130], "calibr": [35, 37], "call": [23, 37, 89, 91, 127, 132, 150, 154, 156, 159, 161], "callabl": [37, 90, 91, 93, 94, 95, 96, 97, 113, 122, 127, 140, 142, 143, 144, 149, 159], "callback": [1, 98, 131, 156, 161], "can": [0, 1, 19, 23, 26, 81, 89, 91, 113, 114, 119, 138, 140, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "cannot": [37, 121, 140, 145], "capabl": [0, 123, 157, 160], "captur": [156, 161], "care": 155, "carlo": 35, "cascad": 126, "case": [23, 81, 91, 117, 127, 154, 155, 156, 158, 161], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 156, "caveat": [156, 161], "cc": [45, 133], "cd": 158, "center": 111, "centr": 111, "central": [156, 158], "certain": 156, "cframe": [21, 31], "chain": [0, 1, 75, 78, 86, 98, 119, 123, 134, 157, 158, 160], "chang": [134, 153, 156, 161], "charg": [45, 89, 100, 116, 117, 121, 134, 155, 156, 161], "charge_column": 116, "charge_index": 117, "check": [35, 36, 37, 116, 138, 148, 149, 153, 159], "checkpoint": 156, "checkpointing_bas": 156, "chenli2049": 129, "cherenkov": [116, 117, 156, 159, 161], "choic": [155, 156, 161], "choos": [156, 158, 161], "chosen": [111, 117, 150, 155], "chunk": 154, "ckpt": [156, 161], "ckpt_path": 98, "claim": 134, "clamp": [90, 106], "clash": 150, "class": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 42, 47, 49, 76, 77, 79, 81, 82, 83, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 138, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155], "class_nam": [36, 143, 150, 155, 156, 161], "classif": [1, 86, 123, 124, 127, 134, 156, 161], "classifi": [125, 155, 156, 161], "classmethod": [118, 134, 140, 156, 161], "classvar": [140, 142, 143, 145], "clean": [81, 153, 158], "clean_up_data_object": 121, "cleaning_modul": [75, 80], "clear": [150, 155], "cli": 138, "clone": 158, "closest": 132, "cloud": [156, 161], "cls_tocken": 107, "cluster": [87, 90, 91, 100, 102, 104, 108, 116, 117, 121], "cluster_and_pad": [109, 117], "cluster_class": 117, "cluster_column": 117, "cluster_index": 91, "cluster_indic": 117, "cluster_on": [116, 117], "cluster_summarize_with_percentil": [109, 117], "clustered_x": 117, "cnn": [156, 161], "coarsen": [1, 86, 91], "code": [0, 31, 44, 45, 89, 90, 106, 113, 130, 142, 143, 154, 155, 156, 157, 159, 160, 161], "coincid": 116, "col": 114, "collabor": [1, 156, 161], "collect": [20, 33, 78, 134, 151, 156, 161], "column": [19, 47, 49, 77, 83, 85, 89, 93, 98, 100, 111, 113, 114, 116, 117, 121, 125, 126, 127, 130, 134, 154, 155, 156, 159, 161], "column_nam": [47, 154], "column_offset": 117, "columnmissingexcept": [84, 85], "com": [89, 90, 106, 107, 119, 129, 130, 134, 156, 158], "combin": [18, 34, 100, 123, 134, 142, 161], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [98, 127, 154, 155, 156, 161], "command": 138, "commit": 153, "common": [0, 1, 134, 142, 143, 146, 149, 155, 156, 157, 160], "compar": [156, 161], "comparison": [26, 134], "compat": [98, 119, 123, 127, 154, 155, 156, 158, 161], "competit": [89, 90, 94, 104, 107], "complementari": 130, "complet": [0, 86, 156, 157, 158, 160, 161], "complex": [0, 86, 156, 157, 160], "compon": [0, 1, 86, 89, 90, 91, 98, 118, 119, 123, 156, 157, 160, 161], "compos": [156, 161], "composit": 150, "comprehens": 156, "compress": 155, "compris": [0, 157, 160], "comput": [77, 90, 98, 112, 117, 123, 127, 130, 134, 155, 156], "compute_loss": [98, 123, 127], "compute_minkowski_distance_mat": [110, 112], "con": [156, 161], "concaten": [34, 102], "concept": 153, "conceptu": [154, 156], "concret": 156, "conda": 158, "condit": [119, 127, 134], "condition_on": 119, "confid": 156, "config": [1, 132, 134, 137, 138, 140, 141, 142, 143, 144, 145, 155, 156, 161], "config_dir": [156, 161], "configdict": [140, 142, 143, 145], "configur": [0, 1, 77, 78, 86, 98, 118, 137, 139, 140, 142, 143, 145, 150, 154, 156, 157, 160, 161], "configure_optim": 98, "conflict": 156, "conform": [140, 142, 143, 145], "conjunct": [19, 127], "conn": 156, "connect": [0, 89, 90, 106, 111, 112, 113, 116, 134, 155, 156, 157, 160], "consequ": 118, "consid": [81, 100, 155, 156, 159], "consist": [89, 138, 150, 153, 156, 161], "consortium": [0, 157, 160], "constant": [1, 3, 127, 130, 152, 155, 156, 161], "constitut": 155, "constraint": [98, 156], "construct": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 47, 49, 77, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 138, 141, 142, 143, 150, 154, 155, 156, 161], "constructor": [154, 155, 156], "consult": 161, "consum": 156, "consumpt": 155, "contain": [0, 6, 17, 18, 21, 34, 35, 38, 39, 46, 49, 76, 77, 78, 79, 81, 82, 83, 85, 98, 102, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 123, 127, 130, 134, 138, 154, 155, 156, 157, 159, 160, 161], "containeris": 1, "content": [154, 161], "continu": [0, 134, 156, 157, 160], "contract": 134, "contribut": [0, 134, 156, 157, 160], "contributor": 153, "conveni": [1, 153, 156, 161], "convers": [38, 39, 49, 116, 155, 156, 159], "convert": [0, 1, 21, 31, 34, 36, 45, 130, 154, 155, 156, 157, 158, 159, 160], "convex": 31, "convnet": [86, 99, 156], "convolut": [90, 101, 102, 103, 104, 108], "coo": 155, "coordin": [31, 93, 112, 116, 117, 130, 156], "copi": [134, 155], "copyright": 134, "core": 105, "correct": [130, 134, 158], "correspond": [34, 37, 102, 108, 113, 114, 117, 148, 155, 156, 159, 161], "cosh": 134, "could": [153, 156, 161], "count": 117, "counterpart": 155, "cpu": 77, "creat": [45, 113, 114, 116, 117, 140, 141, 145, 153, 155, 158, 161], "create_unique_id_filetyp": [44, 45], "creating_time_zero": [44, 45], "critic": [150, 156, 159], "cross": 134, "crossentropyloss": [131, 134], "csv": [142, 155, 156, 159, 161], "ctx": 134, "cuda": 158, "cumul": 117, "curated_datamodul": [1, 3], "curi": [0, 157, 160], "current": [45, 121, 132, 153, 156], "custom": [84, 113, 132, 161], "custom_label_funct": 113, "customdomcoarsen": [86, 87], "customis": 132, "d": [34, 112, 113, 116, 130, 153, 159], "damag": 134, "data": [0, 1, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 116, 117, 119, 121, 122, 123, 127, 129, 130, 133, 138, 140, 142, 145, 149, 152, 155, 156, 157, 158, 160, 161], "data_path": 113, "databas": [155, 156, 158], "dataclass": [1, 3, 35], "dataconfig": [142, 155], "dataconvert": [1, 3, 52, 156, 159], "datafram": [45, 93, 98, 154, 156, 159, 161], "dataload": [1, 3, 98, 113, 145, 155, 156, 161], "datamodul": [1, 3], "datarepresent": 119, "dataset": [1, 3, 25, 85, 100, 113, 121, 138, 142, 152, 159, 161], "dataset_1": [155, 156], "dataset_2": [155, 156], "dataset_3": [155, 156], "dataset_config": [137, 139, 156, 161], "dataset_config_path": [156, 161], "datasetconfig": [139, 142, 155, 161], "datasetconfigsav": 142, "datasetconfigsaverabcmeta": [139, 142], "datasetconfigsavermeta": [139, 142], "db": [155, 156], "ddp": [156, 161], "de": 34, "deactiv": [98, 127], "deal": 134, "debug": [150, 156], "decai": 107, "decor": [1, 137, 149], "dedic": 153, "deem": 37, "deep": [0, 90, 104, 107, 154, 156, 157, 158, 159, 160, 161], "deepcopi": 147, "deepcor": [22, 94], "deepic": [99, 107], "def": [154, 155, 156, 159, 161], "default": [21, 23, 31, 34, 49, 76, 77, 79, 81, 82, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 127, 129, 130, 132, 133, 134, 138, 140, 148, 155, 156], "default_prediction_label": [125, 126, 127, 161], "default_target_label": [125, 126, 127, 161], "defin": [31, 77, 81, 83, 91, 109, 110, 111, 113, 115, 117, 119, 142, 155, 156, 159, 161], "definit": [111, 113, 114, 116, 118, 127, 153, 156, 161], "deg": 114, "deg_scal": 90, "degre": [90, 114], "deleg": 150, "deliv": 98, "demo_ic": 97, "demo_wat": 97, "denot": [19, 132, 133, 154, 159], "dens": 91, "depend": [0, 89, 154, 155, 156, 157, 158, 160, 161], "deploi": [0, 1, 75, 77, 156, 157, 158, 160], "deploy": [0, 1, 77, 79, 80, 81, 82, 83, 113, 152, 156, 157, 159, 160, 161], "deployment_modul": [1, 75], "deploymentmodul": [75, 76, 77, 79, 82, 83], "deprec": [79, 147], "deprecated_method": [3, 50, 61, 75, 78], "deprecation_tool": [1, 137], "depth": [90, 107, 117, 129], "depth_rel": 107, "describ": [153, 156], "descript": [118, 138], "design": [1, 156, 159], "desir": 148, "detail": [1, 100, 118, 119, 127, 132, 155, 156, 158, 159, 161], "detector": [0, 1, 31, 78, 86, 94, 95, 96, 97, 113, 114, 116, 155, 156, 157, 160, 161], "detector_respons": 156, "determin": [76, 79, 82, 100], "develop": [0, 1, 153, 155, 156, 157, 158, 159, 160, 161], "deviat": [113, 114, 117], "devic": 77, "df": [45, 154], "dfg": [0, 157, 160], "diagon": 130, "dict": [23, 34, 37, 77, 93, 94, 95, 96, 97, 98, 107, 113, 114, 116, 118, 119, 122, 132, 138, 140, 142, 143, 144, 145, 147, 154, 155, 156, 159], "dictionari": [19, 34, 35, 37, 113, 114, 118, 140, 142, 143, 145, 154, 159], "differ": [0, 19, 21, 39, 41, 46, 47, 49, 78, 114, 153, 154, 155, 156, 157, 158, 159, 160, 161], "difficult": 155, "diffier": [156, 161], "digit": 89, "dim": [89, 90], "dim_emb": 89, "dim_in": [89, 90], "dim_out": 90, "dimenion": [102, 104, 108], "dimens": [89, 90, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 108, 117, 121, 127, 129, 130, 134, 159, 161], "dimension": [89, 90, 130, 155, 161], "dir": 148, "dir_i": 45, "dir_with_fil": [154, 159], "dir_x": 45, "dir_x_pr": 126, "dir_y_pr": 126, "dir_z": 45, "dir_z_pr": 126, "direct": [45, 104, 117, 125, 126, 127, 131, 133, 155, 159], "direction_kappa": 126, "directionreconstructionwithkappa": [124, 126, 156, 161], "directli": [0, 102, 108, 154, 156, 157, 159, 160, 161], "directori": [132, 148, 154, 156, 161], "dirti": 156, "discard_empty_ev": 81, "disco": 130, "disconnect": 155, "discuss": 153, "disk": [154, 155, 156], "distanc": [31, 111, 112, 114, 130], "distance_as_edge_featur": 114, "distribut": [91, 102, 119, 126, 130, 134, 158, 161], "distribution_strategi": 98, "ditto": 134, "diverg": 134, "divid": [76, 79, 82, 117, 127], "dl": [156, 161], "dnn": [25, 32], "do": [0, 77, 81, 134, 142, 143, 153, 155, 156, 157, 160, 161], "doc": 156, "docformatt": 153, "docker": 1, "docstr": 153, "document": [119, 134, 159, 161], "doe": [37, 125, 127, 143, 154, 155, 156, 161], "dom": [87, 91, 100, 116, 117, 121, 156, 161], "dom_i": [94, 116], "dom_tim": 116, "dom_x": [94, 116], "dom_z": [94, 116], "domain": [0, 1, 75, 156, 157, 160], "domandtimewindowcoarsen": [86, 87], "domcoarsen": [86, 87], "don": [132, 154], "done": [23, 91, 150, 153, 154, 156, 159], "dot": 90, "downgrad": 158, "download": 158, "downsid": 155, "drawn": [109, 110, 114, 115, 156, 161], "drhb": 107, "drop": [90, 101], "drop_path": 90, "drop_prob": 90, "dropout": [90, 100, 106, 108, 121], "dropout_prob": 90, "dropout_ratio": 101, "dropout_readout": 108, "droppath": [88, 90], "droput": 90, "dtype": [113, 114, 151, 155, 156, 161], "due": [155, 156, 161], "dummy_pid": [155, 156], "dump": [140, 142, 143, 154, 155, 156], "duplciat": 132, "duplic": 116, "dure": [90, 107, 113, 127, 132, 159], "dynam": [23, 90, 102, 103, 104, 108, 156, 161], "dynedg": [81, 83, 86, 99, 103, 104, 107, 108, 156, 161], "dynedge_arg": 107, "dynedge_jinst": [86, 99], "dynedge_kaggle_tito": [86, 99], "dynedge_layer_s": [102, 108, 156, 161], "dynedgeconv": [88, 90, 102, 108], "dynedgejinst": [99, 103], "dynedgetito": [99, 100, 104], "dyntran": [88, 90, 100, 104], "dyntrans1": 90, "dyntrans_layer_s": [100, 104], "e": [1, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 49, 77, 81, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 101, 105, 106, 111, 113, 114, 116, 117, 118, 119, 122, 123, 125, 126, 127, 130, 132, 133, 134, 140, 150, 153, 154, 155, 156, 158, 161], "each": [23, 34, 37, 45, 76, 77, 79, 82, 87, 89, 90, 91, 94, 95, 96, 97, 100, 102, 104, 108, 111, 113, 114, 116, 117, 121, 125, 127, 130, 132, 134, 148, 154, 155, 156, 159, 161], "earli": [132, 138], "early_stopping_pati": [98, 145], "earlystop": 132, "easi": [0, 154, 155, 156, 157, 160, 161], "easili": [1, 156, 161], "easy_model": [1, 86], "easysyntax": [86, 98, 119, 123], "ed": 134, "edg": [86, 89, 90, 91, 102, 103, 104, 106, 108, 109, 112, 113, 114, 115, 116, 130, 155, 156, 161], "edge_attr": [155, 156], "edge_definit": [113, 114], "edge_enh": [90, 106], "edge_index": [87, 90, 130, 155, 156], "edge_weight": 130, "edgeconv": 90, "edgeconvtito": [88, 90], "edgedefinit": [109, 110, 111, 112, 113, 114, 115, 156, 161], "edgelessgraph": [109, 114], "effect": [132, 153, 156, 161], "effort": [153, 155, 159], "either": [0, 21, 31, 90, 106, 134, 154, 156, 157, 160], "element": [19, 34, 37, 98, 119, 123, 130, 144, 154, 156, 159], "elementwis": 134, "elimin": 81, "els": [81, 133, 154, 159], "ema": 122, "emb_dim": 89, "embed": [86, 88, 100, 107, 121, 125, 127, 129], "embedding_dim": [100, 121], "empti": 81, "en": 156, "enabl": [0, 98, 116, 157, 160], "enable_edge_transform": [90, 106], "encod": [89, 106, 114, 130, 133], "encount": 156, "encourag": [153, 156], "end": [0, 1, 117, 132, 156, 157, 160], "energi": [45, 126, 127, 155, 156, 159], "energy_cascad": 126, "energy_cascade_pr": 126, "energy_pr": 126, "energy_reco": 83, "energy_sigma": 126, "energy_track": 126, "energy_track_pr": 126, "energyreconstruct": [124, 126, 156, 161], "energyreconstructionwithpow": [124, 126], "energyreconstructionwithuncertainti": [124, 126, 156], "energytcreconstruct": [124, 126], "engin": [0, 157, 160], "enough": 118, "ensemble_dataset": [155, 156], "ensembledataset": [142, 155, 156], "ensembleloss": [131, 134], "ensur": [37, 134, 150, 153, 158, 161], "entir": [118, 154, 156, 161], "entiti": [156, 161], "entri": [81, 83, 102, 108, 130, 138, 159], "entropi": 134, "enum": 37, "env": 158, "enviro": 158, "environ": 158, "ep": [151, 156, 161], "epoch": [122, 132, 138], "eps_lik": [137, 151], "equival": [37, 156, 161], "error": [134, 150, 153, 154, 156], "especi": 81, "establish": 161, "estim": 130, "etc": [0, 134, 150, 155, 156, 157, 159, 160], "eth": 130, "euclidean": [111, 130, 153], "euclideandistanceloss": [131, 134], "euclideanedg": [110, 111], "european": [0, 157, 160], "eval": [118, 158], "evalu": [119, 127], "event": [0, 1, 18, 28, 31, 45, 49, 81, 89, 91, 100, 113, 116, 117, 123, 127, 129, 130, 133, 134, 142, 154, 156, 157, 159, 160, 161], "event_no": [142, 155, 156, 161], "everi": [108, 119, 154, 156, 159], "everyth": [156, 161], "everytim": 153, "evt_id": 45, "exact": [103, 134, 161], "exactli": [130, 134, 150, 155], "exampl": [34, 87, 91, 117, 119, 130, 134, 142, 143, 154, 155, 158], "example_energy_reconstruction_model": [138, 156, 161], "except": [1, 152, 154], "exclud": 23, "exclude_kei": 23, "excluding_valu": 130, "exist": [0, 86, 119, 133, 142, 155, 156, 157, 160, 161], "exist_ok": [156, 161], "expand": [0, 156, 157, 160], "expans": 107, "expect": [81, 83, 113, 116, 155, 156, 161], "experi": [0, 1, 6, 77, 131, 154, 156, 157, 160], "experiment": 161, "expert": 1, "explain": 156, "explicitli": [140, 145], "exponenti": 134, "export": [154, 155, 156, 159, 161], "expos": 1, "express": [118, 134], "extend": [0, 1, 31, 154, 155, 157, 160], "extend_boundari": 31, "extens": [1, 148], "extern": [155, 156], "extra": [90, 114, 161], "extra_repr": [90, 118], "extra_repr_recurs": 118, "extract": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 45, 47, 48, 49, 81, 83, 127, 130, 154, 156, 159], "extractor": [1, 3, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 81, 83], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 47, 49, 154, 159], "f": [91, 154, 156, 161], "f1": 91, "f2": 91, "f_absorpt": 117, "f_scatter": 117, "factor": [90, 117, 130, 132, 134, 156, 161], "fail": 18, "fals": [36, 81, 89, 90, 102, 106, 107, 108, 113, 114, 116, 118, 129, 130, 132, 134, 156, 161], "fanci": 156, "fashion": 1, "fast": [0, 155, 156, 157, 160], "faster": [0, 154, 155, 157, 160], "favorit": 158, "favourit": 156, "fc": [90, 91], "featur": [1, 22, 81, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 125, 129, 130, 142, 153, 155, 156, 159, 161], "feature_idx": 117, "feature_map": [93, 94, 95, 96, 97, 159], "feature_nam": 117, "features_subset": [90, 100, 102, 104, 108, 121, 156, 161], "feedforward": 90, "feel": [156, 158], "fetch": 138, "few": [0, 86, 153, 154, 155, 156, 157, 160, 161], "fiber_id": 95, "field": [114, 119, 130, 133, 140, 145, 147, 154, 155, 156, 159], "figur": 0, "file": [0, 1, 19, 21, 31, 34, 36, 39, 42, 45, 46, 47, 48, 49, 76, 77, 79, 81, 82, 83, 113, 118, 132, 134, 138, 139, 140, 141, 142, 143, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161], "file_handl": 150, "file_path": [154, 159], "file_read": [154, 159], "file_typ": 45, "filehandl": 150, "filenam": 148, "fileread": 19, "filesi": [1, 137], "fill": 89, "fill_valu": [89, 106], "filter": [36, 42, 150, 159], "filter_ani": 36, "filter_nam": 36, "filter_none_nan": [44, 45], "filter_triggered_puls": 42, "filtermask": 36, "final": [0, 91, 132, 142, 155, 156, 157, 160], "find": [21, 31, 112, 148, 155, 156, 159, 161], "find_fil": 154, "find_i3_fil": [137, 148], "first": [45, 89, 100, 112, 116, 121, 132, 153, 156, 159], "fisher": 134, "fit": [98, 134, 145, 156, 161], "five": [114, 155], "fix": 156, "flag": [22, 45, 81], "flake8": 153, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flexibil": 161, "float": [31, 45, 81, 89, 90, 98, 100, 101, 106, 108, 111, 112, 113, 114, 116, 117, 121, 127, 132, 134, 142, 155], "float32": [113, 114], "float64": 134, "flow": [119, 127, 161], "flow_lay": [119, 127], "flowchart": [0, 157, 160], "fly": [155, 156], "fn": [37, 140, 144], "fn_kwarg": 144, "folder": [76, 154], "folk": 156, "follow": [98, 102, 108, 119, 123, 134, 153, 154, 155, 156], "forc": 158, "forg": 158, "fork": 153, "form": [0, 19, 86, 106, 125, 140, 145, 154, 155, 157, 160, 161], "format": [0, 1, 34, 38, 39, 45, 89, 118, 121, 142, 153, 154, 155, 156, 157, 158, 159, 160, 161], "forward": [87, 89, 90, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 116, 119, 121, 123, 127, 129, 134, 161], "found": [37, 117, 134, 155, 156], "four": 89, "fourier": 89, "fourierencod": [88, 89, 107, 129], "fraction": [101, 121], "frame": [20, 21, 23, 31, 33, 36, 37, 83], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 156, 157, 160], "free": [0, 134, 156, 157, 158, 160], "freeli": 156, "frequenc": 89, "friendli": [0, 154, 156, 157, 158, 160], "from": [0, 1, 19, 20, 21, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 42, 47, 48, 49, 89, 91, 93, 94, 95, 96, 97, 104, 107, 111, 113, 114, 116, 117, 118, 119, 122, 125, 126, 127, 130, 132, 133, 134, 140, 141, 143, 145, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "from_config": [118, 141, 142, 143, 155, 156, 161], "from_dataset_config": [156, 161], "full": [130, 156, 161], "full_edge_index": [86, 130], "fulli": [89, 106, 154, 156, 161], "func": 156, "function": [0, 21, 37, 39, 45, 49, 81, 83, 87, 90, 91, 93, 94, 95, 96, 97, 102, 106, 108, 113, 117, 118, 119, 127, 130, 134, 137, 142, 143, 144, 147, 148, 149, 151, 155, 157, 159, 160, 161], "fund": [0, 157, 160], "furnish": 134, "further": [81, 117], "furthermor": 121, "g": [1, 18, 19, 21, 31, 34, 37, 81, 83, 90, 91, 106, 113, 116, 117, 127, 130, 134, 150, 153, 155, 156, 158, 161], "galatict": 24, "gamma_1": 90, "gamma_2": 90, "gather": 117, "gather_cluster_sequ": [109, 117], "gaussian": 130, "gcd": [21, 31, 35, 79, 81, 82, 83, 148], "gcd_dict": [35, 37], "gcd_file": [6, 21, 31, 79, 81, 82, 83], "gcd_list": 148, "gcd_rescu": 148, "gelu": 90, "gener": [0, 23, 36, 76, 81, 82, 83, 89, 109, 110, 113, 114, 115, 117, 125, 134, 155, 156, 157, 159, 160, 161], "geometr": 156, "geometri": [93, 113, 161], "geometry_t": [93, 94, 95, 97, 159], "geometry_table_path": [94, 95, 97, 159], "germani": [0, 157, 160], "get": [19, 35, 93, 117, 132, 156, 161], "get_all_argument_valu": [139, 140], "get_all_grapnet_class": [139, 144], "get_field": [86, 130], "get_graphnet_class": [139, 144], "get_lr": 132, "get_member_vari": [33, 37], "get_metr": 132, "get_om_keys_and_pulseseri": [33, 35], "get_rw_landing_prob": [86, 130], "gev": 45, "gframe": [21, 31], "gggt": [119, 127], "git": 158, "github": [89, 90, 106, 107, 119, 127, 129, 130, 134, 156, 158], "given": [21, 31, 89, 91, 111, 127, 130, 134, 138, 155, 159], "glob": 154, "global": [2, 100, 102, 104, 108, 118, 156], "global_pooling_schem": [100, 102, 104, 108, 156, 161], "gnn": [1, 78, 86, 100, 101, 102, 103, 104, 106, 107, 108, 113, 119, 121, 129, 156, 161], "go": [153, 156], "googl": 153, "got": 154, "gpu": [98, 138, 156, 158, 161], "grab": 127, "grad_output": 134, "gradient_clip_v": 98, "grant": [0, 134, 157, 160], "graph": [0, 1, 86, 89, 90, 91, 93, 106, 110, 111, 112, 113, 115, 116, 117, 121, 130, 133, 153, 155, 156, 157, 160, 161], "graph_definit": [86, 109, 119, 142, 155, 156, 161], "graph_definiton": 155, "graphdefinit": [109, 110, 113, 114, 115, 119, 153, 155, 156], "graphnet": [0, 1, 2, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161], "graphnet_file_read": [3, 54, 154, 159], "graphnet_model": 132, "graphnet_modul": 79, "graphnet_writ": [3, 68], "graphnetearlystop": [131, 132], "graphnetfileread": 154, "graphneti3deploy": [78, 79], "graphnetwrit": 154, "grapnet": [144, 156], "greatli": [156, 161], "grit": [86, 89, 90, 99, 130], "grit_lay": 90, "grit_model": 106, "gritsparsemha": [88, 90], "grittransformerlay": [88, 90], "group": [0, 91, 156, 157, 160], "group_bi": [88, 91], "group_pulses_to_dom": [88, 91], "group_pulses_to_pmt": [88, 91], "groupbi": 91, "guarante": [156, 161], "guid": 153, "guidelin": 153, "gvd": 97, "h5": [47, 154], "h5_extractor": [17, 46], "h5extractor": [46, 47, 154], "h5hitextractor": [46, 47, 154], "h5py": 154, "h5truthextractor": [46, 47, 154], "ha": [0, 37, 45, 79, 81, 101, 117, 134, 148, 154, 155, 156, 157, 158, 159, 160, 161], "had": 159, "hadron": 126, "hand": [23, 155, 156], "handl": [23, 134, 138, 147, 150, 154, 155, 156], "handler": 150, "happen": [117, 155, 159], "hard": [31, 116], "has_extens": [137, 148], "has_icecube_packag": [137, 149], "has_jammy_flows_packag": [137, 149], "has_km3net_packag": [137, 149], "has_torch_packag": [137, 149], "have": [1, 23, 91, 107, 113, 117, 127, 153, 155, 156, 158, 159, 161], "head": [90, 100, 104, 106, 107, 127, 129, 161], "head_dim": 90, "head_siz": 107, "heavi": 154, "height": 130, "help": [81, 83, 138, 153, 155, 156, 159, 161], "here": [113, 153, 155, 156, 158, 159, 161], "herebi": 134, "hidden": [89, 90, 100, 102, 103, 106, 108, 121], "hidden_dim": [106, 107, 129], "hidden_featur": 90, "hidden_s": [121, 125, 126, 127, 156, 161], "high": [0, 156, 157, 160], "higher": 155, "highest_protocol": 154, "hint": 153, "hit": [45, 155, 156, 159], "hitdata": 47, "hlc": 116, "hlc_name": 116, "hnl": 45, "hold": [113, 117, 154, 159, 161], "holder": 134, "home": [94, 95, 97, 138, 154, 159], "homophili": 130, "hook": 153, "horizon": [0, 157, 160], "host": 159, "how": [109, 110, 115, 154, 156, 161], "howev": [155, 156], "html": [119, 127, 156], "http": [89, 90, 106, 107, 108, 111, 119, 127, 129, 130, 134, 153, 156, 158], "hull": 31, "human": 156, "hybrid": 24, "hyperparamet": [143, 156, 161], "i": [0, 1, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 45, 47, 49, 76, 79, 81, 82, 83, 87, 89, 90, 91, 101, 102, 106, 107, 108, 111, 113, 114, 116, 117, 119, 121, 123, 126, 127, 130, 132, 133, 134, 138, 140, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "i3": [1, 21, 31, 35, 36, 37, 76, 81, 83, 148, 156, 158], "i3_fil": [6, 21, 31], "i3_filt": [20, 33], "i3_list": 148, "i3calibr": 35, "i3deploy": [6, 75, 79, 80], "i3extractor": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "i3featureextractor": [17, 20, 81, 83], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6], "i3filt": [33, 36], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 81, 83], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [79, 80, 81, 82, 83], "i3mctre": 31, "i3modul": [1, 75, 77, 79], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [80, 81], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 54], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3truthextractor": [17, 20], "i3tumextractor": [17, 20], "ic": [104, 107, 116], "ice_arg": 116, "ice_transpar": [109, 117], "icecub": [1, 3, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 75, 78, 81, 82, 83, 86, 90, 92, 96, 104, 107, 116, 117, 149, 156, 161], "icecube86": [92, 94, 97], "icecube86prometheu": [92, 97], "icecube_deepcor": 97, "icecube_gen2": 97, "icecube_upgrad": [94, 97], "icecubedeepcor": [92, 94], "icecubedeepcore8": [92, 97], "icecubegen2": [92, 97], "icecubekaggl": [92, 94], "icecubeupgrad": [92, 94], "icecubeupgrade7": [92, 97], "icedemo81": [92, 97], "icemix": [86, 99], "icemixnod": [115, 116], "icetrai": [35, 37, 77, 78, 149, 158], "id": [45, 93, 113, 154, 155, 156, 159], "id_column": 116, "ideal": 161, "ident": [91, 93, 94, 95, 96, 97, 114, 127, 130], "identifi": [31, 116, 117, 130, 142, 143, 159], "identify_indic": [109, 117], "identitytask": [124, 125, 127], "ie": 100, "ignor": [37, 130], "illustr": [0, 153, 154, 157, 160], "imag": [0, 1, 153, 156, 157, 160, 161], "impact": 107, "implement": [1, 19, 21, 77, 82, 90, 100, 101, 102, 103, 104, 106, 107, 108, 111, 121, 129, 130, 134, 153, 154, 156, 161], "impli": 134, "import": [0, 1, 86, 137, 154, 155, 156, 157, 159, 160, 161], "impos": 98, "improv": [0, 1, 138, 156, 157, 160, 161], "in_dim": 90, "in_featur": 90, "inaccur": 117, "inact": 113, "includ": [1, 90, 98, 116, 134, 140, 153, 155, 156, 159, 161], "include_dynedg": 107, "incom": 114, "incompat": 156, "incorpor": 89, "increas": [0, 132, 157, 160], "indent": 118, "independ": [76, 79, 82, 154], "index": [1, 37, 91, 93, 100, 112, 117, 121, 130, 132, 155, 156, 161], "index_column": [142, 155, 156], "indic": [45, 85, 91, 100, 112, 114, 117, 121, 127, 130, 132, 134, 138, 153, 156, 161], "indicesfor": 35, "indici": 35, "individu": [0, 91, 102, 130, 155, 157, 160, 161], "induct": 106, "industri": [0, 157, 160], "inelast": 126, "inelasticity_pr": 126, "inelasticityreconstruct": [124, 126], "inf": 130, "infer": [0, 1, 75, 77, 78, 81, 83, 98, 127, 156, 157, 158, 160], "inference_modul": [75, 80], "info": [150, 156], "inform": [18, 19, 21, 23, 31, 39, 42, 47, 49, 113, 116, 117, 118, 154, 155, 156, 159, 161], "ingest": [0, 1, 92, 157, 160], "inherit": [19, 21, 37, 93, 116, 134, 150, 154, 155, 156, 161], "init_fn": [142, 143], "init_predict_tqdm": 132, "init_test_tqdm": 132, "init_train_tqdm": 132, "init_validation_tqdm": 132, "init_valu": 90, "initail": 41, "initi": [36, 42, 44, 76, 79, 82, 90, 100, 107, 112, 117], "initial_st": 49, "initialis": [143, 156, 161], "injection_azimuth": [155, 156], "injection_bjorkeni": [155, 156], "injection_bjorkenx": [155, 156], "injection_column_depth": [155, 156], "injection_energi": [155, 156], "injection_interaction_typ": [155, 156], "injection_position_i": [155, 156], "injection_position_x": [155, 156], "injection_position_z": [155, 156], "injection_typ": [155, 156], "injection_zenith": [155, 156, 161], "innov": [0, 157, 160], "inptut": 117, "input": [76, 79, 81, 82, 83, 89, 90, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 116, 117, 119, 121, 125, 127, 129, 130, 140, 145, 147, 154, 155, 156, 159, 161], "input_dim": [90, 161], "input_dir": [154, 159], "input_featur": [93, 113, 114], "input_feature_nam": [93, 113, 114, 116], "input_fil": 76, "input_nam": 117, "ins": 93, "insert": 117, "insid": 155, "inspect": [156, 161], "inspir": [108, 130], "instal": [153, 156], "instanc": [19, 21, 31, 37, 39, 41, 47, 49, 113, 118, 133, 141, 143, 154, 155, 156, 161], "instanti": [143, 154, 155, 159], "instead": [21, 31, 79, 119, 134, 156, 161], "int": [25, 28, 36, 45, 76, 79, 82, 89, 90, 91, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 138, 142, 145, 150, 154, 161], "integ": [100, 102, 103, 108, 134, 155, 156], "integr": 161, "intend": [100, 121, 156], "interact": [45, 126, 133, 155, 156], "interaction_kei": 133, "interaction_tim": 126, "interaction_time_pr": 126, "interaction_typ": 133, "interchang": [156, 161], "interfac": [0, 142, 143, 156, 157, 158, 159, 160], "interim": 154, "intermedi": [0, 1, 101, 156, 157, 160], "intern": [3, 17, 39], "internal_parquet_read": [3, 54], "interpol": [117, 132], "interpret": 125, "interv": [89, 156, 161], "intract": 155, "introduc": 156, "introduct": [119, 127], "intuit": [150, 161], "invers": 127, "invert": 127, "io": [119, 127, 153, 156], "iop": 156, "iopscienc": 156, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_cc_flag": 45, "is_gcd_fil": [137, 148], "is_graphnet_class": [139, 144], "is_graphnet_modul": [139, 144], "is_i3_fil": [137, 148], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_typ": [33, 37], "iseecub": [86, 128], "isinst": 154, "isn": 37, "isol": 114, "issu": [156, 161], "its": [37, 45, 121, 155, 156, 161], "itself": [37, 127, 154, 156, 161], "iv": 134, "jammy_flow": [119, 127, 149], "job": 159, "join": [154, 156], "json": [34, 142, 155, 156], "just": [91, 154, 155, 156, 161], "k": [90, 100, 102, 104, 108, 111, 114, 121, 130, 134], "kaggl": [89, 90, 94, 104, 107], "kappa": [126, 134], "kappa_switch": 134, "karg": [118, 122], "keep": [19, 21, 36, 39, 41, 47, 49, 116, 154], "kei": [23, 34, 35, 37, 90, 91, 116, 133, 142, 143, 154, 155, 156, 159], "kept": 36, "key_padding_mask": 90, "keyword": [132, 140, 145], "kind": [134, 159], "km3db": 158, "km3net": [3, 17, 41, 42, 44, 45, 149, 156, 161], "km3net_util": [40, 44], "km3netextractor": [17, 40, 42], "km3netfullpulseextractor": [40, 42], "km3netpulseextractor": [17, 40], "km3netread": [3, 54], "km3netroot": 41, "km3nettextractor": 41, "km3nettriggpulseextractor": [40, 42], "km3nettruthextractor": [17, 40], "km3pipe": 158, "kmpipe": 158, "knn": 114, "knn_graph_batch": [86, 130], "knndistanceedg": [110, 111], "knnedg": [110, 111], "knngraph": [109, 114, 155, 156, 161], "knngraphrrwp": [109, 114], "knngraphrws": [109, 114], "know": 159, "known": 91, "kstep": [106, 130], "kv": 90, "kwarg": [36, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 134, 140, 142, 143, 150], "l": [90, 117, 130], "label": [1, 25, 28, 98, 101, 113, 123, 127, 131, 142], "lai": 156, "lambda": [118, 156, 161], "land": [130, 156], "larg": [0, 100, 134, 155, 157, 160], "larger": 154, "largest": 117, "last": [102, 108, 121, 125, 126, 127, 132, 161], "last_epoch": 132, "lastli": 159, "latent": [89, 100, 102, 104, 107, 108, 119, 121, 125, 126, 127, 129, 161], "latest": 156, "layer": [0, 86, 88, 89, 91, 100, 101, 102, 103, 104, 106, 107, 108, 119, 121, 125, 126, 127, 157, 160], "layer_s": 90, "layer_size_scal": 103, "layernorm": [90, 106], "ldot": [87, 91], "lead": [155, 156], "learn": [0, 1, 81, 83, 119, 123, 125, 127, 132, 154, 156, 157, 158, 159, 160, 161], "learnabl": [90, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 121, 127, 129, 161], "learnedtask": [124, 127], "least": [153, 155, 156], "leav": 132, "len": [117, 130, 154, 155], "length": [37, 116, 117, 130, 132], "less": [156, 161], "let": [156, 159, 161], "level": [0, 18, 31, 36, 49, 87, 91, 107, 123, 150, 155, 156, 157, 159, 160], "leverag": 1, "lex_sort": [109, 117], "liabil": 134, "liabl": 134, "liamma": [89, 90, 106, 130], "lib": [94, 95, 97, 138], "librari": 158, "licens": 134, "lift": 154, "light": 112, "lightn": [132, 156, 161], "lightningmodul": [89, 90, 118, 132, 150, 156, 161], "liheng": 106, "like": [19, 37, 91, 112, 119, 127, 130, 134, 151, 153, 155, 156, 158, 161], "limit": [116, 134], "line": [132, 138, 154, 155, 159], "linear": [89, 90, 102, 108, 117, 161], "linearedgeencod": [88, 89], "linearli": 132, "linearnodeencod": [88, 89], "liquid": 95, "liquido": [3, 17, 47, 86, 92, 154], "liquido_read": [3, 54], "liquido_v1": [92, 95], "liquidoread": 154, "list": [6, 18, 23, 31, 34, 36, 37, 45, 47, 49, 76, 77, 79, 81, 82, 83, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 134, 142, 144, 145, 148, 150, 154, 155, 159], "list_all_submodul": [139, 144], "ljvmiranda921": 153, "load": [0, 77, 118, 122, 140, 142, 155, 156, 157, 159, 160], "load_from_checkpoint": [156, 161], "load_modul": 118, "load_state_dict": [118, 122, 156, 161], "loaded_model": [156, 161], "local": [87, 94, 95, 97, 116, 138, 156, 158, 161], "locat": 117, "log": [0, 1, 126, 131, 132, 134, 137, 155, 156, 157, 160, 161], "log10": [127, 156, 161], "log_cmk": 134, "log_cmk_approx": 134, "log_cmk_exact": 134, "log_every_n_step": [98, 156, 161], "log_fold": [36, 150], "log_model": [156, 161], "logcmk": [131, 134], "logcoshloss": [131, 134, 156, 161], "logger": [19, 36, 76, 77, 98, 111, 118, 133, 137, 150, 156, 161], "loggeradapt": 150, "logic": 155, "logit": [125, 134, 161], "logrecord": 150, "long": 155, "longer": 116, "longev": [0, 157, 160], "longtensor": [87, 91, 130], "look": [23, 155, 156], "lookup": 144, "loop": [89, 130, 156, 161], "loss": [98, 113, 119, 123, 127, 132, 134, 138, 156, 161], "loss_factor": 134, "loss_funct": [1, 127, 131, 156, 161], "loss_weight": [113, 127, 156, 161], "loss_weight_column": [113, 142], "loss_weight_default_valu": [113, 142], "loss_weight_t": 142, "lossfunct": [127, 131, 134, 156], "lot": 153, "lower": [0, 156, 157, 160], "lr": [156, 161], "m": [112, 117, 134], "ma": 106, "machin": 1, "made": [156, 161], "maeloss": [131, 134], "magnitud": [0, 157, 160], "mai": [77, 116, 127, 155, 156, 158, 161], "main": [1, 89, 90, 99, 106, 130, 153, 156], "mainli": 37, "major": [123, 127], "make": [0, 116, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "makedir": [156, 161], "manag": [0, 131, 154, 156, 157, 160], "mandatori": 89, "mangl": 37, "mani": [154, 156, 161], "manipul": [34, 109, 110, 115], "map": [22, 23, 94, 95, 96, 97, 113, 114, 127, 156, 159, 161], "mari": [0, 157, 160], "martin": 101, "mask": [113, 130], "masked_entri": 130, "master": 134, "match": [113, 148, 151, 154], "math": [1, 90, 137], "mathbb": 91, "mathbf": [87, 91], "matic": 127, "matric": [90, 130], "matrix": [90, 91, 106, 111, 112, 117, 130, 134, 155], "max": [87, 90, 102, 104, 108, 134, 138, 156, 161], "max_activ": 116, "max_epoch": [98, 156, 161], "max_length": 116, "max_pool": [87, 91], "max_pool_x": [87, 91], "max_puls": 116, "max_rel_po": 129, "maximum": [91, 116, 117, 127, 129, 138], "mc": 23, "mc_truth": [19, 49, 155, 156], "mctree": [31, 35], "md": 156, "mean": [0, 86, 90, 102, 104, 106, 108, 117, 130, 134, 143, 154, 155, 156, 157, 158, 160, 161], "meaning": 89, "meant": [154, 156, 161], "measur": [116, 117, 130, 156, 159], "mechan": 90, "meet": 127, "member": [21, 23, 31, 37, 116, 142, 143, 150, 154, 159], "memori": 155, "mention": 156, "merchant": 134, "merg": [134, 154, 155, 159], "merge_fil": [154, 159], "messag": [90, 106, 132, 150, 156], "messagepass": 90, "metaclass": [142, 143], "metaproject": 158, "meter": 156, "meth": 156, "method": [19, 21, 31, 33, 34, 35, 37, 77, 79, 90, 91, 93, 106, 107, 117, 126, 134, 154, 156, 161], "metric": [100, 102, 104, 108, 112, 121, 132, 156, 161], "mha": [90, 106], "might": [155, 156, 161], "mileston": [132, 156, 161], "min": [87, 91, 102, 104, 108, 156, 161], "min_pool": [87, 88, 91], "min_pool_x": [87, 88, 91], "mind": 156, "minh": 101, "minim": [98, 119, 155, 156, 159, 161], "minimum": [116, 127], "minkowski": [109, 110], "minkowskiknnedg": [110, 112], "minu": 134, "mise": 134, "miss": 85, "mit": 134, "mix": 18, "ml": [0, 1, 157, 160], "mlp": [88, 89, 90, 102, 107, 108, 129, 161], "mlp_dim": [89, 129], "mlp_ratio": [90, 107], "mode": [98, 127], "model": [0, 1, 45, 75, 77, 78, 81, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 138, 140, 142, 143, 145, 152, 154, 155, 157, 158, 159, 160], "model_config": [77, 81, 83, 137, 139, 140, 142, 145, 156, 161], "model_config_path": [156, 161], "model_hnl": 45, "model_nam": [81, 83], "modelconfig": [77, 81, 83, 118, 139, 142, 143], "modelconfigsav": 143, "modelconfigsaverabc": [139, 143], "modelconfigsavermeta": [139, 143], "modif": [156, 161], "modifi": [134, 156, 161], "modul": [0, 6, 17, 18, 37, 38, 42, 46, 75, 76, 78, 79, 80, 81, 82, 85, 86, 89, 90, 92, 99, 106, 109, 110, 112, 113, 114, 115, 118, 120, 124, 128, 131, 137, 139, 142, 143, 144, 145, 149, 154, 156, 157, 160, 161], "modular": [0, 86, 154, 156, 157, 160, 161], "moduletyp": 144, "momentum": 90, "mont": 35, "more": [1, 100, 118, 142, 143, 150, 155, 156, 161], "most": [0, 1, 112, 127, 154, 157, 159, 160, 161], "mryab": 134, "mseloss": [131, 134], "msg": 150, "mulitpli": 134, "multi": [90, 102, 108, 123], "multiclassclassificationtask": [124, 125, 156], "multiheadattent": 90, "multiindex": 159, "multipl": [18, 89, 117, 132, 134, 142, 150, 161], "multipli": [90, 132], "multiprocess": 154, "muon": [25, 45, 155, 161], "must": [18, 87, 90, 132, 134, 153, 154, 155, 156, 159], "my": [155, 156, 159], "my_custom_label": [155, 156], "my_fil": [154, 159], "my_geometry_t": 159, "my_outdir": [154, 159], "my_tabl": 159, "mycustomlabel": [155, 156], "mydetector": 159, "myexperi": 159, "myextractor": 159, "mygraphnetmodel": 161, "mymodel": 161, "mypi": 153, "mypicklewrit": 154, "myread": 159, "n": [19, 87, 91, 112, 130, 134, 155, 156, 159], "n_1": 91, "n_b": 91, "n_cluster": 117, "n_event": [154, 159], "n_featur": [89, 107, 129], "n_freq": 89, "n_head": [90, 100, 104, 106], "n_layer": 106, "n_pmt": 117, "n_puls": [116, 159], "n_rel": 107, "n_worker": [76, 79, 82], "name": [18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 42, 45, 47, 49, 77, 81, 83, 89, 93, 94, 95, 96, 97, 113, 114, 116, 117, 119, 121, 127, 130, 133, 138, 140, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "namespac": [118, 142, 143], "nan": [45, 117], "narg": 138, "nb_dom": 130, "nb_input": [100, 101, 102, 103, 104, 105, 106, 108, 121, 125, 126, 127, 156, 161], "nb_intermedi": 101, "nb_nearest_neighbour": [111, 112, 114, 155, 156, 161], "nb_neighbor": 90, "nb_neighbour": [100, 102, 104, 108, 121, 156, 161], "nb_output": [101, 103, 105, 106, 116, 125, 126, 127, 156, 161], "nb_repeats_allow": 150, "nc": 45, "ndarrai": [31, 45, 113, 114, 117, 154], "nearest": [100, 102, 104, 108, 111, 112, 114, 121, 130, 156, 161], "nearli": 161, "necessari": [0, 34, 153, 157, 158, 160], "need": [0, 34, 86, 89, 118, 121, 134, 147, 154, 155, 156, 157, 158, 159, 160, 161], "negat": 91, "neighbour": [90, 100, 102, 104, 108, 111, 112, 114, 121, 130, 156, 161], "nest": 34, "nester": 34, "network": [1, 90, 101, 106, 120, 161], "neural": [1, 120, 161], "neutral": 45, "neutrino": [0, 1, 21, 45, 49, 90, 104, 107, 117, 129, 155, 156, 157, 159, 160, 161], "new": [0, 1, 18, 90, 116, 140, 145, 153, 154, 156, 157, 160, 161], "new_features_nam": 116, "new_phras": 147, "nfdi": [0, 157, 160], "nn": [0, 86, 89, 90, 106, 111, 114, 157, 160, 161], "no_weight_decai": 107, "node": [86, 87, 89, 90, 91, 100, 101, 102, 104, 106, 108, 109, 110, 111, 113, 114, 121, 130, 155, 156, 161], "node_definit": [113, 114, 155, 156, 161], "node_feature_nam": [116, 155, 156, 161], "node_rnn": [86, 100, 120], "node_truth": 142, "node_truth_t": [142, 156], "nodeasdomtimeseri": [115, 116], "nodedefinit": [113, 114, 115, 116, 156, 161], "nodesaspuls": [113, 115, 116, 155, 156, 161], "nodetimernn": 121, "nois": [22, 35, 45, 81, 156], "non": [34, 37, 100, 114, 127, 134, 156], "none": [21, 23, 31, 35, 36, 37, 45, 76, 77, 83, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 107, 108, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 127, 130, 132, 134, 138, 140, 141, 142, 144, 148, 150, 154, 155, 156, 159, 161], "noninfring": 134, "nope": 106, "norm": [90, 106], "norm_edg": [90, 106], "norm_lay": [89, 90], "normal": [89, 90, 102, 106, 108, 117, 119, 127, 159], "normalizing_flow": [1, 86], "normalizingflow": [86, 119, 127], "northeren": 25, "note": [117, 143, 156, 158], "notebook": 153, "notic": [130, 134], "notimplementederror": 154, "now": [156, 159, 161], "np": 154, "null": [36, 155, 156, 161], "nullspliti3filt": [33, 36], "num": [114, 138], "num_class": 134, "num_edg": 155, "num_edge_featur": 155, "num_featur": 155, "num_head": [90, 129], "num_lay": [121, 129], "num_nod": [130, 155], "num_puls": 116, "num_register_token": 129, "num_row": [113, 155], "num_work": [154, 155, 156, 159, 161], "number": [0, 19, 76, 79, 82, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 125, 126, 127, 129, 130, 132, 138, 154, 155, 156, 157, 159, 160], "numer": [127, 159], "numpi": 117, "numu": 133, "numucc": 133, "o": [0, 95, 127, 154, 156, 157, 158, 160, 161], "obj": [34, 37, 144], "object": [6, 23, 34, 37, 87, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 138, 150, 155, 156, 161], "observ": 159, "observatori": 21, "obtain": [91, 114, 134], "oerso": 103, "offer": 155, "offlin": 158, "offset": [116, 117], "ofintern": 38, "often": 155, "old": 89, "old_phras": 147, "om": [35, 37], "omit": 161, "on_fit_end": 132, "on_train_end": 122, "on_train_epoch_end": 132, "on_train_epoch_start": 132, "on_validation_end": 132, "onc": [150, 156, 158], "one": [21, 31, 81, 91, 142, 143, 148, 153, 154, 155, 156, 159, 161], "ones": [117, 122], "onli": [0, 1, 36, 86, 91, 100, 116, 117, 127, 140, 143, 145, 149, 154, 155, 156, 157, 158, 159, 160, 161], "open": [0, 153, 154, 155, 156, 157, 158, 159, 160], "opensciencegrid": 158, "oper": [87, 90, 99, 102], "oppos": 155, "optic": [37, 117], "optim": [98, 119, 122, 132, 156, 161], "optimis": [0, 1, 156, 157, 160, 161], "optimizer_class": [119, 156, 161], "optimizer_closur": 122, "optimizer_kwarg": [119, 156, 161], "optimizer_step": 122, "optimzi": 119, "option": [21, 31, 42, 77, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 102, 104, 107, 108, 112, 113, 114, 116, 117, 118, 119, 121, 127, 130, 132, 134, 137, 138, 140, 142, 148, 154, 155, 156, 159, 161], "orca": [86, 92, 97, 158], "orca115": [92, 96], "orca150": [92, 97, 161], "orca150superdens": [92, 97], "orca6": [92, 96], "orca_150": 97, "order": [0, 34, 76, 79, 82, 87, 116, 130, 134, 156, 157, 160], "ordinari": 161, "ordinarili": 159, "org": [106, 108, 111, 134, 156, 158], "orient": [0, 86, 157, 160], "origin": [89, 90, 106, 107, 130, 155, 161], "ot": 134, "other": [26, 111, 134, 153, 155, 156, 161], "otherwis": [37, 134], "our": [156, 159], "out": [102, 124, 134, 150, 153, 154, 155, 156, 159, 161], "out_dim": [89, 90], "out_featur": 90, "outdir": [154, 156, 159, 161], "outer": 34, "outlin": [159, 161], "output": [19, 76, 77, 89, 90, 98, 100, 101, 102, 103, 105, 106, 108, 113, 116, 117, 121, 125, 126, 127, 142, 143, 154, 159, 161], "output_dim": [89, 161], "output_dir": 154, "output_file_path": 154, "output_fold": [6, 76], "outsid": 153, "over": [112, 116, 154, 155], "overal": 134, "overhead": 159, "overrid": 132, "overridden": 116, "overview": [0, 157, 160], "overwrit": [77, 89, 132], "overwrite_old_attr": 89, "overwritten": [138, 140], "own": [153, 156], "ownership": 153, "p": [35, 134, 154, 158], "p11003": 156, "packag": [0, 1, 127, 144, 148, 149, 153, 156, 157, 160, 161], "pad": [45, 89, 106, 113, 117, 130], "pad_to_full_graph": [89, 106], "padding_valu": [25, 28, 45, 130], "pair": [21, 31, 89, 90, 106], "pairwis": [112, 130], "panda": [154, 156, 159, 161], "paper": [106, 134], "paradigm": [156, 161], "parallel": [154, 159], "param": [39, 41, 47, 49, 130], "paramet": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151], "parent": [34, 156], "parent_kei": 34, "parquet": [1, 3, 10, 39, 48, 49, 94, 95, 97, 154, 155, 156, 158, 159], "parquet_dataset": [10, 12, 155], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 63], "parquet_writ": [3, 68], "parquetdataset": [154, 156], "parquetextractor": [38, 39, 47], "parquetwrit": [39, 154, 155, 159], "pars": [23, 137, 138, 139, 140, 145, 154], "part": [78, 154, 156, 158, 159], "particl": [31, 45, 133, 155, 156, 159], "particlenet": [86, 99], "particular": [134, 153], "particularli": [155, 156, 161], "partli": [0, 157, 160], "pass": [89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 113, 114, 119, 121, 123, 127, 129, 132, 134, 153, 154, 155, 156, 159, 161], "path": [21, 31, 76, 79, 81, 82, 83, 90, 113, 118, 122, 130, 132, 138, 140, 141, 142, 148, 154, 155, 156, 158, 159, 161], "path_to_arrai": 159, "path_to_geometry_t": 159, "patienc": 138, "pd": [154, 156, 159], "pdf": [111, 119], "pdg": [45, 133], "pdg_id": 45, "pe": 130, "pe_nam": 89, "penal": 134, "peopl": [156, 161], "pep257": 153, "pep8": 153, "per": [23, 90, 91, 100, 121, 127, 134, 155, 156], "percentil": [116, 117], "percentileclust": [115, 116], "perceptron": [90, 102, 108], "perform": [0, 87, 89, 90, 91, 98, 99, 100, 102, 104, 108, 116, 119, 121, 122, 123, 125, 127, 156, 157, 158, 160, 161], "permiss": 134, "permit": 134, "person": 134, "perturb": [113, 114], "perturbation_dict": [113, 114], "philip": 106, "philosophi": [156, 161], "photon": [49, 155, 156], "phrase": 147, "phyic": 1, "physic": [0, 1, 21, 35, 37, 75, 81, 83, 86, 124, 127, 155, 156, 157, 160, 161], "physicist": [0, 1, 156, 157, 160], "physicst": 1, "pick": 155, "pickl": [154, 156, 159, 161], "pid": [133, 142, 155], "pid_kei": 133, "piecewiselinearlr": [131, 132, 156, 161], "pip": [153, 158], "pisa": 27, "place": [89, 107, 147, 153], "plai": 1, "plane": [24, 134], "pleas": [79, 154, 155, 156, 159], "plot": 155, "plug": 1, "pmt": [91, 117, 155, 156], "point": [30, 119, 133, 134, 156, 159, 161], "pole": 104, "pone": 97, "pone_triangl": 97, "ponetriangl": [92, 97], "pool": [86, 87, 88, 90, 100, 102, 104, 106, 108], "pop_default": 138, "popular": 161, "port": 156, "portabl": [0, 156, 157, 160, 161], "portion": 134, "pos_i": 96, "pos_x": [96, 156], "pos_z": 96, "posit": [81, 89, 90, 91, 106, 107, 114, 117, 126, 129, 130, 140, 145, 155, 159], "position_encod": 106, "position_x_pr": 126, "position_y_pr": 126, "position_z_pr": 126, "positionreconstruct": [124, 126], "possibl": [0, 34, 153, 157, 159, 160], "post": [100, 102, 104, 108], "post_processing_layer_s": [100, 102, 104, 156, 161], "posterior": 119, "pow": [156, 161], "power": [154, 156, 161], "pr": 121, "practic": [0, 153, 157, 160], "pre": [0, 93, 113, 133, 153, 155, 156, 157, 160, 161], "pre_configur": [1, 3], "precis": 134, "precommit": 153, "pred": [98, 123, 127], "pred_head_activ": 106, "pred_head_lay": 106, "pred_head_pool": 106, "predict": [0, 26, 30, 32, 81, 83, 90, 98, 101, 106, 107, 119, 123, 125, 127, 134, 156, 157, 160, 161], "predict_as_datafram": [98, 156, 161], "prediction_column": [77, 83, 98], "prediction_kei": 134, "prediction_label": [98, 127, 156, 161], "prefer": 112, "prepar": [0, 134, 155, 157, 160], "preprocess": 156, "present": [21, 31, 36, 130, 138, 148, 149, 155, 161], "previou": [132, 156, 161], "primari": [155, 156], "primary_hadron_1_direction_phi": [155, 156], "primary_hadron_1_direction_theta": [155, 156], "primary_hadron_1_energi": [155, 156], "primary_hadron_1_position_i": [155, 156], "primary_hadron_1_position_x": [155, 156], "primary_hadron_1_position_z": [155, 156], "primary_hadron_1_typ": [155, 156], "primary_lepton_1_direction_phi": [155, 156], "primary_lepton_1_direction_theta": [155, 156], "primary_lepton_1_energi": [155, 156], "primary_lepton_1_position_i": [155, 156], "primary_lepton_1_position_x": [155, 156], "primary_lepton_1_position_z": [155, 156], "primary_lepton_1_typ": [155, 156], "principl": [1, 156], "print": [118, 132, 150], "prior": 155, "prioriti": 153, "pro": [156, 161], "prob": 130, "probabl": [89, 90, 106, 114, 130, 134, 161], "problem": [0, 111, 153, 155, 156, 157, 160, 161], "process": [1, 81, 89, 93, 100, 102, 104, 108, 153, 154, 156, 158, 161], "process_posit": 132, "produc": [89, 119, 123, 133, 155, 156], "product": 90, "programm": [0, 157, 160], "progress": 132, "progressbar": [131, 132, 156, 161], "proj_drop": 90, "project": [0, 90, 153, 156, 157, 160, 161], "prometheu": [3, 17, 49, 86, 92, 155, 156, 161], "prometheus_dataset": [1, 72], "prometheus_extractor": [17, 48], "prometheus_read": [3, 54], "prometheusextractor": [48, 49], "prometheusfeatureextractor": [48, 49], "prometheustruthextractor": [48, 49], "prompt": 156, "prone": 156, "proof": [156, 161], "properti": [19, 26, 37, 91, 93, 98, 105, 116, 117, 127, 133, 141, 150, 154], "propos": 90, "protocol": 154, "prototyp": 95, "proven": [19, 21, 39, 41, 47, 49, 154], "provid": [0, 1, 81, 86, 107, 113, 118, 119, 134, 153, 154, 155, 156, 157, 158, 160, 161], "pth": [156, 161], "public": 93, "publish": [134, 156, 161], "puls": [18, 22, 23, 35, 37, 42, 49, 81, 87, 91, 107, 113, 116, 117, 123, 129, 130, 155, 156, 159, 161], "pulsemap": [22, 81, 83, 142, 155, 156], "pulsemap_extractor": [81, 83], "pulseseri": 35, "pulsmap": [81, 83], "punch4nfdi": [0, 157, 160], "pure": [19, 20, 23, 37], "purpos": [0, 86, 134, 157, 159, 160], "put": [156, 161], "py": [89, 90, 106, 130, 134, 156], "py3": 158, "pydant": [140, 142, 143, 145], "pydantic_cor": [140, 145], "pydocstyl": 153, "pyg": [130, 155, 156, 161], "pylint": 153, "python": [0, 1, 19, 20, 23, 34, 37, 153, 156, 157, 158, 160, 161], "python3": [94, 95, 97, 138], "pytorch": [132, 156, 158, 161], "pytorch_lightn": [98, 132, 150, 156, 161], "pytorchlightn": 156, "q": 90, "qk_scale": 90, "qkv_bia": 90, "qualiti": [0, 156, 157, 160], "quantiti": [27, 127, 130, 156], "queri": [90, 155, 156], "query_t": 155, "queso": 28, "question": 156, "quick": [117, 156], "r": [91, 111, 154, 156, 158, 159], "radial": 111, "radialedg": [110, 111], "radiat": [116, 117, 156, 161], "radiu": [111, 156], "rais": [21, 23, 31, 118, 119, 140, 145, 154], "random": [3, 63, 89, 106, 114, 116, 130, 142, 155, 156], "randomli": [113, 114, 143, 156, 161], "rang": [127, 157, 159, 160, 161], "rare": 154, "rasmu": [0, 103, 157, 160], "rate": [119, 132], "rather": [127, 150, 156, 161], "ratio": [90, 107], "raw": [0, 116, 117, 155, 156, 157, 159, 160, 161], "re": [141, 155, 156, 159, 161], "reach": [155, 159], "read": [0, 34, 93, 102, 124, 154, 155, 156, 157, 159, 160], "read_csv": 159, "read_sql": 156, "readabl": 156, "reader": [1, 3, 159], "readi": [159, 161], "readm": 156, "readout": [100, 102, 104, 108], "readout_layer_s": [100, 102, 104, 108, 156, 161], "readthedoc": 156, "receiv": [0, 157, 160, 161], "reciev": [154, 159, 161], "recommend": [156, 158, 159, 161], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 75, 78, 86, 104, 121, 124, 127, 155, 156, 157, 160], "record": 150, "recov": 127, "recreat": [155, 156, 161], "recurr": 120, "recurs": [23, 37, 118, 144, 148], "reduc": [156, 161], "reduce_opt": 87, "refer": [97, 119, 142, 155, 156, 159, 161], "refresh_r": 132, "regardless": [155, 156, 161], "regist": 129, "regress": 123, "regular": [37, 90, 156, 161], "reinstal": 158, "rel": [89, 90, 107, 114, 129, 130], "rel_pos_bia": 90, "rel_pos_bucket": 129, "relat": [148, 158, 159], "relev": [1, 37, 148, 153], "reli": 119, "reload": 161, "relu": [90, 106, 108], "remain": 155, "remov": [45, 113, 138, 159], "renam": [79, 147], "rename_state_dict_entri": [137, 147], "repeat": [113, 150], "repeat_label": 113, "repeatfilt": [137, 150], "replac": [93, 94, 95, 96, 97, 147], "replace_with_ident": [93, 94, 95, 96, 97], "repo": 153, "repositori": 153, "repres": [91, 100, 113, 114, 116, 117, 130, 140, 142, 143, 154, 155, 156, 159, 161], "represent": [37, 89, 90, 91, 114, 118, 119, 121, 130, 155, 156, 159, 161], "reproduc": [142, 143, 161], "repurpos": 161, "requir": [0, 21, 27, 39, 49, 116, 125, 127, 134, 153, 154, 155, 156, 157, 158, 159, 160, 161], "requires_icecub": [137, 149], "research": [0, 156, 157, 160], "reset": 90, "reset_paramet": 90, "residu": 90, "respect": [156, 159], "respons": [155, 156], "restrict": [127, 134, 161], "result": [91, 114, 117, 132, 134, 144, 156, 159, 161], "retriev": [93, 154, 155], "retro": 29, "return": [18, 19, 21, 31, 34, 35, 37, 45, 76, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 159, 161], "return_discard": 37, "return_el": 134, "reusabl": [0, 157, 160], "reuseabl": [156, 161], "review": 153, "rezero": 90, "rhel_7_x86_64": 158, "right": [134, 156], "rmse": 134, "rmseloss": [131, 134], "rmsevonmisesfisher3dloss": [131, 134], "rnn": [1, 86, 100, 121], "rnn_dropout": 100, "rnn_dynedg": 100, "rnn_hidden_s": 100, "rnn_layer": 100, "rnn_tito": [86, 99], "role": 161, "root": [134, 158], "roughli": 155, "row": [113, 114, 117, 130, 155, 156, 159, 161], "rrwp": [89, 114, 130], "rrwp_encod": [89, 130], "rrwp_index": 114, "rrwp_val": 114, "rrwplinearedgeencod": [88, 89], "rrwplinearnodeencod": [88, 89], "run": [1, 45, 76, 78, 79, 82, 90, 154, 156, 158, 159, 161], "run_id": 45, "runner": [94, 95, 97, 138], "runtim": [133, 158], "runtimeerror": [21, 31], "rw": 130, "rwse": 114, "rwselinearedgeencod": 89, "rwselinearnodeencod": [88, 89], "ryabinin": 134, "sai": [156, 161], "same": [18, 37, 87, 91, 117, 125, 130, 132, 144, 150, 155, 156, 161], "sampl": [90, 113, 114, 116, 156, 161], "sample_puls": 116, "sampler": [3, 10], "san": 90, "san_graph": 90, "sangraphhead": [88, 90], "satisfi": [0, 154, 157, 160], "save": [19, 21, 34, 39, 41, 47, 49, 118, 132, 134, 140, 141, 142, 143, 154, 156, 159], "save_config": [141, 156, 161], "save_dataset_config": [139, 142], "save_dir": [132, 156, 161], "save_fil": 154, "save_method": [154, 159], "save_model_config": [139, 143], "save_state_dict": [118, 156, 161], "scalabl": 155, "scalar": [19, 130, 134], "scale": [89, 90, 103, 107, 112, 113, 116, 117, 127, 129, 134, 155, 161], "scaled_emb": [107, 129], "scatter": [116, 117], "schedul": 119, "scheduler_class": [119, 156, 161], "scheduler_config": [119, 156, 161], "scheduler_kwarg": [119, 156, 161], "schema": 156, "scheme": [100, 102, 104, 108, 154], "scientif": [0, 1, 157, 160], "scope": 153, "score": [90, 106], "script": [156, 161], "search": [148, 154], "sec": 134, "second": 112, "section": 156, "see": [89, 100, 111, 113, 119, 127, 132, 153, 155, 156, 158], "seed": [113, 114, 142, 155, 156], "seen": 89, "select": [28, 36, 116, 142, 153, 156, 159], "self": [89, 98, 106, 113, 119, 123, 130, 140, 145, 154, 155, 156, 159, 161], "sell": 134, "send": 127, "sensor": [93, 113, 117, 155, 156, 159, 161], "sensor_i": 159, "sensor_id": [94, 96, 97, 159], "sensor_id_column": [94, 95, 96, 97, 159], "sensor_index_nam": 93, "sensor_mask": 113, "sensor_pos_i": [97, 155, 156, 161], "sensor_pos_x": [97, 155, 156, 161], "sensor_pos_z": [97, 155, 156, 161], "sensor_position_nam": 93, "sensor_string_id": 97, "sensor_tim": 159, "sensor_x": [155, 159], "sensor_z": 159, "separ": [34, 112, 132, 156, 158], "seper": [121, 155], "seq_length": [89, 107, 129, 130], "sequenc": [76, 79, 82, 89, 90, 117, 130, 156, 161], "seri": [22, 23, 35, 37, 81, 100, 116, 121, 155, 156, 161], "serial": [154, 155], "serialis": [33, 34, 156, 161], "serv": 155, "session": [142, 143, 155, 156, 161], "set": [3, 6, 21, 23, 31, 89, 90, 107, 116, 117, 118, 127, 133, 153, 154, 156, 159, 161], "set_gcd": [21, 31], "set_index": 159, "set_number_of_input": 116, "set_output_feature_nam": 116, "set_verbose_print_recurs": 118, "setlevel": 150, "setup": [132, 158], "setuptool": 158, "sever": [156, 161], "sh": 158, "shall": 134, "shape": [19, 112, 113, 116, 130, 134, 154, 155], "share": [98, 119, 123, 156, 161], "shared_step": [98, 119, 123], "shell": 158, "shift": 45, "shortest": 130, "should": [19, 21, 34, 77, 90, 91, 93, 94, 95, 96, 97, 100, 107, 113, 114, 121, 130, 134, 140, 142, 143, 145, 153, 154, 155, 156, 158, 159, 161], "show": [132, 156], "shown": 156, "shuffl": 155, "sigmoid": 161, "sign": 134, "signal": [81, 161], "signatur": [23, 37], "signific": 155, "significantli": 155, "signup": 156, "similar": [23, 37, 116, 156, 161], "similarli": [37, 154, 155, 156, 161], "simpl": [0, 86, 98, 156, 157, 160, 161], "simplecoarsen": 87, "simplest": [156, 161], "simpli": [156, 161], "simul": [35, 49, 81, 156, 159], "sinc": [81, 134, 156], "singl": [18, 91, 102, 108, 117, 133, 142, 143, 154, 155, 156, 159, 161], "single_event_as_arrai": 117, "sinusoid": [89, 107, 129], "sinusoidalposemb": [88, 89], "sipm_i": 95, "sipm_id": 95, "sipm_x": 95, "sipm_z": 95, "situat": 153, "size": [89, 90, 91, 100, 102, 103, 104, 106, 107, 108, 130, 138, 155], "skip": [36, 102, 108, 156], "skip_readout": [102, 108], "sklearn": [156, 161], "sk\u0142odowska": [0, 157, 160], "slack": 156, "slice": [90, 102, 108], "small": [134, 155, 156, 161], "smaller": 154, "smooth": 153, "snippet": [156, 161], "so": [45, 134, 155, 156, 158, 159, 161], "soft": 89, "softmax": 134, "softwar": [0, 134, 157, 160], "solut": [89, 90, 104, 107, 153], "solv": [1, 153, 161], "some": [45, 113, 117, 155, 156], "someth": [156, 161], "somewhat": 156, "sort": [113, 117], "sort_bi": 113, "sourc": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 160], "south": 104, "space": [89, 111, 112, 127, 130], "space_coord": 112, "space_dim": 130, "spacetim": 89, "spacetimeencod": [88, 89], "spars": 130, "sparsetensor": 90, "spatial": 117, "spd": 130, "special": [23, 81, 121, 130], "specialis": [156, 161], "specif": [0, 1, 6, 17, 19, 22, 37, 75, 77, 80, 82, 85, 87, 91, 92, 93, 94, 95, 96, 97, 99, 100, 105, 111, 113, 116, 120, 124, 125, 126, 127, 128, 130, 134, 153, 154, 155, 156, 157, 158, 159, 160, 161], "specifi": [87, 117, 119, 127, 132, 155, 156, 159, 161], "speed": [81, 112, 155], "sphere": 111, "spite": 134, "splinemp": 30, "split": [0, 36, 87, 157, 160], "sqlite": [1, 3, 10, 45, 155, 156, 158], "sqlite3": 156, "sqlite_dataset": [10, 15, 155], "sqlite_util": [3, 63], "sqlite_writ": [3, 68], "sqlitedatas": 155, "sqlitedataset": 154, "sqlitewrit": [154, 155], "squar": 134, "src": 156, "stabl": [126, 127], "stage": 132, "stai": 130, "standalon": 121, "standard": [0, 36, 77, 94, 95, 96, 97, 100, 113, 114, 116, 117, 119, 122, 123, 127, 138, 153, 156, 157, 159, 160, 161], "standard_argu": 138, "standard_averaged_model": [1, 86], "standard_model": [1, 86, 156], "standardaveragedmodel": [86, 122], "standardaveragemodel": 122, "standardflowtask": [124, 127], "standardis": 92, "standardlearnedtask": [124, 125, 126, 127, 161], "standardmodel": [86, 98, 122, 123], "start": [31, 90, 153, 156, 159, 161], "stat": 90, "state": [0, 77, 100, 121, 147, 157, 160], "state_dict": [77, 81, 83, 118, 122, 147, 156], "static": [134, 153], "statist": 117, "std": 91, "std_pool": [88, 91], "std_pool_x": [88, 91], "stdout": 132, "step": [98, 106, 114, 119, 122, 123, 130, 132, 156, 158, 159, 161], "still": 142, "stochast": 90, "stop": [31, 132, 138], "store": [133, 154, 155, 156, 159, 161], "str": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 107, 108, 113, 114, 116, 117, 118, 119, 122, 127, 130, 132, 133, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 154, 159], "straightforward": 155, "strategi": [156, 161], "stream": 36, "stream_handl": 150, "streamhandl": 150, "streamlin": 1, "string": [34, 45, 91, 93, 94, 113, 118, 119, 127, 140, 156, 159, 161], "string_id": [96, 159], "string_id_column": [94, 95, 96, 97, 159], "string_index_nam": 93, "string_mask": 113, "string_select": 142, "string_selection_resolv": [3, 63], "strongli": [156, 161], "structur": [89, 98, 114, 144, 154, 155, 156, 161], "style": 153, "sub": 156, "subclass": [0, 86, 98, 154, 155, 156, 157, 160, 161], "subev": 36, "subeventstreami3filt": [33, 36], "subject": [107, 134], "sublicens": 134, "submit": 107, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 44, 46, 48, 50, 52, 54, 61, 63, 68, 72, 75, 78, 80, 84, 86, 88, 92, 99, 109, 110, 115, 120, 124, 128, 131, 137, 139, 144], "subpackag": [1, 3, 10, 17, 20, 40, 75, 86, 109, 137], "subsampl": 155, "subsequ": 156, "subset": [90, 100, 102, 104, 108, 121, 156], "substanti": 134, "suggest": [98, 134, 156], "suit": [0, 119, 127, 156, 157, 160], "suitabl": [1, 158, 159], "sum": [87, 91, 98, 102, 104, 108, 117, 123, 156, 161], "sum_pool": [87, 88, 91], "sum_pool_and_distribut": [88, 91], "sum_pool_x": [87, 88, 91], "summar": [81, 83, 116, 117], "summari": [116, 117], "summaris": [156, 161], "summariz": 161, "summarization_indic": 117, "super": [154, 155, 156, 161], "supervis": [123, 127, 161], "support": [0, 37, 45, 127, 153, 154, 155, 156, 157, 160], "suppos": [117, 155, 159], "sure": [153, 154], "swa": 122, "swapabl": 156, "switch": [134, 156, 161], "syntax": [98, 134, 155, 156], "system": [148, 156, 158, 161], "t": [37, 132, 134, 154, 155, 156, 159, 161], "tabl": [18, 19, 21, 39, 41, 47, 49, 93, 113, 154, 155, 156], "table_nam": 49, "table_without_index": 159, "tackl": 161, "tag": 153, "take": [37, 91, 117, 121, 153, 155], "talk": 156, "target": [98, 119, 125, 127, 134, 145, 156, 161], "target_label": [98, 119, 127, 156, 161], "target_norm": 127, "target_pr": [125, 161], "task": [0, 1, 86, 90, 98, 123, 125, 126, 134, 153, 156, 157, 160], "team": [153, 155, 156, 158, 159, 161], "technic": [0, 157, 159, 160], "techniqu": [0, 157, 160, 161], "telescop": [0, 1, 156, 157, 159, 160, 161], "tensor": [77, 87, 89, 90, 91, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 116, 117, 119, 121, 122, 123, 127, 129, 130, 134, 147, 151, 155, 156, 159, 161], "term": [90, 134, 161], "termin": 156, "test": [127, 142, 149, 153, 155, 156, 161], "test_dataset": [1, 72], "test_funct": 149, "test_select": [142, 155, 156], "than": [0, 116, 127, 150, 155, 156, 157, 160, 161], "thei": [76, 79, 82, 116, 154, 155, 156, 158, 161], "them": [0, 1, 34, 45, 77, 86, 102, 127, 155, 156, 157, 158, 159, 160, 161], "themselv": [1, 142, 143, 156, 161], "theo": 90, "therebi": [1, 142, 143, 156, 161], "therefor": [34, 154, 155, 156, 159, 161], "thi": [0, 18, 19, 21, 23, 37, 39, 41, 47, 49, 78, 81, 86, 89, 91, 98, 100, 102, 107, 108, 112, 113, 114, 116, 117, 119, 121, 123, 125, 126, 127, 130, 132, 134, 140, 142, 143, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "thing": 156, "thoglu": [119, 127], "those": [21, 31, 130, 155, 156], "three": [108, 117, 134, 161], "threshold": [0, 81, 157, 160], "through": [0, 117, 125, 126, 127, 134, 154, 156, 157, 160, 161], "throw": 154, "thu": [143, 161], "ti": 155, "time": [0, 45, 87, 89, 91, 100, 112, 116, 117, 121, 126, 130, 150, 155, 156, 157, 159, 160], "time_column": 116, "time_coord": 112, "time_lik": 112, "time_like_weight": 112, "time_series_column": [100, 121], "time_window": 87, "timereconstruct": [124, 126], "tini": 156, "tito": [90, 100, 104], "to_config": 161, "to_csv": [156, 161], "to_dense_adj": 130, "to_parquet": 159, "todo": 156, "togeth": [0, 86, 111, 134, 157, 160], "token": 129, "too": [156, 161], "tool": [0, 1, 157, 160], "top": 161, "torch": [0, 86, 89, 90, 106, 113, 114, 118, 119, 149, 155, 156, 157, 158, 159, 160, 161], "torch_cpu": 158, "torch_cu118": 158, "torch_cu121": 158, "torch_geometr": [91, 130, 155, 156, 161], "torch_lightn": 161, "tort": 134, "total": [117, 130, 155, 156, 159], "total_energi": [155, 156, 161], "tqdmprogressbar": 132, "track": [0, 19, 21, 25, 39, 41, 47, 49, 90, 126, 131, 133, 153, 154, 156, 157, 160], "tradit": [0, 157, 160], "train": [0, 1, 75, 81, 90, 98, 107, 113, 119, 122, 123, 130, 132, 133, 134, 138, 142, 143, 145, 152, 154, 155, 156, 157, 158, 159, 160], "train_batch": [98, 122], "train_dataload": [98, 156, 161], "train_ev": 127, "train_select": [142, 155, 156], "trainabl": 143, "trainer": [98, 132, 156, 161], "trainer_kwarg": 98, "training_config": [137, 139, 156, 161], "training_example_data_sqlit": [138, 155, 156, 161], "training_step": [98, 122], "trainingconfig": [139, 145, 156, 161], "transform": [1, 45, 86, 90, 91, 104, 106, 107, 121, 127, 129, 130, 156, 161], "transform_infer": [127, 156, 161], "transform_prediction_and_target": [127, 156, 161], "transform_support": [127, 156, 161], "transform_target": [127, 156, 161], "transit": 147, "transpar": [142, 143, 153, 156, 161], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [139, 144], "treat": [100, 121], "tree": [23, 156], "tri": [23, 37], "triangl": 97, "trident": 97, "trident1211": [92, 97], "trigger": [23, 42, 155, 156, 161], "trivial": [37, 127], "true": [36, 81, 89, 90, 100, 102, 104, 106, 107, 108, 113, 116, 118, 130, 132, 134, 148, 154, 155, 156, 161], "trust": [118, 156, 161], "truth": [22, 31, 49, 113, 127, 142, 155, 159, 161], "truth_dict": 113, "truth_label": 155, "truth_tabl": [142, 155, 156], "truthdata": 47, "try": [37, 154], "tum": [25, 32], "tupl": [35, 37, 45, 90, 100, 102, 104, 108, 117, 127, 130, 138, 147], "turn": [117, 153], "tutorial_output": [156, 161], "two": [102, 132, 134, 154, 155, 156, 159], "txt": 158, "type": [0, 20, 21, 31, 33, 34, 35, 45, 47, 49, 76, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160], "typic": [0, 34, 121, 155, 157, 159, 160], "u": [155, 159], "ultra": 155, "unaccur": 134, "unambigu": [142, 143], "unbatch_edge_index": [86, 87], "uncertainti": [126, 156, 161], "uncompress": 155, "under": [0, 156, 157, 159, 160, 161], "unfamiliar": 161, "uninstanti": [90, 106], "union": [0, 23, 34, 37, 76, 77, 79, 81, 82, 83, 87, 90, 91, 98, 100, 102, 108, 113, 114, 117, 119, 123, 127, 142, 145, 148, 154, 157, 159, 160], "uniqu": [45, 116, 117, 130, 142, 156, 159, 161], "unit": [0, 112, 149, 153, 157, 160], "univers": 104, "unlik": 155, "unscal": 161, "untransform": 125, "up": [0, 81, 153, 157, 160], "updat": [90, 106, 108, 121, 122, 130, 132, 156, 158, 161], "update_edg": [90, 106], "upgrad": [22, 94, 156, 158], "upon": [119, 161], "us": [0, 1, 2, 18, 19, 21, 26, 31, 33, 34, 39, 41, 47, 49, 75, 77, 79, 81, 83, 86, 89, 90, 91, 93, 98, 100, 102, 103, 104, 106, 107, 108, 111, 113, 114, 116, 117, 118, 119, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 137, 138, 139, 142, 143, 144, 149, 150, 153, 154, 157, 158, 159, 160], "usabl": [0, 157, 160], "usag": [119, 127, 138], "use_bia": [89, 90], "use_global_featur": [100, 104], "use_post_processing_lay": [100, 104], "user": [0, 86, 98, 132, 155, 156, 157, 158, 160, 161], "usual": 155, "util": [1, 3, 17, 20, 34, 35, 36, 37, 40, 45, 86, 109, 131, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 158, 161], "v": 90, "v1": 158, "v4": 158, "val_batch": [98, 122], "val_dataload": 98, "valid": [37, 98, 119, 122, 123, 127, 132, 134, 138, 140, 145, 155, 156, 161], "validate_task": [98, 119, 123], "validation_step": [98, 122], "validationerror": [140, 145], "valu": [31, 34, 45, 89, 90, 91, 106, 108, 111, 112, 113, 114, 117, 127, 130, 133, 134, 138, 140, 161], "valueerror": [23, 118, 119], "var": 126, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 102, 116, 117, 130, 150, 154, 159, 161], "varieti": 156, "variou": [1, 78, 156], "vast": [123, 127], "vector": [45, 87, 90, 91, 130, 134, 154, 161], "verbos": [98, 123, 132], "verbose_print": 118, "veri": [155, 156, 161], "verifi": [98, 119, 123], "versa": 132, "version": [91, 117, 127, 132, 153, 156, 158, 161], "vertex": [126, 156], "vertexreconstruct": [124, 126], "via": 114, "viabl": 159, "vice": 132, "virtual": 158, "visibl": 126, "visible_inelast": 126, "visible_inelasticity_pr": 126, "visibleinelasticityreconstruct": [124, 126], "visit": 159, "vmf": 126, "vmf_loss": 134, "vmfs_factor": 134, "volum": 31, "von": 134, "vonmisesfisher2dloss": [131, 134, 156, 161], "vonmisesfisher3dloss": [131, 134], "vonmisesfisherloss": [131, 134], "w": [156, 161], "wa": [0, 107, 155, 156, 157, 159, 160, 161], "wai": [37, 123, 153, 156, 159, 161], "walk": [89, 106, 114, 130], "walk_length": [114, 130], "wandb": [156, 161], "wandb_dir": [156, 161], "wandb_logg": [156, 161], "wandblogg": [156, 161], "want": [155, 156, 158, 159, 161], "warn": [150, 156], "warning_onc": [150, 156], "warranti": 134, "waterdemo81": [92, 97], "wb": 154, "we": [34, 37, 117, 119, 153, 156, 158, 159, 161], "weigel": 106, "weight": [81, 83, 90, 106, 107, 113, 117, 127, 130, 134, 143, 156, 161], "weight_fit": [1, 131], "well": [153, 156, 161], "wether": 108, "what": [1, 89, 113, 153, 156, 161], "whatev": 156, "wheel": 158, "when": [0, 34, 36, 81, 90, 100, 102, 104, 108, 121, 133, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "whenev": 158, "where": [19, 113, 114, 116, 117, 121, 130, 133, 154, 155, 156, 159, 161], "wherea": 155, "whether": [35, 37, 89, 90, 100, 102, 104, 107, 108, 118, 129, 134, 144, 148, 149, 156], "which": [0, 19, 21, 22, 31, 35, 39, 41, 47, 49, 76, 78, 79, 82, 87, 91, 102, 108, 113, 114, 117, 118, 119, 125, 127, 130, 134, 138, 154, 155, 156, 157, 160, 161], "while": [0, 23, 98, 130, 132, 153, 155, 157, 160], "who": [147, 156, 161], "whom": 134, "whose": 81, "wide": [119, 161], "willing": [155, 159], "window": [87, 155, 156], "wise": [90, 91], "wish": [0, 76, 153, 157, 160], "with_standard_argu": 138, "within": [31, 45, 87, 90, 91, 102, 108, 111, 156, 161], "without": [1, 106, 111, 114, 116, 134, 155, 158], "work": [0, 35, 100, 153, 154, 155, 156, 157, 160, 161], "worker": [6, 76, 79, 82, 138, 150], "workflow": [0, 157, 160], "would": [153, 155, 156, 159, 161], "wrap": [132, 142, 143], "write": [81, 83, 154, 156, 161], "writer": [1, 3, 159], "written": [76, 154], "wrt": 127, "www": 156, "x": [31, 89, 90, 91, 94, 106, 112, 116, 117, 121, 127, 130, 134, 155, 156, 159, 161], "x8": 155, "x_i": 90, "x_j": 90, "xyz": [93, 94, 95, 96, 97, 116, 117, 155, 159], "xyz_coord": 130, "xyz_dir_to_zen_az": [44, 45], "xyzt": 130, "y": [31, 89, 94, 112, 130, 158], "yaml": [140, 141, 156], "yet": 117, "yield": [0, 102, 108, 134, 157, 160], "yml": [138, 142, 143, 155, 156, 161], "you": [76, 89, 119, 142, 143, 153, 155, 156, 158, 159, 161], "your": [114, 119, 153, 154, 155, 156, 158], "yourself": 153, "z": [31, 89, 94, 112, 116, 117, 130], "z_name": 116, "z_offset": [116, 117], "z_scale": [116, 117], "zenith": [45, 126, 133, 156, 161], "zenith_kappa": 126, "zenith_kei": 133, "zenith_pr": 126, "zenithreconstruct": [124, 126], "zenithreconstructionwithkappa": [124, 126, 156, 161], "zero": [45, 114], "\u00f8rs\u00f8e": [0, 157, 160]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "km3net", "km3netextractor", "km3netpulseextractor", "km3nettruthextractor", "utilities", "km3net_utilities", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "km3netreader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "orca", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "grit", "icemix", "particlenet", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 159, "2": 159, "In": [155, 161], "The": [156, 161], "To": 153, "acknowledg": 0, "ad": [155, 156, 159, 161], "advanc": 156, "api": 1, "appendix": 156, "appli": 159, "argpars": 138, "backbon": 161, "base_config": 140, "befor": 159, "callback": 132, "checkpoint": 161, "choos": 155, "class": [156, 159, 161], "classif": 125, "cleaning_modul": 81, "coarsen": 87, "code": 153, "collect": 34, "combin": [155, 156], "combine_extractor": 18, "compon": 88, "config": 139, "configur": 141, "constant": [2, 4], "content": 156, "contribut": 153, "convent": 153, "convers": 154, "convnet": 101, "creat": 156, "curated_datamodul": 5, "custom": [155, 156], "cvmf": 158, "data": [3, 154, 159], "dataclass": 6, "dataconfig": 156, "dataconvert": [7, 53, 154], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 72, 155, 156], "dataset_config": 142, "datasetconfig": 156, "decor": 146, "deploy": [75, 76], "deployment_modul": 77, "deprecated_method": [51, 62, 79], "deprecation_tool": 147, "detector": [92, 93, 159], "dynedg": 102, "dynedge_jinst": 103, "dynedge_kaggle_tito": 104, "easy_model": 98, "edg": [110, 111], "embed": 89, "energi": 161, "event": 155, "exampl": [156, 159, 161], "except": [84, 85], "experi": [159, 161], "extractor": [17, 19, 154, 159], "filesi": 148, "frame": 35, "function": 156, "geometri": 159, "github": 153, "gnn": [99, 105], "graph": [109, 114], "graph_definit": 113, "graphdefinit": 161, "graphnet": 156, "graphnet_file_read": 55, "graphnet_writ": 69, "graphnetfileread": 159, "graphnetgraphnet": [153, 154, 155, 157, 159, 160, 161], "grit": 106, "h5_extractor": 47, "i3_filt": 36, "i3deploy": 82, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 78, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 56, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 80, 94, 158], "icemix": 107, "implement": [155, 159], "import": 149, "index": 159, "inference_modul": 83, "instal": 158, "instanti": 161, "integr": 159, "intern": 38, "internal_parquet_read": 57, "introduct": 156, "iseecub": 129, "issu": 153, "km3io": 158, "km3net": [40, 158], "km3net_util": 45, "km3netextractor": 41, "km3netpulseextractor": 42, "km3netread": 58, "km3nettruthextractor": 43, "label": [133, 155, 156], "layer": 90, "liquido": [46, 95], "liquido_read": 59, "load": 161, "log": 150, "loss_funct": 134, "math": 151, "minkowski": 112, "model": [86, 118, 156, 161], "model_config": 143, "modelconfig": [156, 161], "multi": 159, "multipl": [155, 156], "new": [155, 159], "node": [115, 116], "node_rnn": 121, "normalizing_flow": 119, "orca": 96, "overview": 156, "own": [159, 161], "parquet": [12, 50], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 64, "parquet_writ": 70, "parquetdataset": 155, "pars": 144, "particlenet": 108, "pool": 91, "pre_configur": 52, "prometheu": [48, 97], "prometheus_dataset": 73, "prometheus_extractor": 49, "prometheus_read": 60, "pull": 153, "qualiti": 153, "quick": 158, "random": 65, "reader": [54, 154], "reconstruct": [126, 161], "reproduc": 156, "request": 153, "rnn": 120, "rnn_tito": 100, "sampler": 14, "save": 161, "select": 155, "sqlite": [15, 61], "sqlite_dataset": 16, "sqlite_util": 66, "sqlite_writ": 71, "sqlitedataset": [155, 156], "src": 152, "standard_averaged_model": 122, "standard_model": 123, "standardmodel": [156, 161], "start": 158, "state_dict": 161, "string_selection_resolv": 67, "subset": 155, "support": 159, "syntax": 161, "tabl": 159, "task": [124, 127, 161], "test_dataset": 74, "track": 161, "train": [131, 161], "training_config": 145, "transform": 128, "truth": 156, "tutori": 156, "type": 37, "us": [155, 156, 161], "usag": 0, "util": [33, 44, 63, 117, 130, 135, 137], "v": 155, "weight_fit": 136, "write": 159, "writer": [68, 154], "your": [159, 161]}})