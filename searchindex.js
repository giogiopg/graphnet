Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[162, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[162, "implementing-a-detector-class"]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[164, "adding-your-own-model"]], "Adding custom Labels": [[158, "adding-custom-labels"]], "Adding custom truth labels": [[159, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[159, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[159, "appendix"]], "Choosing a subset of events using selection": [[158, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[156, "code-quality"]], "Combining Multiple Datasets": [[158, "combining-multiple-datasets"], [159, "combining-multiple-datasets"]], "Contents": [[159, "contents"]], "Contributing To GraphNeTgraphnet": [[156, null]], "Conventions": [[156, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[159, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[159, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[157, null]], "DataConverter": [[157, "dataconverter"]], "Dataset": [[158, "dataset"]], "Datasets In GraphNeTgraphnet": [[158, null]], "Example DataConfig": [[159, "example-dataconfig"]], "Example ModelConfig": [[159, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[162, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[164, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[164, "experiment-tracking"]], "Extractors": [[157, "extractors"]], "GitHub issues": [[156, "github-issues"]], "GraphDefinition, backbone & Task": [[164, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[159, null]], "GraphNeTgraphnet": [[160, null], [163, null]], "Implementing a new Dataset": [[158, "implementing-a-new-dataset"]], "Installation": [[161, null]], "Installation in CVMFS (IceCube)": [[161, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[164, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[162, null]], "Introduction": [[159, "introduction"]], "Model.save": [[164, "model-save"]], "ModelConfig and state_dict": [[164, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[164, null]], "Overview of GraphNeT": [[159, "overview-of-graphnet"]], "Pull requests": [[156, "pull-requests"]], "Quick Start": [[161, "quick-start"]], "Readers": [[157, "readers"]], "SQLiteDataset & ParquetDataset": [[158, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[158, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[164, "saving-loading-and-checkpointing-models"]], "Submodules": [[1, "submodules"], [3, "submodules"], [10, "submodules"], [12, "submodules"], [15, "submodules"], [17, "submodules"], [20, "submodules"], [33, "submodules"], [38, "submodules"], [40, "submodules"], [45, "submodules"], [49, "submodules"], [51, "submodules"], [53, "submodules"], [55, "submodules"], [57, "submodules"], [64, "submodules"], [66, "submodules"], [71, "submodules"], [75, "submodules"], [78, "submodules"], [81, "submodules"], [83, "submodules"], [87, "submodules"], [89, "submodules"], [91, "submodules"], [95, "submodules"], [102, "submodules"], [112, "submodules"], [113, "submodules"], [118, "submodules"], [123, "submodules"], [127, "submodules"], [131, "submodules"], [134, "submodules"], [140, "submodules"], [142, "submodules"]], "Subpackages": [[1, null], [3, "subpackages"], [10, "subpackages"], [17, "subpackages"], [20, "subpackages"], [40, "subpackages"], [78, "subpackages"], [89, "subpackages"], [112, "subpackages"], [140, "subpackages"]], "The Model class": [[159, "the-model-class"], [164, "the-model-class"]], "The StandardModel class": [[159, "the-standardmodel-class"], [164, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[164, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[164, "using-checkpoints"]], "Writers": [[157, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[162, "writing-your-own-extractor-and-graphnetfilereader"]], "graphnet.constants module": [[2, null]], "graphnet.data package": [[3, null]], "graphnet.data.constants module": [[4, null]], "graphnet.data.curated_datamodule module": [[5, null]], "graphnet.data.dataclasses module": [[6, null]], "graphnet.data.dataconverter module": [[7, null]], "graphnet.data.dataloader module": [[8, null]], "graphnet.data.datamodule module": [[9, null]], "graphnet.data.dataset package": [[10, null]], "graphnet.data.dataset.dataset module": [[11, null]], "graphnet.data.dataset.parquet package": [[12, null]], "graphnet.data.dataset.parquet.parquet_dataset module": [[13, null]], "graphnet.data.dataset.samplers module": [[14, null]], "graphnet.data.dataset.sqlite package": [[15, null]], "graphnet.data.dataset.sqlite.sqlite_dataset module": [[16, null]], "graphnet.data.extractors package": [[17, null]], "graphnet.data.extractors.combine_extractors module": [[18, null]], "graphnet.data.extractors.extractor module": [[19, null]], "graphnet.data.extractors.icecube package": [[20, null]], "graphnet.data.extractors.icecube.i3extractor module": [[21, null]], "graphnet.data.extractors.icecube.i3featureextractor module": [[22, null]], "graphnet.data.extractors.icecube.i3genericextractor module": [[23, null]], "graphnet.data.extractors.icecube.i3hybridrecoextractor module": [[24, null]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module": [[25, null]], "graphnet.data.extractors.icecube.i3particleextractor module": [[26, null]], "graphnet.data.extractors.icecube.i3pisaextractor module": [[27, null]], "graphnet.data.extractors.icecube.i3quesoextractor module": [[28, null]], "graphnet.data.extractors.icecube.i3retroextractor module": [[29, null]], "graphnet.data.extractors.icecube.i3splinempeextractor module": [[30, null]], "graphnet.data.extractors.icecube.i3truthextractor module": [[31, null]], "graphnet.data.extractors.icecube.i3tumextractor module": [[32, null]], "graphnet.data.extractors.icecube.utilities package": [[33, null]], "graphnet.data.extractors.icecube.utilities.collections module": [[34, null]], "graphnet.data.extractors.icecube.utilities.frames module": [[35, null]], "graphnet.data.extractors.icecube.utilities.i3_filters module": [[36, null]], "graphnet.data.extractors.icecube.utilities.types module": [[37, null]], "graphnet.data.extractors.internal package": [[38, null]], "graphnet.data.extractors.internal.parquet_extractor module": [[39, null]], "graphnet.data.extractors.km3net package": [[40, null]], "graphnet.data.extractors.km3net.km3netrootextractor module": [[41, null]], "graphnet.data.extractors.km3net.km3netrootpulseextractor module": [[42, null]], "graphnet.data.extractors.km3net.km3netroottriggpulseextractor module": [[43, null]], "graphnet.data.extractors.km3net.km3netroottruthextractor module": [[44, null]], "graphnet.data.extractors.km3net.utilities package": [[45, null]], "graphnet.data.extractors.km3net.utilities.km3net_utilities module": [[46, null]], "graphnet.data.extractors.km3net.utilities.utils_osc module": [[47, null]], "graphnet.data.extractors.km3net.utilities.weight_events_oscprob module": [[48, null]], "graphnet.data.extractors.liquido package": [[49, null]], "graphnet.data.extractors.liquido.h5_extractor module": [[50, null]], "graphnet.data.extractors.prometheus package": [[51, null]], "graphnet.data.extractors.prometheus.prometheus_extractor module": [[52, null]], "graphnet.data.parquet package": [[53, null]], "graphnet.data.parquet.deprecated_methods module": [[54, null]], "graphnet.data.pre_configured package": [[55, null]], "graphnet.data.pre_configured.dataconverters module": [[56, null]], "graphnet.data.readers package": [[57, null]], "graphnet.data.readers.graphnet_file_reader module": [[58, null]], "graphnet.data.readers.i3reader module": [[59, null]], "graphnet.data.readers.internal_parquet_reader module": [[60, null]], "graphnet.data.readers.km3netrootreader module": [[61, null]], "graphnet.data.readers.liquido_reader module": [[62, null]], "graphnet.data.readers.prometheus_reader module": [[63, null]], "graphnet.data.sqlite package": [[64, null]], "graphnet.data.sqlite.deprecated_methods module": [[65, null]], "graphnet.data.utilities package": [[66, null]], "graphnet.data.utilities.parquet_to_sqlite module": [[67, null]], "graphnet.data.utilities.random module": [[68, null]], "graphnet.data.utilities.sqlite_utilities module": [[69, null]], "graphnet.data.utilities.string_selection_resolver module": [[70, null]], "graphnet.data.writers package": [[71, null]], "graphnet.data.writers.graphnet_writer module": [[72, null]], "graphnet.data.writers.parquet_writer module": [[73, null]], "graphnet.data.writers.sqlite_writer module": [[74, null]], "graphnet.datasets package": [[75, null]], "graphnet.datasets.prometheus_datasets module": [[76, null]], "graphnet.datasets.test_dataset module": [[77, null]], "graphnet.deployment package": [[78, null]], "graphnet.deployment.deployer module": [[79, null]], "graphnet.deployment.deployment_module module": [[80, null]], "graphnet.deployment.i3modules package": [[81, null]], "graphnet.deployment.i3modules.deprecated_methods module": [[82, null]], "graphnet.deployment.icecube package": [[83, null]], "graphnet.deployment.icecube.cleaning_module module": [[84, null]], "graphnet.deployment.icecube.i3deployer module": [[85, null]], "graphnet.deployment.icecube.inference_module module": [[86, null]], "graphnet.exceptions package": [[87, null]], "graphnet.exceptions.exceptions module": [[88, null]], "graphnet.models package": [[89, null]], "graphnet.models.coarsening module": [[90, null]], "graphnet.models.components package": [[91, null]], "graphnet.models.components.embedding module": [[92, null]], "graphnet.models.components.layers module": [[93, null]], "graphnet.models.components.pool module": [[94, null]], "graphnet.models.detector package": [[95, null]], "graphnet.models.detector.detector module": [[96, null]], "graphnet.models.detector.icecube module": [[97, null]], "graphnet.models.detector.liquido module": [[98, null]], "graphnet.models.detector.orca module": [[99, null]], "graphnet.models.detector.prometheus module": [[100, null]], "graphnet.models.easy_model module": [[101, null]], "graphnet.models.gnn package": [[102, null]], "graphnet.models.gnn.RNN_tito module": [[103, null]], "graphnet.models.gnn.convnet module": [[104, null]], "graphnet.models.gnn.dynedge module": [[105, null]], "graphnet.models.gnn.dynedge_jinst module": [[106, null]], "graphnet.models.gnn.dynedge_kaggle_tito module": [[107, null]], "graphnet.models.gnn.gnn module": [[108, null]], "graphnet.models.gnn.icemix module": [[109, null]], "graphnet.models.gnn.particlenet module": [[110, null]], "graphnet.models.gnn.transformer module": [[111, null]], "graphnet.models.graphs package": [[112, null]], "graphnet.models.graphs.edges package": [[113, null]], "graphnet.models.graphs.edges.edges module": [[114, null]], "graphnet.models.graphs.edges.minkowski module": [[115, null]], "graphnet.models.graphs.graph_definition module": [[116, null]], "graphnet.models.graphs.graphs module": [[117, null]], "graphnet.models.graphs.nodes package": [[118, null]], "graphnet.models.graphs.nodes.nodes module": [[119, null]], "graphnet.models.graphs.utils module": [[120, null]], "graphnet.models.model module": [[121, null]], "graphnet.models.normalizing_flow module": [[122, null]], "graphnet.models.rnn package": [[123, null]], "graphnet.models.rnn.node_rnn module": [[124, null]], "graphnet.models.standard_averaged_model module": [[125, null]], "graphnet.models.standard_model module": [[126, null]], "graphnet.models.task package": [[127, null]], "graphnet.models.task.classification module": [[128, null]], "graphnet.models.task.reconstruction module": [[129, null]], "graphnet.models.task.task module": [[130, null]], "graphnet.models.transformer package": [[131, null]], "graphnet.models.transformer.iseecube module": [[132, null]], "graphnet.models.utils module": [[133, null]], "graphnet.training package": [[134, null]], "graphnet.training.callbacks module": [[135, null]], "graphnet.training.labels module": [[136, null]], "graphnet.training.loss_functions module": [[137, null]], "graphnet.training.utils module": [[138, null]], "graphnet.training.weight_fitting module": [[139, null]], "graphnet.utilities package": [[140, null]], "graphnet.utilities.argparse module": [[141, null]], "graphnet.utilities.config package": [[142, null]], "graphnet.utilities.config.base_config module": [[143, null]], "graphnet.utilities.config.configurable module": [[144, null]], "graphnet.utilities.config.dataset_config module": [[145, null]], "graphnet.utilities.config.model_config module": [[146, null]], "graphnet.utilities.config.parsing module": [[147, null]], "graphnet.utilities.config.training_config module": [[148, null]], "graphnet.utilities.decorators module": [[149, null]], "graphnet.utilities.deprecation_tools module": [[150, null]], "graphnet.utilities.filesys module": [[151, null]], "graphnet.utilities.imports module": [[152, null]], "graphnet.utilities.logging module": [[153, null]], "graphnet.utilities.maths module": [[154, null]], "src": [[155, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.km3net", "api/graphnet.data.extractors.km3net.km3netrootextractor", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottruthextractor", "api/graphnet.data.extractors.km3net.utilities", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities", "api/graphnet.data.extractors.km3net.utilities.utils_osc", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.km3netrootreader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.orca", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.gnn.transformer", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.km3net.rst", "api/graphnet.data.extractors.km3net.km3netrootextractor.rst", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottruthextractor.rst", "api/graphnet.data.extractors.km3net.utilities.rst", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities.rst", "api/graphnet.data.extractors.km3net.utilities.utils_osc.rst", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.km3netrootreader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.orca.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.gnn.transformer.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[141, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[146, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[133, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[143, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[146, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "assert_no_uint_values() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.assert_no_uint_values", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.AttributeCoarsening", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[137, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[143, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[128, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[128, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[139, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[133, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[133, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[146, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "classifier_column_creator() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.classifier_column_creator", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[124, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[120, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.Coarsening", false]], "columnmissingexception": [[88, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[126, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[130, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[130, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[115, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[144, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[144, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[141, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[104, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "create_unique_id_filetype() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.create_unique_id_filetype", false]], "creating_time_zero() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.creating_time_zero", false]], "critical() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.debug", false]], "deepice (class in graphnet.models.gnn.icemix)": [[109, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[129, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[130, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[130, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[130, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[129, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[130, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[130, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[79, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[80, "graphnet.deployment.deployment_module.DeploymentModule", false]], "detector (class in graphnet.models.detector.detector)": [[96, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[136, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "directionreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithUncertainty", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[143, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[105, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[106, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[107, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[101, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[114, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[117, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "encoder_block (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.Encoder_block", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[154, "graphnet.utilities.maths.eps_like", false]], "error() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[114, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[72, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[93, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[96, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[97, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[97, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[98, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.orca.ivanorca115 method)": [[99, "graphnet.models.detector.orca.IVANORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca115 method)": [[99, "graphnet.models.detector.orca.ORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca6 method)": [[99, "graphnet.models.detector.orca.ORCA6.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[100, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[100, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[100, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[100, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[100, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "featuresprocessing (class in graphnet.models.components.embedding)": [[92, "graphnet.models.components.embedding.FeaturesProcessing", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[72, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[153, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[153, "graphnet.utilities.logging.RepeatFilter.filter", false]], "filter_none_nan() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.filter_None_NaN", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[59, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[60, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[62, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[63, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[151, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[139, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[90, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.featuresprocessing method)": [[92, "graphnet.models.components.embedding.FeaturesProcessing.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[92, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.positionalencoding method)": [[92, "graphnet.models.components.embedding.PositionalEncoding.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[92, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[92, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[93, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[93, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[93, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[93, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[93, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[93, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[93, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.encoder_block method)": [[93, "graphnet.models.components.layers.Encoder_block.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[93, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.components.layers.normformer_block method)": [[93, "graphnet.models.components.layers.NormFormer_block.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[96, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[104, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[105, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[106, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[107, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[108, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[109, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[110, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[103, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.gnn.transformer.normformer method)": [[111, "graphnet.models.gnn.transformer.NormFormer.forward", false]], "forward() (graphnet.models.gnn.transformer.transformer method)": [[111, "graphnet.models.gnn.transformer.Transformer.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[114, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[116, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[119, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[122, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[124, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[126, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[130, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[130, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[132, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[137, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[137, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[92, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.models.model.model class method)": [[121, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[144, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[120, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gaussiannegativeloglikelihood1d (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.GaussianNegativeLogLikelihood1D", false]], "gaussiannegativeloglikelihood3d (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.GaussianNegativeLogLikelihood3D", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[96, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[97, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[98, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.orca.ivanorca115 attribute)": [[99, "graphnet.models.detector.orca.IVANORCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[100, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[100, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[100, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[100, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[143, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[133, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[135, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "gnn (class in graphnet.models.gnn.gnn)": [[108, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[116, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.km3net.km3netrootextractor": [[41, "module-graphnet.data.extractors.km3net.km3netrootextractor", false]], "graphnet.data.extractors.km3net.km3netrootpulseextractor": [[42, "module-graphnet.data.extractors.km3net.km3netrootpulseextractor", false]], "graphnet.data.extractors.km3net.utilities": [[45, "module-graphnet.data.extractors.km3net.utilities", false]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[46, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false]], "graphnet.data.extractors.km3net.utilities.utils_osc": [[47, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false]], "graphnet.data.extractors.km3net.utilities.weight_events_oscprob": [[48, "module-graphnet.data.extractors.km3net.utilities.weight_events_oscprob", false]], "graphnet.data.extractors.liquido": [[49, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[50, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[51, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[52, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.readers.graphnet_file_reader": [[58, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[59, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[60, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[62, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[63, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.utilities": [[66, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.random": [[68, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[69, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[70, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[71, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[72, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[73, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[74, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.deployment": [[78, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[79, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[80, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.icecube.cleaning_module": [[84, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.inference_module": [[86, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[87, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[88, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[89, "module-graphnet.models", false]], "graphnet.models.coarsening": [[90, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[91, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[92, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[93, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[94, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[95, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[96, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[97, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[98, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.orca": [[99, "module-graphnet.models.detector.orca", false]], "graphnet.models.detector.prometheus": [[100, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[101, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[102, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[104, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[105, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[106, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[107, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[108, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[109, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[110, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[103, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.gnn.transformer": [[111, "module-graphnet.models.gnn.transformer", false]], "graphnet.models.graphs": [[112, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[113, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[114, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[115, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[116, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[117, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[118, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[119, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[120, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[121, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[122, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[123, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[124, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[125, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[126, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[127, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[128, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[129, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[130, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[131, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[132, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[133, "module-graphnet.models.utils", false]], "graphnet.training": [[134, "module-graphnet.training", false]], "graphnet.training.callbacks": [[135, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[136, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[137, "module-graphnet.training.loss_functions", false]], "graphnet.training.weight_fitting": [[139, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[140, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[141, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[142, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[143, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[144, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[145, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[146, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[147, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[148, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[149, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[150, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[151, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[152, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[153, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[154, "module-graphnet.utilities.maths", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[135, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[72, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "group_by() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[50, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[50, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[50, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[153, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[151, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[152, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[152, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[152, "graphnet.utilities.imports.has_torch_package", false]], "hitssequence (class in graphnet.models.graphs.graphs)": [[117, "graphnet.models.graphs.graphs.HitsSequence", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[86, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[84, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[59, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[120, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[97, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[97, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[120, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[130, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[130, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[151, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[151, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[132, "graphnet.models.transformer.iseecube.ISeeCube", false]], "ivanorca115 (class in graphnet.models.detector.orca)": [[99, "graphnet.models.detector.orca.IVANORCA115", false]], "key (graphnet.training.labels.label property)": [[136, "graphnet.training.labels.Label.key", false]], "km3netrootextractor (class in graphnet.data.extractors.km3net.km3netrootextractor)": [[41, "graphnet.data.extractors.km3net.km3netrootextractor.KM3NeTROOTExtractor", false]], "km3netrootpulseextractor (class in graphnet.data.extractors.km3net.km3netrootpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netrootpulseextractor.KM3NeTROOTPulseExtractor", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[133, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[114, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[117, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[136, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[130, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[120, "graphnet.models.graphs.utils.lex_sort", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[98, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[62, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[121, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[143, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_state_dict() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[137, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[137, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[137, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[153, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.LossFunction", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[72, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[73, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[74, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[93, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[115, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[121, "graphnet.models.model.Model", false]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[143, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[146, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[143, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[146, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[143, "graphnet.utilities.config.base_config.BaseConfig.model_fields", false]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields", false]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[146, "graphnet.utilities.config.model_config.ModelConfig.model_fields", false]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.model_fields", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[146, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[146, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[146, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [41, "module-graphnet.data.extractors.km3net.km3netrootextractor", false], [42, "module-graphnet.data.extractors.km3net.km3netrootpulseextractor", false], [45, "module-graphnet.data.extractors.km3net.utilities", false], [46, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false], [47, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false], [48, "module-graphnet.data.extractors.km3net.utilities.weight_events_oscprob", false], [49, "module-graphnet.data.extractors.liquido", false], [50, "module-graphnet.data.extractors.liquido.h5_extractor", false], [51, "module-graphnet.data.extractors.prometheus", false], [52, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [58, "module-graphnet.data.readers.graphnet_file_reader", false], [59, "module-graphnet.data.readers.i3reader", false], [60, "module-graphnet.data.readers.internal_parquet_reader", false], [62, "module-graphnet.data.readers.liquido_reader", false], [63, "module-graphnet.data.readers.prometheus_reader", false], [66, "module-graphnet.data.utilities", false], [68, "module-graphnet.data.utilities.random", false], [69, "module-graphnet.data.utilities.sqlite_utilities", false], [70, "module-graphnet.data.utilities.string_selection_resolver", false], [71, "module-graphnet.data.writers", false], [72, "module-graphnet.data.writers.graphnet_writer", false], [73, "module-graphnet.data.writers.parquet_writer", false], [74, "module-graphnet.data.writers.sqlite_writer", false], [78, "module-graphnet.deployment", false], [79, "module-graphnet.deployment.deployer", false], [80, "module-graphnet.deployment.deployment_module", false], [84, "module-graphnet.deployment.icecube.cleaning_module", false], [86, "module-graphnet.deployment.icecube.inference_module", false], [87, "module-graphnet.exceptions", false], [88, "module-graphnet.exceptions.exceptions", false], [89, "module-graphnet.models", false], [90, "module-graphnet.models.coarsening", false], [91, "module-graphnet.models.components", false], [92, "module-graphnet.models.components.embedding", false], [93, "module-graphnet.models.components.layers", false], [94, "module-graphnet.models.components.pool", false], [95, "module-graphnet.models.detector", false], [96, "module-graphnet.models.detector.detector", false], [97, "module-graphnet.models.detector.icecube", false], [98, "module-graphnet.models.detector.liquido", false], [99, "module-graphnet.models.detector.orca", false], [100, "module-graphnet.models.detector.prometheus", false], [101, "module-graphnet.models.easy_model", false], [102, "module-graphnet.models.gnn", false], [103, "module-graphnet.models.gnn.RNN_tito", false], [104, "module-graphnet.models.gnn.convnet", false], [105, "module-graphnet.models.gnn.dynedge", false], [106, "module-graphnet.models.gnn.dynedge_jinst", false], [107, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [108, "module-graphnet.models.gnn.gnn", false], [109, "module-graphnet.models.gnn.icemix", false], [110, "module-graphnet.models.gnn.particlenet", false], [111, "module-graphnet.models.gnn.transformer", false], [112, "module-graphnet.models.graphs", false], [113, "module-graphnet.models.graphs.edges", false], [114, "module-graphnet.models.graphs.edges.edges", false], [115, "module-graphnet.models.graphs.edges.minkowski", false], [116, "module-graphnet.models.graphs.graph_definition", false], [117, "module-graphnet.models.graphs.graphs", false], [118, "module-graphnet.models.graphs.nodes", false], [119, "module-graphnet.models.graphs.nodes.nodes", false], [120, "module-graphnet.models.graphs.utils", false], [121, "module-graphnet.models.model", false], [122, "module-graphnet.models.normalizing_flow", false], [123, "module-graphnet.models.rnn", false], [124, "module-graphnet.models.rnn.node_rnn", false], [125, "module-graphnet.models.standard_averaged_model", false], [126, "module-graphnet.models.standard_model", false], [127, "module-graphnet.models.task", false], [128, "module-graphnet.models.task.classification", false], [129, "module-graphnet.models.task.reconstruction", false], [130, "module-graphnet.models.task.task", false], [131, "module-graphnet.models.transformer", false], [132, "module-graphnet.models.transformer.iseecube", false], [133, "module-graphnet.models.utils", false], [134, "module-graphnet.training", false], [135, "module-graphnet.training.callbacks", false], [136, "module-graphnet.training.labels", false], [137, "module-graphnet.training.loss_functions", false], [139, "module-graphnet.training.weight_fitting", false], [140, "module-graphnet.utilities", false], [141, "module-graphnet.utilities.argparse", false], [142, "module-graphnet.utilities.config", false], [143, "module-graphnet.utilities.config.base_config", false], [144, "module-graphnet.utilities.config.configurable", false], [145, "module-graphnet.utilities.config.dataset_config", false], [146, "module-graphnet.utilities.config.model_config", false], [147, "module-graphnet.utilities.config.parsing", false], [148, "module-graphnet.utilities.config.training_config", false], [149, "module-graphnet.utilities.decorators", false], [150, "module-graphnet.utilities.deprecation_tools", false], [151, "module-graphnet.utilities.filesys", false], [152, "module-graphnet.utilities.imports", false], [153, "module-graphnet.utilities.logging", false], [154, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[128, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[108, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[128, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.DirectionReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstructionwithuncertainty attribute)": [[129, "graphnet.models.task.reconstruction.PositionReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[129, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[129, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[130, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[130, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[130, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[130, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[130, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[108, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[119, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[153, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[109, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "no_weight_decay() (graphnet.models.gnn.transformer.normformer method)": [[111, "graphnet.models.gnn.transformer.NormFormer.no_weight_decay", false]], "no_weight_decay() (graphnet.models.gnn.transformer.transformer method)": [[111, "graphnet.models.gnn.transformer.Transformer.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[124, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesashitstimeseries (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.NodesAsHitsTimeSeries", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[122, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "normformer (class in graphnet.models.gnn.transformer)": [[111, "graphnet.models.gnn.transformer.NormFormer", false]], "normformer_block (class in graphnet.models.components.layers)": [[93, "graphnet.models.components.layers.NormFormer_block", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[135, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[135, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[135, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[135, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[141, "graphnet.utilities.argparse.Options", false]], "orca115 (class in graphnet.models.detector.orca)": [[99, "graphnet.models.detector.orca.ORCA115", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "orca6 (class in graphnet.models.detector.orca)": [[99, "graphnet.models.detector.orca.ORCA6", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[68, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[60, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[73, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[110, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[119, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[135, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[141, "graphnet.utilities.argparse.Options.pop_default", false]], "positionalencoding (class in graphnet.models.components.embedding)": [[92, "graphnet.models.components.embedding.PositionalEncoding", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "positionreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.PositionReconstructionWithUncertainty", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[101, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "progressbar (class in graphnet.training.callbacks)": [[135, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[52, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[52, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[63, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[52, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[114, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[90, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[150, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[153, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[152, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[93, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[70, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[103, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[79, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "save() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[144, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[145, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[146, "graphnet.utilities.config.model_config.save_model_config", false]], "save_state_dict() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[69, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[97, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[98, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[99, "graphnet.models.detector.orca.IVANORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca115 attribute)": [[99, "graphnet.models.detector.orca.ORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca6 attribute)": [[99, "graphnet.models.detector.orca.ORCA6.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[100, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[100, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[100, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[100, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[96, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[96, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[119, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[119, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[121, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[135, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[122, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[126, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[92, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[92, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[74, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[141, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[130, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[130, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[126, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[153, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[97, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[98, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[99, "graphnet.models.detector.orca.IVANORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca115 attribute)": [[99, "graphnet.models.detector.orca.ORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca6 attribute)": [[99, "graphnet.models.detector.orca.ORCA6.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[100, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[100, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[100, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[100, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[96, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[70, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "sum_pool() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[94, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[148, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[101, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[130, "graphnet.models.task.task.Task", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[136, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.train", false]], "train_eval() (graphnet.models.task.task.task method)": [[130, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[148, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transformer (class in graphnet.models.gnn.transformer)": [[111, "graphnet.models.gnn.transformer.Transformer", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[147, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[145, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[90, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[139, "graphnet.training.weight_fitting.Uniform", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[58, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[122, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[126, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[101, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[125, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[121, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[137, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[153, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[100, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[139, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[141, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[97, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[97, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[97, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[98, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.orca.ivanorca115 attribute)": [[99, "graphnet.models.detector.orca.IVANORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca115 attribute)": [[99, "graphnet.models.detector.orca.ORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca6 attribute)": [[99, "graphnet.models.detector.orca.ORCA6.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[100, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[100, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[100, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[100, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[100, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[100, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[100, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[100, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[100, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "xyz_dir_to_zen_az() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[46, "graphnet.data.extractors.km3net.utilities.km3net_utilities.xyz_dir_to_zen_az", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[129, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [78, 0, 0, "-", "deployment"], [87, 0, 0, "-", "exceptions"], [89, 0, 0, "-", "models"], [134, 0, 0, "-", "training"], [140, 0, 0, "-", "utilities"]], "graphnet.data": [[6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [17, 0, 0, "-", "extractors"], [66, 0, 0, "-", "utilities"], [71, 0, 0, "-", "writers"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 3, 1, "", "get_map_function"], [7, 3, 1, "", "merge_files"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [49, 0, 0, "-", "liquido"], [51, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 4, 1, "", "flatten_nested_dictionary"], [34, 4, 1, "", "serialise"], [34, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 4, 1, "", "frame_is_montecarlo"], [35, 4, 1, "", "frame_is_noise"], [35, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 4, 1, "", "break_cyclic_recursion"], [37, 4, 1, "", "cast_object_to_pure_python"], [37, 4, 1, "", "cast_pulse_series_to_pure_python"], [37, 4, 1, "", "get_member_variables"], [37, 4, 1, "", "is_boost_class"], [37, 4, 1, "", "is_boost_enum"], [37, 4, 1, "", "is_icecube_class"], [37, 4, 1, "", "is_method"], [37, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.km3net": [[41, 0, 0, "-", "km3netrootextractor"], [42, 0, 0, "-", "km3netrootpulseextractor"], [45, 0, 0, "-", "utilities"]], "graphnet.data.extractors.km3net.km3netrootextractor": [[41, 1, 1, "", "KM3NeTROOTExtractor"]], "graphnet.data.extractors.km3net.km3netrootpulseextractor": [[42, 1, 1, "", "KM3NeTROOTPulseExtractor"]], "graphnet.data.extractors.km3net.utilities": [[46, 0, 0, "-", "km3net_utilities"], [47, 0, 0, "-", "utils_osc"], [48, 0, 0, "-", "weight_events_oscprob"]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[46, 4, 1, "", "assert_no_uint_values"], [46, 4, 1, "", "classifier_column_creator"], [46, 4, 1, "", "create_unique_id_filetype"], [46, 4, 1, "", "creating_time_zero"], [46, 4, 1, "", "filter_None_NaN"], [46, 4, 1, "", "xyz_dir_to_zen_az"]], "graphnet.data.extractors.liquido": [[50, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[50, 1, 1, "", "H5Extractor"], [50, 1, 1, "", "H5HitExtractor"], [50, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[52, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[52, 1, 1, "", "PrometheusExtractor"], [52, 1, 1, "", "PrometheusFeatureExtractor"], [52, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.readers": [[58, 0, 0, "-", "graphnet_file_reader"], [59, 0, 0, "-", "i3reader"], [60, 0, 0, "-", "internal_parquet_reader"], [62, 0, 0, "-", "liquido_reader"], [63, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[58, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[58, 5, 1, "", "accepted_extractors"], [58, 5, 1, "", "accepted_file_extensions"], [58, 5, 1, "", "extracor_names"], [58, 3, 1, "", "find_files"], [58, 3, 1, "", "set_extractors"], [58, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[59, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[59, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[60, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[60, 3, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[62, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[62, 3, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[63, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[63, 3, 1, "", "find_files"]], "graphnet.data.utilities": [[68, 0, 0, "-", "random"], [69, 0, 0, "-", "sqlite_utilities"], [70, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[68, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[69, 4, 1, "", "attach_index"], [69, 4, 1, "", "create_table"], [69, 4, 1, "", "create_table_and_save_to_sql"], [69, 4, 1, "", "database_exists"], [69, 4, 1, "", "database_table_exists"], [69, 4, 1, "", "get_primary_keys"], [69, 4, 1, "", "query_database"], [69, 4, 1, "", "run_sql_code"], [69, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[70, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[70, 3, 1, "", "resolve"]], "graphnet.data.writers": [[72, 0, 0, "-", "graphnet_writer"], [73, 0, 0, "-", "parquet_writer"], [74, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[72, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[72, 5, 1, "", "expects_merged_dataframes"], [72, 5, 1, "", "file_extension"], [72, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[73, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[73, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[74, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[74, 3, 1, "", "merge_files"]], "graphnet.deployment": [[79, 0, 0, "-", "deployer"], [80, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[79, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[79, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[80, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[84, 0, 0, "-", "cleaning_module"], [86, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[84, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[86, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[88, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[88, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[90, 0, 0, "-", "coarsening"], [91, 0, 0, "-", "components"], [95, 0, 0, "-", "detector"], [101, 0, 0, "-", "easy_model"], [102, 0, 0, "-", "gnn"], [112, 0, 0, "-", "graphs"], [121, 0, 0, "-", "model"], [122, 0, 0, "-", "normalizing_flow"], [123, 0, 0, "-", "rnn"], [125, 0, 0, "-", "standard_averaged_model"], [126, 0, 0, "-", "standard_model"], [127, 0, 0, "-", "task"], [131, 0, 0, "-", "transformer"], [133, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[90, 1, 1, "", "AttributeCoarsening"], [90, 1, 1, "", "Coarsening"], [90, 1, 1, "", "CustomDOMCoarsening"], [90, 1, 1, "", "DOMAndTimeWindowCoarsening"], [90, 1, 1, "", "DOMCoarsening"], [90, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[90, 3, 1, "", "forward"], [90, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[92, 0, 0, "-", "embedding"], [93, 0, 0, "-", "layers"], [94, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[92, 1, 1, "", "FeaturesProcessing"], [92, 1, 1, "", "FourierEncoder"], [92, 1, 1, "", "PositionalEncoding"], [92, 1, 1, "", "SinusoidalPosEmb"], [92, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FeaturesProcessing": [[92, 3, 1, "", "forward"]], "graphnet.models.components.embedding.FourierEncoder": [[92, 3, 1, "", "forward"]], "graphnet.models.components.embedding.PositionalEncoding": [[92, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[92, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[93, 1, 1, "", "Attention_rel"], [93, 1, 1, "", "Block"], [93, 1, 1, "", "Block_rel"], [93, 1, 1, "", "DropPath"], [93, 1, 1, "", "DynEdgeConv"], [93, 1, 1, "", "DynTrans"], [93, 1, 1, "", "EdgeConvTito"], [93, 1, 1, "", "Encoder_block"], [93, 1, 1, "", "Mlp"], [93, 1, 1, "", "NormFormer_block"]], "graphnet.models.components.layers.Attention_rel": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[93, 3, 1, "", "extra_repr"], [93, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[93, 3, 1, "", "forward"], [93, 3, 1, "", "message"], [93, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Encoder_block": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.Mlp": [[93, 3, 1, "", "forward"]], "graphnet.models.components.layers.NormFormer_block": [[93, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[94, 4, 1, "", "group_by"], [94, 4, 1, "", "group_pulses_to_dom"], [94, 4, 1, "", "group_pulses_to_pmt"], [94, 4, 1, "", "min_pool"], [94, 4, 1, "", "min_pool_x"], [94, 4, 1, "", "std_pool"], [94, 4, 1, "", "std_pool_x"], [94, 4, 1, "", "sum_pool"], [94, 4, 1, "", "sum_pool_and_distribute"], [94, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[96, 0, 0, "-", "detector"], [97, 0, 0, "-", "icecube"], [98, 0, 0, "-", "liquido"], [99, 0, 0, "-", "orca"], [100, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[96, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[96, 3, 1, "", "feature_map"], [96, 3, 1, "", "forward"], [96, 5, 1, "", "geometry_table"], [96, 5, 1, "", "sensor_index_name"], [96, 5, 1, "", "sensor_position_names"], [96, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[97, 1, 1, "", "IceCube86"], [97, 1, 1, "", "IceCubeDeepCore"], [97, 1, 1, "", "IceCubeKaggle"], [97, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[97, 3, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[97, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[97, 3, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[97, 3, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[98, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[98, 3, 1, "", "feature_map"], [98, 2, 1, "", "geometry_table_path"], [98, 2, 1, "", "sensor_id_column"], [98, 2, 1, "", "string_id_column"], [98, 2, 1, "", "xyz"]], "graphnet.models.detector.orca": [[99, 1, 1, "", "IVANORCA115"], [99, 1, 1, "", "ORCA115"], [99, 1, 1, "", "ORCA6"]], "graphnet.models.detector.orca.IVANORCA115": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA115": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA6": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[100, 1, 1, "", "ARCA115"], [100, 1, 1, "", "BaikalGVD8"], [100, 1, 1, "", "IceCube86Prometheus"], [100, 1, 1, "", "IceCubeDeepCore8"], [100, 1, 1, "", "IceCubeGen2"], [100, 1, 1, "", "IceCubeUpgrade7"], [100, 1, 1, "", "IceDemo81"], [100, 1, 1, "", "ORCA150"], [100, 1, 1, "", "ORCA150SuperDense"], [100, 1, 1, "", "PONETriangle"], [100, 1, 1, "", "Prometheus"], [100, 1, 1, "", "TRIDENT1211"], [100, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[100, 3, 1, "", "feature_map"], [100, 2, 1, "", "geometry_table_path"], [100, 2, 1, "", "sensor_id_column"], [100, 2, 1, "", "string_id_column"], [100, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[101, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[101, 3, 1, "", "compute_loss"], [101, 3, 1, "", "configure_optimizers"], [101, 3, 1, "", "fit"], [101, 3, 1, "", "forward"], [101, 3, 1, "", "inference"], [101, 3, 1, "", "predict"], [101, 3, 1, "", "predict_as_dataframe"], [101, 5, 1, "", "prediction_labels"], [101, 3, 1, "", "shared_step"], [101, 5, 1, "", "target_labels"], [101, 3, 1, "", "train"], [101, 3, 1, "", "training_step"], [101, 3, 1, "", "validate_tasks"], [101, 3, 1, "", "validation_step"]], "graphnet.models.gnn": [[103, 0, 0, "-", "RNN_tito"], [104, 0, 0, "-", "convnet"], [105, 0, 0, "-", "dynedge"], [106, 0, 0, "-", "dynedge_jinst"], [107, 0, 0, "-", "dynedge_kaggle_tito"], [108, 0, 0, "-", "gnn"], [109, 0, 0, "-", "icemix"], [110, 0, 0, "-", "particlenet"], [111, 0, 0, "-", "transformer"]], "graphnet.models.gnn.RNN_tito": [[103, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[103, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[104, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[104, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[105, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[105, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[106, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[106, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[107, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[107, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[108, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[108, 3, 1, "", "forward"], [108, 5, 1, "", "nb_inputs"], [108, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[109, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[109, 3, 1, "", "forward"], [109, 3, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[110, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[110, 3, 1, "", "forward"]], "graphnet.models.gnn.transformer": [[111, 1, 1, "", "NormFormer"], [111, 1, 1, "", "Transformer"]], "graphnet.models.gnn.transformer.NormFormer": [[111, 3, 1, "", "forward"], [111, 3, 1, "", "no_weight_decay"]], "graphnet.models.gnn.transformer.Transformer": [[111, 3, 1, "", "forward"], [111, 3, 1, "", "no_weight_decay"]], "graphnet.models.graphs": [[113, 0, 0, "-", "edges"], [116, 0, 0, "-", "graph_definition"], [117, 0, 0, "-", "graphs"], [118, 0, 0, "-", "nodes"], [120, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[114, 0, 0, "-", "edges"], [115, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[114, 1, 1, "", "EdgeDefinition"], [114, 1, 1, "", "EuclideanEdges"], [114, 1, 1, "", "KNNEdges"], [114, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[114, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[115, 1, 1, "", "MinkowskiKNNEdges"], [115, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[116, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[116, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[117, 1, 1, "", "EdgelessGraph"], [117, 1, 1, "", "HitsSequence"], [117, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[119, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[119, 1, 1, "", "IceMixNodes"], [119, 1, 1, "", "NodeAsDOMTimeSeries"], [119, 1, 1, "", "NodeDefinition"], [119, 1, 1, "", "NodesAsHitsTimeSeries"], [119, 1, 1, "", "NodesAsPulses"], [119, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[119, 3, 1, "", "forward"], [119, 5, 1, "", "nb_outputs"], [119, 3, 1, "", "set_number_of_inputs"], [119, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[120, 4, 1, "", "cluster_summarize_with_percentiles"], [120, 4, 1, "", "gather_cluster_sequence"], [120, 4, 1, "", "ice_transparency"], [120, 4, 1, "", "identify_indices"], [120, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[121, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[121, 3, 1, "", "extra_repr"], [121, 3, 1, "", "extra_repr_recursive"], [121, 3, 1, "", "from_config"], [121, 3, 1, "", "load"], [121, 3, 1, "", "load_state_dict"], [121, 3, 1, "", "save"], [121, 3, 1, "", "save_state_dict"], [121, 3, 1, "", "set_verbose_print_recursively"], [121, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[122, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[122, 3, 1, "", "forward"], [122, 3, 1, "", "shared_step"], [122, 3, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[124, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[124, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[124, 3, 1, "", "clean_up_data_object"], [124, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[125, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[125, 3, 1, "", "load_state_dict"], [125, 3, 1, "", "on_train_end"], [125, 3, 1, "", "optimizer_step"], [125, 3, 1, "", "training_step"], [125, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[126, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[126, 3, 1, "", "compute_loss"], [126, 3, 1, "", "forward"], [126, 3, 1, "", "shared_step"], [126, 3, 1, "", "validate_tasks"]], "graphnet.models.task": [[128, 0, 0, "-", "classification"], [129, 0, 0, "-", "reconstruction"], [130, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[128, 1, 1, "", "BinaryClassificationTask"], [128, 1, 1, "", "BinaryClassificationTaskLogits"], [128, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[128, 2, 1, "", "default_prediction_labels"], [128, 2, 1, "", "default_target_labels"], [128, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[128, 2, 1, "", "default_prediction_labels"], [128, 2, 1, "", "default_target_labels"], [128, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[129, 1, 1, "", "AzimuthReconstruction"], [129, 1, 1, "", "AzimuthReconstructionWithKappa"], [129, 1, 1, "", "DirectionReconstructionWithKappa"], [129, 1, 1, "", "DirectionReconstructionWithUncertainty"], [129, 1, 1, "", "EnergyReconstruction"], [129, 1, 1, "", "EnergyReconstructionWithPower"], [129, 1, 1, "", "EnergyReconstructionWithUncertainty"], [129, 1, 1, "", "EnergyTCReconstruction"], [129, 1, 1, "", "InelasticityReconstruction"], [129, 1, 1, "", "PositionReconstruction"], [129, 1, 1, "", "PositionReconstructionWithUncertainty"], [129, 1, 1, "", "TimeReconstruction"], [129, 1, 1, "", "VertexReconstruction"], [129, 1, 1, "", "ZenithReconstruction"], [129, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithUncertainty": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstructionWithUncertainty": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[129, 2, 1, "", "default_prediction_labels"], [129, 2, 1, "", "default_target_labels"], [129, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[130, 1, 1, "", "IdentityTask"], [130, 1, 1, "", "LearnedTask"], [130, 1, 1, "", "StandardFlowTask"], [130, 1, 1, "", "StandardLearnedTask"], [130, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[130, 5, 1, "", "default_prediction_labels"], [130, 5, 1, "", "default_target_labels"], [130, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[130, 3, 1, "", "compute_loss"], [130, 3, 1, "", "forward"], [130, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[130, 5, 1, "", "default_prediction_labels"], [130, 3, 1, "", "forward"], [130, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[130, 3, 1, "", "compute_loss"], [130, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[130, 5, 1, "", "default_prediction_labels"], [130, 5, 1, "", "default_target_labels"], [130, 3, 1, "", "inference"], [130, 5, 1, "", "nb_inputs"], [130, 3, 1, "", "train_eval"]], "graphnet.models.transformer": [[132, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[132, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[132, 3, 1, "", "forward"]], "graphnet.models.utils": [[133, 4, 1, "", "array_to_sequence"], [133, 4, 1, "", "calculate_distance_matrix"], [133, 4, 1, "", "calculate_xyzt_homophily"], [133, 4, 1, "", "get_fields"], [133, 4, 1, "", "knn_graph_batch"]], "graphnet.training": [[135, 0, 0, "-", "callbacks"], [136, 0, 0, "-", "labels"], [137, 0, 0, "-", "loss_functions"], [139, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[135, 1, 1, "", "GraphnetEarlyStopping"], [135, 1, 1, "", "PiecewiseLinearLR"], [135, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[135, 3, 1, "", "on_fit_end"], [135, 3, 1, "", "on_train_epoch_end"], [135, 3, 1, "", "on_validation_end"], [135, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[135, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[135, 3, 1, "", "get_metrics"], [135, 3, 1, "", "init_predict_tqdm"], [135, 3, 1, "", "init_test_tqdm"], [135, 3, 1, "", "init_train_tqdm"], [135, 3, 1, "", "init_validation_tqdm"], [135, 3, 1, "", "on_train_epoch_end"], [135, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[136, 1, 1, "", "Direction"], [136, 1, 1, "", "Label"], [136, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[136, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[137, 1, 1, "", "BinaryCrossEntropyLoss"], [137, 1, 1, "", "CrossEntropyLoss"], [137, 1, 1, "", "EnsembleLoss"], [137, 1, 1, "", "EuclideanDistanceLoss"], [137, 1, 1, "", "GaussianNegativeLogLikelihood1D"], [137, 1, 1, "", "GaussianNegativeLogLikelihood3D"], [137, 1, 1, "", "LogCMK"], [137, 1, 1, "", "LogCoshLoss"], [137, 1, 1, "", "LossFunction"], [137, 1, 1, "", "MSELoss"], [137, 1, 1, "", "RMSELoss"], [137, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [137, 1, 1, "", "VonMisesFisher2DLoss"], [137, 1, 1, "", "VonMisesFisher3DLoss"], [137, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[137, 3, 1, "", "backward"], [137, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[137, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[137, 3, 1, "", "log_cmk"], [137, 3, 1, "", "log_cmk_approx"], [137, 3, 1, "", "log_cmk_exact"]], "graphnet.training.weight_fitting": [[139, 1, 1, "", "BjoernLow"], [139, 1, 1, "", "Uniform"], [139, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[139, 3, 1, "", "fit"]], "graphnet.utilities": [[141, 0, 0, "-", "argparse"], [142, 0, 0, "-", "config"], [149, 0, 0, "-", "decorators"], [150, 0, 0, "-", "deprecation_tools"], [151, 0, 0, "-", "filesys"], [152, 0, 0, "-", "imports"], [153, 0, 0, "-", "logging"], [154, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[141, 1, 1, "", "ArgumentParser"], [141, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[141, 2, 1, "", "standard_arguments"], [141, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[141, 3, 1, "", "contains"], [141, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[143, 0, 0, "-", "base_config"], [144, 0, 0, "-", "configurable"], [145, 0, 0, "-", "dataset_config"], [146, 0, 0, "-", "model_config"], [147, 0, 0, "-", "parsing"], [148, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[143, 1, 1, "", "BaseConfig"], [143, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[143, 3, 1, "", "as_dict"], [143, 3, 1, "", "dump"], [143, 3, 1, "", "load"], [143, 2, 1, "", "model_computed_fields"], [143, 2, 1, "", "model_config"], [143, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[144, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[144, 5, 1, "", "config"], [144, 3, 1, "", "from_config"], [144, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[145, 1, 1, "", "DatasetConfig"], [145, 1, 1, "", "DatasetConfigSaverABCMeta"], [145, 1, 1, "", "DatasetConfigSaverMeta"], [145, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[145, 3, 1, "", "as_dict"], [145, 2, 1, "", "features"], [145, 2, 1, "", "graph_definition"], [145, 2, 1, "", "index_column"], [145, 2, 1, "", "labels"], [145, 2, 1, "", "loss_weight_column"], [145, 2, 1, "", "loss_weight_default_value"], [145, 2, 1, "", "loss_weight_table"], [145, 2, 1, "", "model_computed_fields"], [145, 2, 1, "", "model_config"], [145, 2, 1, "", "model_fields"], [145, 2, 1, "", "node_truth"], [145, 2, 1, "", "node_truth_table"], [145, 2, 1, "", "path"], [145, 2, 1, "", "pulsemaps"], [145, 2, 1, "", "seed"], [145, 2, 1, "", "selection"], [145, 2, 1, "", "string_selection"], [145, 2, 1, "", "truth"], [145, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[146, 1, 1, "", "ModelConfig"], [146, 1, 1, "", "ModelConfigSaverABC"], [146, 1, 1, "", "ModelConfigSaverMeta"], [146, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[146, 2, 1, "", "arguments"], [146, 3, 1, "", "as_dict"], [146, 2, 1, "", "class_name"], [146, 2, 1, "", "model_computed_fields"], [146, 2, 1, "", "model_config"], [146, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[147, 4, 1, "", "get_all_grapnet_classes"], [147, 4, 1, "", "get_graphnet_classes"], [147, 4, 1, "", "is_graphnet_class"], [147, 4, 1, "", "is_graphnet_module"], [147, 4, 1, "", "list_all_submodules"], [147, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[148, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[148, 2, 1, "", "dataloader"], [148, 2, 1, "", "early_stopping_patience"], [148, 2, 1, "", "fit"], [148, 2, 1, "", "model_computed_fields"], [148, 2, 1, "", "model_config"], [148, 2, 1, "", "model_fields"], [148, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[150, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[151, 4, 1, "", "find_i3_files"], [151, 4, 1, "", "has_extension"], [151, 4, 1, "", "is_gcd_file"], [151, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[152, 4, 1, "", "has_icecube_package"], [152, 4, 1, "", "has_jammy_flows_package"], [152, 4, 1, "", "has_torch_package"], [152, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[153, 1, 1, "", "Logger"], [153, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[153, 3, 1, "", "critical"], [153, 3, 1, "", "debug"], [153, 3, 1, "", "error"], [153, 5, 1, "", "file_handlers"], [153, 5, 1, "", "handlers"], [153, 3, 1, "", "info"], [153, 3, 1, "", "setLevel"], [153, 5, 1, "", "stream_handlers"], [153, 3, 1, "", "warning"], [153, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[153, 3, 1, "", "filter"], [153, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[154, 4, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 7, 34, 58, 62, 63, 72, 74, 79, 92, 96, 101, 104, 105, 110, 116, 122, 130, 133, 135, 139, 141, 145, 146, 153, 154, 157, 158, 159, 160, 162, 163, 164], "0": [48, 59, 70, 84, 90, 93, 94, 103, 104, 105, 107, 110, 111, 114, 115, 117, 120, 124, 130, 133, 136, 137, 145, 158, 159, 161, 162, 164], "000": 158, "001": [159, 164], "01": [159, 164], "0221": 159, "02_data": 159, "03042": 106, "03762": 92, "03772": 111, "04616": 137, "04_ensemble_dataset": 159, "05": 137, "06": 156, "06166": 114, "08570": 110, "0e04": 162, "0e4": 162, "1": [0, 7, 19, 34, 48, 70, 73, 79, 90, 93, 94, 103, 105, 107, 109, 110, 111, 114, 115, 117, 120, 124, 128, 129, 130, 133, 135, 136, 137, 139, 145, 157, 158, 159, 160, 161, 163, 164], "10": [97, 98, 99, 100, 119, 120, 141, 158, 159, 162, 164], "100": 158, "1000": [130, 158, 159], "10000": [70, 92], "1088": 159, "11": [159, 161], "115": 99, "12": [48, 70, 109, 132, 145, 158, 159], "120": 159, "128": [92, 93, 104, 105, 107, 110, 141, 158, 159, 164], "13": 70, "14": [48, 70, 145, 158, 159], "1536": 132, "15674": 92, "16": [70, 92, 103, 110, 132, 145, 158, 159, 164], "17": 159, "1706": 92, "1748": 159, "180": 48, "1809": 114, "1812": 137, "1902": 110, "192": 109, "196": 132, "1e6": 130, "2": [34, 48, 93, 94, 103, 105, 107, 110, 111, 114, 117, 120, 124, 129, 133, 137, 145, 158, 159, 161, 164], "20": [70, 153, 159, 161, 162, 164], "200": [158, 162], "200000": 73, "2014": 48, "2018": 156, "2019": 137, "2020": [0, 160, 163], "21": [156, 158, 159], "2202": 111, "2209": 106, "230": 48, "2310": 92, "232": 48, "256": [48, 93, 105, 107, 110, 111, 132], "26": 158, "276": 48, "2d": 137, "2nd": [92, 109], "3": [48, 94, 103, 104, 107, 115, 120, 124, 129, 132, 133, 137, 156, 159, 161, 162], "30": 162, "300": [92, 119, 158, 162], "32": [92, 109, 132], "33": 48, "336": [105, 107], "384": [92, 109, 132], "39": [0, 160, 163], "3d": [129, 137], "4": [48, 93, 106, 109, 111, 129, 159, 162, 164], "40": 162, "400": 74, "41": 48, "41e": 48, "42": 48, "42e": 48, "45": 48, "465e": 48, "49": 48, "5": [48, 70, 103, 124, 137, 141, 157, 158, 159, 161, 162, 164], "50": [119, 120, 141, 162], "500": [120, 162], "50000": [70, 145, 158, 159], "5001": 158, "507e": 48, "510e": 48, "57": 48, "58": 48, "59": 161, "6": [92, 94, 99, 109, 129, 132], "62": 48, "6371": 48, "64": [103, 110], "7": [48, 84, 94], "700": 137, "768": 119, "8": [48, 93, 94, 103, 105, 107, 111, 117, 124, 137, 156, 158, 159, 161, 164], "80": [159, 164], "86": [22, 97], "890778": [0, 160, 163], "90": [119, 120], "A": [7, 36, 48, 58, 59, 60, 62, 63, 69, 74, 79, 80, 84, 94, 101, 116, 117, 120, 121, 122, 126, 128, 130, 133, 137, 139, 143, 145, 146, 148, 157, 158, 159, 162, 164], "AND": 137, "AS": 137, "As": [105, 110, 164], "BE": 137, "BUT": 137, "But": 164, "By": [0, 59, 130, 158, 159, 160, 163, 164], "FOR": 137, "For": [37, 119, 135, 158, 159, 164], "IN": 137, "If": [21, 23, 36, 74, 92, 93, 105, 109, 110, 116, 119, 120, 121, 130, 135, 137, 139, 156, 157, 159, 164], "In": [58, 59, 72, 145, 146, 157, 159, 161], "It": [1, 34, 69, 84, 92, 120, 128, 130, 156, 158, 159, 164], "NO": 137, "NOT": [69, 137, 159], "No": [0, 159, 160, 163], "OF": 137, "OR": 137, "One": 159, "Or": 158, "Such": 69, "THE": 137, "TO": 137, "That": [105, 110, 129, 136, 159, 164], "The": [0, 7, 18, 34, 37, 48, 69, 72, 73, 74, 79, 80, 84, 86, 90, 92, 93, 94, 103, 105, 107, 109, 110, 111, 114, 116, 120, 122, 124, 128, 129, 130, 132, 133, 135, 136, 137, 150, 157, 158, 160, 162, 163], "Then": 156, "There": [159, 164], "These": [0, 58, 72, 74, 116, 156, 158, 159, 160, 162, 163, 164], "To": [158, 159, 161, 162, 164], "WITH": 137, "Will": [79, 84, 86, 114, 157], "With": [159, 162, 164], "_": 159, "__": [34, 37, 159], "_____________________": 137, "__call__": [19, 21, 58, 80, 157, 158, 159, 162], "__fields__": [143, 145, 146, 148], "__init__": [145, 146, 157, 158, 159, 164], "_accepted_extractor": [157, 162], "_accepted_file_extens": [157, 162], "_and_": [105, 110], "_column_nam": 157, "_construct_edg": 114, "_definition_": 159, "_extractor": [157, 162], "_extractor_nam": [157, 162], "_file_extens": 157, "_fit_weight": 139, "_forward": 164, "_layer": 164, "_lrschedul": 135, "_merge_datafram": 157, "_osc_prob": 48, "_pdgid2flavor": 48, "_pred": 130, "_save_fil": 157, "_sensor_tim": 162, "_sensor_xyz": 162, "_tabl": 157, "_task": [101, 122, 126], "_verify_column": 157, "_x_": 159, "_zipequ": 48, "a__b": 34, "ab": [70, 110, 137, 145, 158, 159], "abc": [7, 19, 58, 72, 79, 121, 136, 139, 144, 145, 146], "abcmeta": [145, 146], "abil": 158, "abl": [34, 119, 122, 157, 159, 161, 162, 164], "about": [121, 143, 145, 146, 148, 158, 159, 162], "abov": [137, 139, 158, 159, 162, 164], "absopt": 119, "absorpt": 120, "abstract": [1, 72, 96, 108, 116, 130, 144, 159], "abstractmethod": 158, "acceler": 1, "accept": [58, 156, 164], "accepted_extractor": [58, 157], "accepted_file_extens": [58, 157], "access": [136, 158], "accompani": [59, 159], "accord": [90, 94, 114, 116, 117, 120, 137], "achiev": 161, "achitectur": 164, "across": [1, 2, 37, 66, 79, 94, 101, 126, 137, 140, 141, 142, 153, 162], "act": [130, 137, 159, 164], "action": 137, "activ": [93, 101, 103, 105, 110, 119, 124, 130, 156], "activation_lay": [105, 110], "actual": [159, 164], "ad": [7, 22, 92, 105, 109, 116, 119, 120], "adam": [122, 159, 164], "adapt": [159, 164], "add": [93, 105, 110, 141, 150, 156, 159, 162], "add_batchnorm_lay": 110, "add_count": [119, 120], "add_global_variables_after_pool": [105, 159, 164], "add_ice_properti": 119, "add_inactive_sensor": 116, "add_label": [158, 159], "add_norm_lay": 105, "add_to_databas": 139, "addit": [58, 72, 90, 93, 101, 137, 139, 157, 159, 164], "additional_attribut": [101, 159, 164], "address": 164, "adher": [156, 164], "adjac": 96, "adjust": 164, "advanc": [1, 94], "after": [93, 103, 105, 107, 110, 135, 141, 145, 158, 159, 164], "afterward": [92, 93], "again": [159, 164], "aggr": 93, "aggreg": [93, 94], "agnost": [0, 160, 163, 164], "agreement": [0, 156, 160, 163], "ai": 159, "aim": [0, 1, 156, 159, 160, 163], "algorithm": 26, "all": [1, 18, 19, 21, 23, 36, 41, 48, 69, 74, 84, 92, 93, 94, 96, 105, 108, 110, 115, 116, 121, 130, 137, 139, 143, 144, 145, 146, 147, 148, 153, 156, 157, 158, 159, 162, 164], "allow": [0, 39, 78, 89, 94, 135, 143, 148, 158, 159, 160, 163, 164], "along": [120, 159, 164], "alongsid": [159, 164], "alreadi": 69, "also": [7, 70, 103, 145, 157, 158, 159, 162, 164], "alter": 116, "altern": [105, 137, 156], "although": [92, 93], "amount": 103, "an": [0, 19, 37, 48, 59, 70, 92, 116, 117, 124, 125, 137, 151, 153, 156, 157, 159, 160, 161, 162, 163, 164], "anaconda": 161, "analys": [78, 159], "analysi": 79, "angl": [46, 48, 129, 136, 159, 164], "ani": [6, 7, 34, 35, 36, 37, 58, 60, 62, 63, 72, 74, 84, 90, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 137, 139, 141, 143, 144, 145, 146, 147, 148, 153, 158, 159, 164], "annot": [145, 146, 148], "anoth": [145, 146, 158, 159], "anu": 48, "anumu": 48, "anyth": 156, "api": [1, 157, 159], "appear": [79, 158, 159], "append": [48, 116], "appli": [7, 58, 79, 93, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 120, 122, 124, 126, 128, 130, 132, 137, 147, 157, 158, 159], "applic": [34, 158, 159, 164], "appropri": [69, 130, 159], "approx": 137, "approxim": 74, "ar": [0, 1, 21, 23, 36, 37, 48, 58, 70, 72, 73, 74, 79, 84, 93, 94, 103, 105, 107, 110, 112, 113, 114, 116, 117, 118, 119, 120, 124, 128, 137, 139, 145, 146, 156, 157, 158, 159, 160, 162, 163, 164], "arbitrari": [0, 160, 163], "arca": 100, "arca115": [95, 100], "architectur": [1, 104, 105, 106, 107, 109, 110, 122, 124, 132, 159, 164], "area": 1, "arg": [18, 36, 48, 90, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 130, 132, 137, 141, 143, 153, 157, 162], "argpars": [48, 140], "argument": [73, 109, 122, 135, 139, 141, 143, 145, 146, 148, 158, 159, 162, 164], "argumentpars": [140, 141], "aris": 137, "arrai": [19, 31, 34, 48, 119, 120, 133, 157, 158, 159, 162], "array_to_sequ": [89, 133], "arriv": 158, "art": [0, 160, 163], "articl": 159, "artifact": [159, 164], "arxiv": [92, 110, 111, 114, 137], "as_dict": [143, 145, 146, 159, 164], "asarrai": 48, "assert": [46, 157, 158], "assert_no_uint_valu": [45, 46], "assertionerror": 157, "assign": [7, 90, 94, 117, 156, 157], "associ": [84, 86, 92, 116, 120, 129, 137, 157, 158, 159, 162, 164], "assort": 154, "assum": [84, 92, 96, 116, 120, 130, 133], "atmospher": [48, 158], "attach": 69, "attach_index": [66, 69], "attempt": [21, 159], "attent": [92, 93, 109, 132], "attention_rel": [91, 93], "attn_drop": 93, "attn_head_dim": 93, "attn_mask": 93, "attribut": [90, 130, 158, 159, 164], "attributecoarsen": [89, 90], "author": [104, 106, 137], "auto": 130, "autom": 156, "automat": [23, 73, 92, 116, 137, 156, 157, 159, 162], "automatic_log_bin": 139, "auxiliari": [92, 159, 164], "avail": [7, 23, 128, 129, 130, 152, 157, 158, 159, 161, 162, 164], "available_t": 157, "averag": [48, 94, 125, 137], "avg": 90, "avg_pool": 90, "avg_pool_x": 90, "avoid": [153, 156], "awai": [1, 159], "azimiuth": 136, "azimuth": [46, 48, 129, 136], "azimuth_kappa": 129, "azimuth_kei": 136, "azimuth_pr": 129, "azimuthreconstruct": [127, 129], "azimuthreconstructionwithkappa": [127, 129], "b": [34, 90, 94, 133, 159, 162, 164], "backbon": [122, 159], "backend": [71, 73, 162], "backward": [120, 137], "baikalgvd8": [95, 100], "bar": 135, "base": [0, 6, 7, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 42, 48, 50, 52, 58, 59, 60, 62, 63, 70, 72, 73, 74, 79, 80, 84, 86, 88, 90, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 130, 132, 135, 136, 137, 139, 141, 143, 144, 145, 146, 148, 152, 153, 157, 158, 159, 160, 163, 164], "base_config": 142, "baseclass": 79, "baseconfig": [142, 143, 144, 145, 146, 148], "basemodel": [143, 145, 146], "basi": 164, "basic": [1, 159], "batch": [0, 73, 90, 93, 94, 101, 110, 122, 124, 126, 133, 141, 158, 160, 163], "batch_idx": [101, 122, 125, 126, 133], "batch_siz": [133, 158, 159, 164], "becaus": [68, 159, 164], "been": [84, 137, 156, 164], "befor": [92, 105, 115, 124, 130, 135], "behavior": 157, "behaviour": 135, "behind": [159, 164], "being": [21, 84, 92, 128, 130, 158, 159, 164], "beitv2": 93, "belong": 133, "below": [70, 119, 139, 156, 157, 159, 160, 162, 163, 164], "besid": 158, "bessel": 137, "best": [0, 48, 135, 156, 160, 163], "better": 156, "between": [39, 92, 101, 112, 113, 114, 115, 118, 122, 126, 130, 133, 135, 137, 139, 145, 146, 159, 164], "bia": [93, 132], "bias": [159, 164], "big": [159, 164], "biject": 157, "bin": 139, "binari": [126, 128, 137, 164], "binaryclassificationtask": [127, 128, 159, 164], "binaryclassificationtasklogit": [127, 128], "binarycrossentropyloss": [134, 137], "bjoernlow": [134, 139], "black": 156, "blob": [116, 137, 159], "block": [0, 1, 91, 92, 93, 110, 111, 159, 160, 163], "block_rel": [91, 93], "boilerpl": 164, "bool": [35, 36, 37, 48, 69, 70, 72, 84, 92, 93, 101, 103, 105, 107, 109, 110, 116, 119, 120, 121, 126, 132, 135, 137, 139, 141, 147, 150, 151, 152, 153], "boost": 37, "border": 31, "both": [0, 23, 122, 126, 130, 159, 160, 162, 163, 164], "boundari": 31, "box": [157, 159, 164], "branch": 156, "break_cyclic_recurs": [33, 37], "broken": 59, "bucket": 132, "bug": [156, 159], "build": [0, 1, 89, 96, 114, 115, 119, 120, 121, 122, 143, 145, 146, 159, 160, 163, 164], "built": [0, 89, 116, 122, 158, 159, 160, 162, 163, 164], "c": [21, 34, 94, 115, 137, 159], "c_": 137, "calcul": [48, 84, 92, 101, 114, 117, 119, 122, 126, 133, 136, 137, 158, 159, 164], "calculate_distance_matrix": [89, 133], "calculate_xyzt_homophili": [89, 133], "calibr": [35, 37], "call": [7, 23, 37, 92, 93, 94, 130, 135, 139, 153, 157, 159, 162, 164], "callabl": [37, 93, 94, 96, 97, 98, 99, 100, 116, 125, 130, 139, 143, 145, 146, 147, 152, 162], "callback": [101, 134, 159, 164], "can": [0, 1, 19, 23, 26, 84, 92, 94, 116, 122, 139, 141, 143, 145, 146, 156, 157, 158, 159, 160, 162, 163, 164], "cannot": [37, 124, 139, 143, 148], "cap": 139, "capabl": [0, 126, 160, 163], "captur": [159, 164], "care": [48, 92, 93, 158], "carlo": 35, "cascad": 129, "case": [23, 59, 84, 94, 120, 130, 157, 158, 159, 161, 164], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 159, "caveat": [159, 164], "cc": [48, 136], "cc_mask": 48, "cd": 161, "center": 114, "centr": 114, "central": [159, 161], "certain": 159, "cframe": 21, "chain": [0, 1, 78, 89, 101, 122, 126, 137, 160, 161, 163], "chang": [137, 156, 159, 164], "charg": [92, 103, 119, 120, 124, 137, 158, 159, 164], "charge_column": 119, "check": [35, 36, 37, 58, 69, 119, 141, 151, 152, 156, 162], "checkpoint": 159, "checkpointing_bas": 159, "chenli2049": 132, "cherenkov": [119, 120, 159, 162, 164], "choic": [158, 159, 164], "choos": [159, 164], "chose": 48, "chosen": [114, 120, 153, 158], "chunk": 157, "ckpt": [159, 164], "ckpt_path": 101, "cl": 111, "claim": 137, "clash": 153, "class": [6, 7, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 42, 48, 50, 52, 58, 59, 60, 62, 63, 70, 72, 73, 74, 79, 80, 84, 86, 90, 92, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 130, 132, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 153, 156, 157, 158], "class_nam": [36, 58, 60, 62, 63, 72, 146, 153, 158, 159, 164], "classif": [1, 126, 127, 130, 137, 159, 164], "classifi": [46, 128, 158, 159, 164], "classifier_column_cr": [45, 46], "classmethod": [121, 137, 143, 144, 159, 164], "classvar": [143, 145, 146, 148], "clean": [84, 156, 161], "clean_up_data_object": 124, "cleaning_modul": 83, "clear": [153, 158], "cli": 141, "clone": 161, "closest": 135, "cloud": [159, 164], "cls_tocken": [109, 111], "cls_token": 93, "cluster": [90, 93, 94, 103, 105, 107, 110, 119, 120, 124], "cluster_column": 120, "cluster_index": 94, "cluster_indic": 120, "cluster_on": [119, 120], "cluster_summarize_with_percentil": [112, 120], "cnn": [159, 164], "co": 48, "coarsen": [89, 94], "code": [0, 31, 42, 45, 46, 69, 116, 145, 146, 157, 158, 159, 160, 162, 163, 164], "coincid": 119, "collabor": [1, 159, 164], "collect": [20, 33, 137, 154, 159, 164], "column": [7, 19, 46, 50, 52, 69, 73, 74, 80, 86, 88, 92, 96, 101, 103, 114, 116, 117, 119, 120, 124, 128, 129, 130, 133, 137, 139, 157, 158, 159, 162, 164], "column_nam": [50, 157], "column_offset": 120, "columnmissingexcept": [87, 88], "com": [109, 116, 122, 132, 137, 159, 161], "combin": [18, 34, 103, 126, 137, 145, 164], "combine_extractor": 17, "combinedextractor": [17, 18], "come": [101, 130, 157, 158, 159, 164], "command": 141, "commit": 156, "common": [0, 1, 137, 145, 146, 149, 152, 158, 159, 160, 163], "compar": [159, 164], "comparison": [26, 137], "compat": [58, 70, 101, 122, 126, 130, 157, 158, 159, 164], "competit": [92, 93, 97, 107, 109], "complet": [0, 89, 159, 160, 161, 163, 164], "complex": [0, 89, 159, 160, 163], "compon": [0, 1, 89, 101, 121, 122, 126, 159, 160, 163, 164], "compos": [159, 164], "composit": 153, "comprehens": 159, "compress": 158, "compris": [0, 160, 163], "comput": [48, 80, 92, 93, 101, 115, 126, 130, 133, 137, 143, 145, 146, 148, 158, 159], "compute_evt_weight": 48, "compute_loss": [101, 126, 130], "compute_minkowski_distance_mat": [113, 115], "compute_osc_weight": 48, "computedfieldinfo": [143, 145, 146, 148], "con": [159, 164], "concaten": [34, 105], "concept": 156, "conceptu": [157, 159], "concret": 159, "condit": [122, 130, 137], "condition_on": 122, "confid": 159, "config": [48, 70, 135, 137, 140, 141, 158, 159, 164], "config_dir": [159, 164], "configdict": [143, 145, 146, 148], "configur": [0, 1, 80, 89, 101, 121, 142, 143, 145, 146, 148, 153, 157, 159, 160, 163, 164], "configure_optim": 101, "conflict": 159, "conform": [143, 145, 146, 148], "conjunct": [19, 130], "conn": 159, "connect": [0, 114, 115, 116, 119, 137, 158, 159, 160, 163], "consecut": 92, "consequ": 121, "consid": [48, 84, 103, 111, 158, 159, 162], "consist": [48, 92, 141, 153, 156, 159, 164], "consortium": [0, 160, 163], "constant": [1, 3, 130, 155, 158, 159, 164], "constitut": [73, 158], "constraint": [101, 159], "construct": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 50, 52, 58, 60, 62, 63, 70, 72, 73, 74, 80, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 132, 135, 136, 137, 139, 141, 144, 145, 146, 153, 157, 158, 159, 164], "constructor": [157, 158, 159], "consult": 164, "consum": 159, "consumpt": 158, "contain": [0, 6, 7, 17, 18, 21, 34, 35, 38, 39, 48, 49, 52, 58, 59, 60, 69, 72, 73, 74, 79, 80, 84, 86, 88, 101, 105, 110, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 130, 133, 137, 139, 141, 157, 158, 159, 160, 162, 163, 164], "containeris": 1, "content": [157, 164], "continu": [0, 92, 137, 159, 160, 163], "contract": 137, "contribut": [0, 137, 159, 160, 163], "contributor": 156, "conveni": [1, 156, 159, 164], "convent": [48, 59], "convers": [7, 38, 39, 52, 119, 158, 159, 162], "convert": [0, 1, 7, 21, 34, 36, 46, 73, 133, 157, 158, 159, 160, 161, 162, 163], "convnet": [102, 159], "convolut": [93, 104, 105, 106, 107, 110], "coo": 158, "coordin": [31, 96, 115, 119, 120, 133, 159], "copi": [137, 158], "copyright": 137, "core": 108, "correct": [48, 137], "correpond": 68, "correspond": [34, 37, 68, 105, 110, 116, 120, 139, 143, 145, 146, 148, 151, 158, 159, 162, 164], "cos_zenith": 48, "cosh": 137, "cosin": 48, "costheta": 48, "cosz": 48, "could": [156, 159, 164], "count_nonzero": 48, "counterpart": 158, "cover": 70, "cpu": [7, 80], "creat": [46, 69, 116, 117, 119, 143, 144, 148, 156, 158, 164], "create_t": [66, 69], "create_table_and_save_to_sql": [66, 69], "create_unique_id_filetyp": [45, 46], "creating_time_zero": [45, 46], "critic": [153, 159, 162], "cross": 137, "crossentropyloss": [134, 137], "csv": [145, 158, 159, 162, 164], "ctx": 137, "cuda": 161, "curated_datamodul": 3, "curi": [0, 160, 163], "current": [48, 70, 124, 135, 156, 159], "curv": 139, "custom": [58, 87, 116, 135, 164], "custom_label_funct": 116, "customdomcoarsen": [89, 90], "customis": 135, "d": [34, 115, 116, 119, 133, 156, 162], "damag": 137, "data": [0, 1, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 117, 119, 122, 124, 125, 126, 130, 132, 133, 136, 141, 143, 145, 148, 152, 155, 158, 159, 160, 163, 164], "data_path": 116, "databas": [69, 74, 139, 158, 159], "database_exist": [66, 69], "database_nam": 74, "database_path": [69, 139], "database_table_exist": [66, 69], "dataclass": [3, 35], "dataconfig": [145, 158], "dataconvert": [3, 55, 72, 73, 74, 159, 162], "dataformat": [71, 74], "datafram": [46, 69, 70, 72, 96, 101, 139, 157, 159, 162, 164], "dataload": [3, 101, 116, 148, 158, 159, 164], "datamodul": 3, "datarepresent": 122, "dataset": [1, 3, 25, 70, 73, 88, 103, 116, 124, 141, 145, 155, 162, 164], "dataset_1": [158, 159], "dataset_2": [158, 159], "dataset_3": [158, 159], "dataset_config": [142, 159, 164], "dataset_config_path": [159, 164], "datasetconfig": [70, 142, 145, 158, 164], "datasetconfigsav": 145, "datasetconfigsaverabcmeta": [142, 145], "datasetconfigsavermeta": [142, 145], "db": [74, 139, 158, 159], "db_count_norm": 139, "dcp": 48, "ddp": [159, 164], "de": 34, "deactiv": [101, 130], "deal": 137, "debug": [153, 159], "decai": [109, 111], "decor": [140, 152], "dedic": 156, "deem": 37, "deep": [0, 72, 74, 93, 107, 109, 157, 159, 160, 161, 162, 163, 164], "deepcopi": 150, "deepcor": [22, 97], "deepic": [102, 109], "def": [48, 157, 158, 159, 162, 164], "default": [7, 21, 23, 31, 34, 48, 52, 59, 69, 73, 74, 79, 80, 84, 86, 92, 93, 94, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 130, 132, 133, 135, 136, 137, 139, 141, 143, 145, 151, 158, 159], "default_prediction_label": [128, 129, 130, 164], "default_target_label": [128, 129, 130, 164], "default_typ": 69, "defin": [70, 80, 84, 86, 92, 93, 94, 112, 113, 114, 116, 118, 120, 122, 143, 145, 146, 148, 158, 159, 162, 164], "definit": [48, 114, 116, 117, 119, 121, 130, 156, 159, 164], "deleg": 153, "deliv": 101, "delta13": 48, "delta_m21": 48, "delta_m31": 48, "demo_ic": 100, "demo_wat": 100, "denot": [19, 135, 136, 157, 162], "dens": 94, "depend": [0, 92, 157, 158, 159, 160, 163, 164], "deploi": [0, 1, 78, 80, 159, 160, 161, 163], "deploy": [0, 1, 116, 155, 159, 160, 162, 163, 164], "deployment_modul": 78, "deploymentmodul": [78, 79, 80, 86], "deprec": 150, "deprecated_method": [53, 64, 81], "deprecation_tool": 140, "depth": [93, 109, 120, 132], "depth_rel": 109, "describ": [156, 159], "descript": [48, 121, 141], "design": [1, 159, 162], "desir": [119, 139, 151], "detail": [1, 103, 121, 122, 130, 135, 158, 159, 161, 162, 164], "detector": [0, 1, 31, 89, 116, 117, 119, 158, 159, 160, 163, 164], "detector_respons": 159, "determin": [79, 103], "develop": [0, 1, 156, 158, 159, 160, 161, 162, 163, 164], "deviat": [116, 117, 120], "devic": 80, "df": [46, 69, 157], "dfg": [0, 160, 163], "dict": [23, 34, 37, 48, 69, 80, 96, 97, 98, 99, 100, 101, 109, 116, 117, 119, 121, 122, 125, 135, 141, 143, 145, 146, 147, 148, 150, 157, 158, 159, 162], "dictionari": [19, 34, 35, 37, 58, 69, 116, 117, 121, 143, 145, 146, 148, 157, 162], "differ": [0, 19, 21, 39, 41, 49, 50, 52, 58, 59, 60, 117, 156, 157, 158, 159, 160, 162, 163, 164], "difficult": 158, "diffier": [159, 164], "digit": 92, "dim": [92, 93], "dimenion": [105, 107, 110], "dimens": [92, 93, 97, 98, 99, 100, 103, 104, 105, 107, 109, 110, 111, 120, 124, 130, 132, 133, 137, 162, 164], "dimension": [92, 93, 158, 164], "dir": [48, 151], "dir_i": 46, "dir_with_fil": [157, 162], "dir_x": 46, "dir_x_pr": 129, "dir_x_sigma": 129, "dir_y_pr": 129, "dir_y_sigma": 129, "dir_z": [46, 48], "dir_z_pr": 129, "dir_z_sigma": 129, "direct": [46, 107, 109, 120, 128, 129, 130, 134, 136, 158, 162], "direction_kappa": 129, "directionreconstructionwithkappa": [127, 129, 159, 164], "directionreconstructionwithuncertainti": [127, 129], "directli": [0, 105, 110, 157, 159, 160, 162, 163, 164], "directori": [7, 58, 59, 60, 62, 63, 72, 73, 135, 151, 157, 159, 164], "dirti": 159, "discard_empty_ev": 84, "disconnect": 158, "discuss": 156, "disk": [157, 158, 159], "distanc": [114, 115, 117, 133], "distribut": [94, 105, 122, 129, 137, 139, 161, 164], "distribution_strategi": 101, "ditto": 137, "diverg": 137, "divid": [79, 130], "dl": [159, 164], "dm_21": 48, "dm_31": 48, "dnn": [25, 32], "do": [0, 80, 84, 137, 145, 146, 156, 158, 159, 160, 163, 164], "doc": 159, "docformatt": 156, "docker": 1, "docstr": 156, "document": [122, 137, 162, 164], "doe": [37, 128, 130, 146, 157, 158, 159, 164], "doesn": 69, "dom": [90, 94, 103, 119, 120, 124, 159, 164], "dom_i": [97, 119], "dom_tim": 119, "dom_x": [97, 119], "dom_z": [97, 119], "domain": [0, 1, 78, 159, 160, 163], "domandtimewindowcoarsen": [89, 90], "domcoarsen": [89, 90], "don": [135, 157], "done": [23, 94, 153, 156, 157, 159, 162], "dot": 93, "download": 161, "downsid": 158, "drawn": [112, 113, 117, 118, 159, 164], "drhb": 109, "drop": [93, 104], "drop_path": 93, "drop_prob": 93, "dropout": [93, 103, 110, 111, 124], "dropout_attn": [93, 111], "dropout_attn_cl": 111, "dropout_ffnn": [93, 111], "dropout_prob": 93, "dropout_ratio": 104, "dropout_readout": 110, "droppath": [91, 93], "dtype": [116, 117, 154, 158, 159, 164], "due": [158, 159, 164], "dummy_pid": [158, 159], "dump": [143, 145, 146, 157, 158, 159], "duplciat": 135, "duplic": 119, "dure": [93, 109, 111, 116, 130, 135, 162], "dynam": [23, 93, 105, 106, 107, 110, 159, 164], "dynedg": [84, 86, 102, 106, 107, 109, 110, 159, 164], "dynedge_arg": 109, "dynedge_jinst": 102, "dynedge_kaggle_tito": 102, "dynedge_layer_s": [105, 110, 159, 164], "dynedgeconv": [91, 93, 105, 110], "dynedgejinst": [102, 106], "dynedgetito": [102, 103, 107], "dyntran": [91, 93, 103, 107], "dyntrans1": 93, "dyntrans_layer_s": [103, 107], "e": [1, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 48, 52, 69, 70, 74, 80, 84, 86, 90, 92, 93, 94, 96, 97, 98, 99, 100, 104, 108, 111, 114, 116, 117, 119, 120, 121, 122, 125, 126, 128, 129, 130, 133, 135, 136, 137, 139, 143, 153, 156, 157, 158, 159, 161, 164], "each": [23, 34, 37, 46, 48, 68, 69, 73, 74, 79, 80, 90, 92, 93, 94, 97, 98, 99, 100, 103, 105, 107, 110, 114, 116, 117, 119, 120, 124, 128, 130, 133, 135, 137, 151, 157, 158, 159, 162, 164], "earli": [135, 141], "early_stopping_pati": [101, 148], "earlystop": 135, "earth": 48, "easi": [0, 157, 158, 159, 160, 163, 164], "easili": [1, 159, 164], "easy_model": 89, "easysyntax": [89, 101, 122, 126], "ed": 137, "edg": [93, 94, 105, 106, 107, 110, 112, 116, 117, 118, 119, 133, 158, 159, 164], "edge_attr": [158, 159], "edge_definit": 116, "edge_index": [90, 93, 133, 158, 159], "edgeconv": 93, "edgeconvtito": [91, 93], "edgedefinit": [112, 113, 114, 115, 116, 117, 118, 159, 164], "edgelessgraph": [112, 117], "effect": [135, 156, 159, 164], "effort": [156, 158, 162], "either": [0, 21, 137, 157, 159, 160, 163], "element": [19, 34, 37, 101, 122, 126, 133, 147, 157, 159, 162], "elementwis": 137, "elimin": 84, "els": [48, 84, 136, 157, 162], "ema": 125, "emb_dim": [92, 111], "embed": [91, 103, 109, 111, 124, 128, 130, 132], "embedding_dim": [103, 124], "empti": 84, "en": 159, "enabl": [0, 101, 160, 163], "encod": [92, 93, 111, 136], "encoder_block": [91, 93], "encount": 159, "encourag": [156, 159], "end": [0, 1, 135, 159, 160, 163], "energi": [46, 48, 129, 130, 139, 158, 159, 162], "energy_cascad": 129, "energy_cascade_pr": 129, "energy_pr": 129, "energy_reco": 86, "energy_sigma": 129, "energy_track": 129, "energy_track_pr": 129, "energyreconstruct": [127, 129, 159, 164], "energyreconstructionwithpow": [127, 129], "energyreconstructionwithuncertainti": [127, 129, 159], "energytcreconstruct": [127, 129], "engin": [0, 160, 163], "enough": 121, "ensemble_dataset": [158, 159], "ensembledataset": [145, 158, 159], "ensembleloss": [134, 137], "ensur": [37, 68, 137, 153, 156, 164], "entir": [42, 121, 157, 159, 164], "entiti": [159, 164], "entri": [84, 86, 105, 110, 133, 141, 162], "entropi": 137, "enum": 37, "env": 161, "environ": [59, 161], "ep": [154, 159, 164], "epoch": [125, 135, 141], "eps_lik": [140, 154], "equival": [37, 159, 164], "error": [137, 153, 156, 157, 159], "especi": 84, "establish": 164, "estim": 137, "etc": [0, 137, 153, 158, 159, 160, 162, 163], "euclidean": [114, 156], "euclideandistanceloss": [134, 137], "euclideanedg": [113, 114], "european": [0, 160, 163], "ev": 48, "eval": [121, 161], "evalu": [122, 130], "even": 68, "event": [0, 1, 7, 18, 28, 46, 48, 52, 69, 70, 73, 74, 84, 92, 94, 103, 111, 116, 119, 120, 126, 130, 132, 133, 136, 137, 139, 145, 157, 159, 160, 162, 163, 164], "event_no": [7, 69, 70, 73, 74, 139, 145, 158, 159, 164], "events_per_batch": 73, "everi": [92, 93, 110, 122, 157, 159, 162], "everyth": [159, 164], "everytim": 156, "evt_id": 46, "exact": [106, 137, 164], "exactli": [137, 153, 158], "exampl": [7, 34, 70, 90, 94, 120, 122, 133, 137, 145, 146, 157, 158, 161], "example_energy_reconstruction_model": [141, 159, 164], "exce": 139, "exceed": 74, "except": [1, 155, 157], "exclud": 23, "exclude_kei": 23, "excluding_valu": 133, "execut": [48, 69], "exist": [0, 69, 89, 122, 136, 145, 158, 159, 160, 163, 164], "exist_ok": [159, 164], "expand": [0, 159, 160, 163], "expans": 109, "expect": [69, 70, 72, 84, 86, 116, 119, 158, 159, 164], "expects_merged_datafram": 72, "experi": [0, 1, 6, 7, 58, 80, 134, 157, 159, 160, 163], "experiment": 164, "expert": 1, "explain": 159, "explicitli": [143, 148], "exponenti": 137, "export": [157, 158, 159, 162, 164], "expos": 1, "express": [121, 137], "extend": [0, 1, 157, 158, 160, 163], "extens": [1, 58, 72, 151], "extern": [158, 159], "extra": [93, 164], "extra_repr": [93, 121], "extra_repr_recurs": 121, "extracor_nam": 58, "extract": [7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 46, 50, 51, 52, 68, 84, 86, 130, 133, 157, 159, 162], "extractor": [3, 7, 58, 84, 86], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 50, 52, 157, 162], "f": [94, 157, 159, 164], "f1": 94, "f2": 94, "f_absorpt": 120, "f_scatter": 120, "factor": [93, 120, 135, 137, 159, 164], "fail": 18, "fals": [36, 48, 84, 92, 93, 105, 109, 110, 116, 121, 132, 135, 137, 139, 145, 159, 164], "fanci": 159, "fashion": 1, "fast": [0, 158, 159, 160, 163], "faster": [0, 157, 158, 160, 163], "favorit": 161, "favourit": 159, "fc": 94, "featur": [1, 22, 74, 84, 86, 92, 93, 94, 96, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 124, 128, 132, 133, 145, 156, 158, 159, 162, 164], "feature_idx": 120, "feature_map": [96, 97, 98, 99, 100, 162], "feature_nam": 120, "features_subset": [93, 103, 105, 107, 110, 124, 159, 164], "featuresprocess": [91, 92], "feed": 92, "feedforward": 93, "feel": 159, "fetch": 141, "few": [0, 89, 156, 157, 158, 159, 160, 163, 164], "ffnn": [93, 111], "fiber_id": 98, "field": [122, 133, 136, 143, 145, 146, 148, 150, 157, 158, 159, 162], "fieldinfo": [143, 145, 146, 148], "figur": 0, "file": [0, 1, 7, 19, 21, 34, 36, 39, 42, 49, 50, 51, 52, 58, 59, 60, 62, 63, 68, 72, 73, 74, 79, 80, 84, 86, 116, 121, 135, 137, 141, 142, 143, 144, 145, 146, 151, 153, 157, 158, 159, 160, 161, 162, 163, 164], "file_extens": 72, "file_handl": 153, "file_path": [157, 162], "file_read": [7, 157, 162], "filehandl": 153, "filenam": 151, "fileread": [19, 58], "files_list": 68, "filesi": 140, "fill": 48, "fillpath": 48, "filter": [36, 59, 153, 162], "filter_ani": 36, "filter_nam": 36, "filter_none_nan": [45, 46], "filtermask": 36, "final": [0, 7, 48, 94, 135, 145, 158, 159, 160, 163], "find": [21, 115, 151, 158, 159, 162, 164], "find_fil": [58, 59, 60, 62, 63, 157], "find_i3_fil": [140, 151], "first": [46, 92, 103, 115, 124, 135, 156, 159, 162], "fisher": 137, "fit": [48, 101, 137, 139, 148, 159, 164], "fit_weight": 139, "five": 158, "fix": [70, 159], "fl_in": 48, "fl_out": 48, "flag": [22, 84], "flake8": 156, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flav": 48, "flav_in": 48, "flav_out": 48, "flavor": [46, 48], "flavor_out_is_same_as_flavor_in_mask": 48, "flavour": 48, "flavour_in": 48, "flavour_out": 48, "flexibil": 164, "flexibl": 70, "float": [46, 84, 93, 101, 103, 104, 110, 111, 114, 115, 116, 117, 119, 120, 124, 130, 135, 137, 139, 145, 158], "float32": [116, 117], "float64": 137, "flow": [122, 130, 164], "flow_lay": [122, 130], "flowchart": [0, 160, 163], "flux": 48, "fly": [158, 159], "fn": [37, 143, 147], "fn_kwarg": 147, "folder": [59, 60, 62, 63, 79, 157], "folk": 159, "follow": [101, 105, 110, 122, 126, 137, 139, 156, 157, 158, 159], "fork": 156, "form": [0, 19, 89, 128, 143, 148, 157, 158, 160, 163, 164], "format": [0, 1, 7, 34, 38, 39, 46, 58, 60, 72, 73, 74, 92, 121, 124, 145, 156, 157, 158, 159, 160, 161, 162, 163, 164], "former": [92, 93], "forward": [90, 92, 93, 96, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 116, 119, 122, 124, 126, 130, 132, 137, 164], "found": [37, 59, 73, 120, 137, 158, 159], "four": 92, "fourier": [92, 111], "fourierencod": [91, 92, 109, 132], "fraction": [104, 124], "frame": [21, 23, 33, 36, 37, 48, 86], "frame_index": 46, "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 159, 160, 163], "free": [0, 137, 159, 160, 163], "freeli": 159, "freju": 48, "frequenc": 92, "friendli": [0, 72, 74, 157, 159, 160, 161, 163], "from": [0, 1, 7, 19, 20, 21, 23, 25, 26, 28, 34, 35, 36, 37, 39, 42, 48, 50, 51, 52, 58, 59, 62, 63, 72, 74, 92, 94, 107, 109, 114, 116, 119, 120, 121, 122, 125, 128, 129, 130, 133, 135, 136, 137, 143, 144, 145, 146, 148, 153, 156, 157, 158, 159, 160, 162, 163, 164], "from_config": [121, 144, 145, 146, 158, 159, 164], "from_dataset_config": [159, 164], "full": [73, 159, 164], "fulli": [157, 159, 164], "func": 159, "function": [0, 7, 21, 37, 39, 46, 52, 68, 69, 84, 86, 90, 92, 93, 94, 97, 98, 99, 100, 105, 110, 116, 120, 121, 122, 130, 133, 137, 140, 145, 146, 147, 150, 151, 152, 154, 158, 160, 162, 163, 164], "fund": [0, 160, 163], "furnish": 137, "further": 84, "furthermor": 124, "g": [1, 18, 19, 21, 31, 34, 37, 48, 69, 70, 74, 84, 86, 94, 116, 119, 120, 130, 133, 137, 139, 153, 156, 158, 159, 161, 164], "galatict": 24, "gamma_1": 93, "gamma_2": 93, "gather": 120, "gather_cluster_sequ": [112, 120], "gaussian": 137, "gaussiannegativeloglikelihood1d": [134, 137], "gaussiannegativeloglikelihood3d": [134, 137], "gcd": [21, 35, 59, 68, 84, 86, 151], "gcd_dict": [35, 37], "gcd_file": [6, 21, 84, 86], "gcd_list": [68, 151], "gcd_rescu": [59, 151], "gcd_shuffl": 68, "gelu": 93, "gener": [0, 23, 36, 58, 72, 79, 84, 86, 92, 112, 113, 116, 117, 118, 128, 137, 139, 158, 159, 160, 162, 163, 164], "geometr": 159, "geometri": [96, 116, 164], "geometry_t": [96, 97, 98, 99, 100, 162], "geometry_table_path": [97, 98, 99, 100, 162], "germani": [0, 160, 163], "get": [19, 35, 48, 69, 96, 135, 159, 164], "get_all_argument_valu": [142, 143], "get_all_grapnet_class": [142, 147], "get_field": [89, 133], "get_graphnet_class": [142, 147], "get_lr": 135, "get_map_funct": 7, "get_member_vari": [33, 37], "get_metr": 135, "get_om_keys_and_pulseseri": [33, 35], "get_primary_kei": [66, 69], "getnupath": 48, "getting_start": 116, "gframe": 21, "gggt": [122, 130], "git": 161, "github": [109, 116, 122, 130, 132, 137, 159, 161], "give": 48, "given": [21, 74, 92, 94, 114, 130, 137, 139, 141, 158, 162], "glob": 157, "global": [2, 103, 105, 107, 110, 111, 121, 159], "global_index": 7, "global_pooling_schem": [103, 105, 107, 110, 159, 164], "gnn": [1, 89, 116, 122, 124, 132, 159, 164], "go": [48, 156, 159], "goe": 93, "googl": 156, "got": 157, "gpu": [101, 141, 159, 161, 164], "grab": 130, "grad_output": 137, "gradient_clip_v": 101, "grant": [0, 137, 160, 163], "graph": [0, 1, 89, 93, 94, 96, 124, 133, 136, 156, 158, 159, 160, 163, 164], "graph_definit": [112, 122, 145, 158, 159, 164], "graph_definiton": 158, "graphdefinit": [112, 113, 116, 117, 118, 122, 156, 158, 159], "graphnet": [0, 1, 155, 156, 157, 158, 160, 161, 162, 163, 164], "graphnet_file_read": [57, 157, 162], "graphnet_model": 135, "graphnet_writ": 71, "graphnetearlystop": [134, 135], "graphnetfileread": [7, 57, 58, 59, 60, 62, 63, 157], "graphnetfilesavemethod": [72, 74], "graphnetwrit": [7, 71, 72, 73, 74, 157], "grapnet": [147, 159], "greatli": [159, 164], "group": [0, 94, 159, 160, 163], "group_bi": [91, 94], "group_pulses_to_dom": [91, 94], "group_pulses_to_pmt": [91, 94], "groupbi": 94, "gsystem": 48, "guarante": [159, 164], "guid": 156, "guidelin": 156, "gvd": 100, "h5": [50, 62, 157], "h5_extractor": 49, "h5extractor": [7, 49, 50, 58, 157], "h5hitextractor": [49, 50, 157], "h5py": 157, "h5truthextractor": [49, 50, 157], "ha": [0, 37, 46, 69, 84, 104, 120, 137, 151, 157, 158, 159, 160, 161, 162, 163, 164], "had": 162, "hadron": 129, "hand": [23, 158, 159], "handi": 68, "handl": [23, 137, 141, 150, 153, 157, 158, 159], "handler": 153, "happen": [139, 158, 162], "hard": [31, 119], "has_extens": [140, 151], "has_icecube_packag": [140, 152], "has_jammy_flows_packag": [140, 152], "has_torch_packag": [140, 152], "have": [1, 23, 59, 69, 70, 74, 94, 109, 116, 120, 130, 156, 158, 159, 162, 164], "head": [93, 103, 107, 109, 111, 130, 132, 164], "head_dim": 93, "head_siz": 109, "heavi": 157, "help": [46, 84, 86, 141, 156, 158, 159, 162, 164], "here": [116, 156, 158, 159, 161, 162, 164], "herebi": 137, "hidden": [92, 93, 103, 105, 106, 110, 124], "hidden_dim": [93, 109, 111, 132], "hidden_featur": 93, "hidden_s": [124, 128, 129, 130, 159, 164], "high": [0, 159, 160, 163], "higher": 158, "highest_protocol": 157, "hint": 156, "hit": [46, 92, 111, 117, 119, 158, 159, 162], "hitdata": 50, "hitssequ": [112, 117], "hlc": 119, "hlc_name": 119, "hold": [116, 157, 162, 164], "holder": 137, "home": [97, 98, 99, 100, 141, 157, 162], "homophili": 133, "honda": 48, "hook": [92, 93, 156], "horizon": [0, 160, 163], "host": 162, "how": [112, 113, 118, 157, 159, 164], "howev": [59, 158, 159], "html": [122, 130, 159], "http": [48, 109, 110, 111, 114, 116, 122, 130, 132, 137, 156, 159, 161], "human": 159, "hybrid": 24, "hyperparamet": [146, 159, 164], "i": [0, 1, 18, 19, 21, 23, 34, 35, 36, 37, 39, 41, 46, 48, 50, 52, 59, 68, 69, 70, 73, 74, 79, 84, 86, 90, 92, 93, 94, 104, 105, 109, 110, 111, 114, 116, 117, 119, 120, 122, 124, 126, 129, 130, 133, 135, 136, 137, 139, 141, 143, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164], "i3": [1, 21, 35, 36, 37, 59, 68, 79, 84, 86, 151, 159, 161], "i3_fil": [6, 21], "i3_filt": [33, 59], "i3_list": [68, 151], "i3_shuffl": 68, "i3calibr": 35, "i3deploy": [6, 83], "i3extractor": [7, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 58], "i3featureextractor": [20, 84, 86], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6, 58, 59], "i3filt": [33, 36, 59], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 84, 86], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": 20, "i3hybridrecoextractor": 20, "i3inferencemodul": [83, 84, 86], "i3mctre": 31, "i3modul": [1, 78, 80], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": 20, "i3particl": 26, "i3particleextractor": 20, "i3pisaextractor": 20, "i3pulsecleanermodul": [83, 84], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": 20, "i3read": 57, "i3retroextractor": 20, "i3splinempeextractor": 20, "i3splinempeicextractor": [20, 30], "i3truthextractor": 20, "i3tumextractor": 20, "ic": [107, 109, 119], "ice_arg": 119, "ice_transpar": [112, 120], "icecub": [1, 17, 59, 78, 93, 95, 99, 107, 109, 119, 120, 152, 159, 164], "icecube86": [95, 97, 99, 100], "icecube86prometheu": [95, 100], "icecube_deepcor": 100, "icecube_gen2": 100, "icecube_upgrad": [97, 100], "icecubedeepcor": [95, 97], "icecubedeepcore8": [95, 100], "icecubegen2": [95, 100], "icecubekaggl": [95, 97], "icecubeupgrad": [95, 97], "icecubeupgrade7": [95, 100], "icedemo81": [95, 100], "icemix": 102, "icemixnod": [118, 119], "icetrai": [35, 37, 59, 80, 152, 161], "icetray_verbos": 59, "id": [7, 74, 96, 116, 157, 158, 159, 162], "id_column": 119, "ideal": 164, "ident": [94, 130], "identifi": [7, 31, 119, 120, 133, 145, 146, 162], "identify_indic": [112, 120], "identitytask": [127, 128, 130], "ie": 103, "ignor": [37, 73, 92, 93], "illustr": [0, 156, 157, 160, 163], "imag": [0, 1, 156, 159, 160, 163, 164], "impact": 109, "implement": [1, 19, 21, 58, 72, 80, 93, 103, 104, 105, 106, 107, 109, 110, 114, 124, 132, 137, 156, 157, 159, 164], "impli": 137, "import": [0, 48, 69, 89, 140, 157, 158, 159, 160, 162, 163, 164], "impos": 101, "improv": [0, 1, 141, 159, 160, 163, 164], "in_featur": 93, "inaccur": 120, "inact": 116, "includ": [1, 48, 93, 101, 111, 119, 137, 143, 156, 158, 159, 162, 164], "include_dynedg": 109, "incompat": 159, "incorpor": 92, "increas": [0, 135, 160, 163], "indent": 121, "independ": [79, 157], "index": [1, 7, 37, 69, 73, 94, 96, 103, 115, 120, 124, 135, 158, 159, 164], "index_column": [7, 69, 70, 73, 74, 139, 145, 158, 159], "indic": [70, 88, 94, 103, 115, 120, 124, 130, 135, 137, 141, 156, 159, 164], "indicesfor": 35, "indici": [35, 70, 137], "individu": [0, 94, 105, 133, 158, 160, 163, 164], "industri": [0, 160, 163], "inelast": 129, "inelasticity_pr": 129, "inelasticityreconstruct": [127, 129], "inf": 133, "infer": [0, 1, 74, 78, 80, 84, 86, 101, 130, 159, 160, 163], "inference_modul": 83, "info": [153, 159], "inform": [18, 19, 21, 23, 31, 39, 42, 50, 52, 111, 116, 119, 120, 121, 157, 158, 159, 162, 164], "ingest": [0, 1, 95, 160, 163], "inherit": [19, 21, 37, 58, 72, 96, 119, 137, 153, 157, 158, 159, 164], "init_fn": [145, 146], "init_global_index": [3, 7], "init_predict_tqdm": 135, "init_test_tqdm": 135, "init_train_tqdm": 135, "init_validation_tqdm": 135, "init_valu": 93, "initail": 41, "initi": [7, 36, 42, 45, 48, 59, 74, 79, 93, 103, 109, 115], "initial_st": 52, "initialis": [146, 159, 164], "injection_azimuth": [158, 159], "injection_bjorkeni": [158, 159], "injection_bjorkenx": [158, 159], "injection_column_depth": [158, 159], "injection_energi": [158, 159], "injection_interaction_typ": [158, 159], "injection_position_i": [158, 159], "injection_position_x": [158, 159], "injection_position_z": [158, 159], "injection_typ": [158, 159], "injection_zenith": [158, 159, 164], "innov": [0, 160, 163], "input": [7, 58, 59, 72, 79, 84, 86, 92, 93, 97, 99, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 117, 119, 122, 124, 128, 130, 132, 133, 143, 148, 150, 157, 158, 159, 162, 164], "input_dim": [93, 164], "input_dir": [157, 162], "input_featur": [96, 116], "input_feature_nam": [96, 116, 117, 119], "input_fil": [58, 79], "ins": 96, "insid": 158, "inspect": [159, 164], "inspir": [110, 111], "instal": [156, 159], "instanc": [19, 21, 31, 37, 39, 41, 50, 52, 59, 92, 93, 116, 121, 136, 144, 146, 157, 158, 159, 164], "instanti": [7, 146, 157, 158, 162], "instead": [21, 59, 92, 93, 122, 137, 159, 164], "int": [7, 25, 28, 36, 46, 58, 59, 60, 62, 63, 70, 72, 73, 74, 79, 92, 93, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 137, 139, 141, 145, 148, 153, 157, 164], "integ": [69, 103, 105, 106, 110, 137, 158, 159], "integer_primary_kei": 69, "integr": 164, "intend": [103, 124, 159], "interact": [48, 129, 136, 158, 159], "interaction_kei": 136, "interaction_tim": 129, "interaction_time_pr": 129, "interaction_typ": 136, "interchang": [159, 164], "interfac": [0, 48, 145, 146, 159, 160, 161, 162, 163], "interim": [7, 71, 72, 73, 74, 157], "intermedi": [0, 1, 7, 104, 159, 160, 163], "intern": [17, 60], "internal_parquet_read": 57, "interpol": [120, 135], "interpret": 128, "interv": [92, 159, 164], "intract": 158, "introduc": 159, "introduct": [122, 130], "intuit": [153, 164], "inv_hierarchi": 48, "invers": 130, "invert": [48, 130], "involv": 70, "io": [122, 130, 156, 159], "iop": 159, "iopscienc": 159, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_cc": 48, "is_cc_flag": 46, "is_gcd_fil": [140, 151], "is_graphnet_class": [142, 147], "is_graphnet_modul": [142, 147], "is_i3_fil": [140, 151], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_typ": [33, 37], "iseecub": 131, "isinst": 157, "isn": 37, "isol": 117, "issu": [159, 164], "its": [37, 124, 158, 159, 164], "itself": [37, 130, 157, 159, 164], "iv": 137, "ivanorca115": [95, 99], "jammy_flow": [122, 130, 152], "job": 162, "join": [157, 159], "json": [34, 145, 158, 159], "just": [94, 157, 158, 159, 164], "k": [93, 103, 105, 107, 110, 114, 117, 124, 133, 137], "kaggl": [92, 93, 97, 107, 109], "kappa": [129, 137], "kappa_switch": 137, "karg": [121, 125], "keep": [19, 21, 39, 41, 50, 52, 119, 157], "kei": [23, 34, 35, 37, 69, 74, 93, 94, 119, 136, 145, 146, 157, 158, 159, 162], "kept": 36, "key_padding_mask": 93, "keyword": [135, 143, 148], "kind": [137, 162], "km": 48, "km3flux": 48, "km3net": [17, 119, 159, 164], "km3net_util": 45, "km3netroot": 41, "km3netrootextractor": [40, 42], "km3netrootpulseextractor": 40, "km3netrootread": 57, "km3netroottriggpulseextractor": 40, "km3netroottruthextractor": 40, "knn_graph_batch": [89, 133], "knnedg": [113, 114], "knngraph": [112, 117, 158, 159, 164], "know": 162, "known": 94, "kv": 93, "kwarg": [7, 36, 58, 60, 62, 63, 72, 90, 93, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 130, 132, 135, 137, 139, 143, 145, 146, 153], "l": [120, 133], "label": [25, 28, 101, 104, 116, 126, 130, 134, 145], "lai": 159, "lambda": [121, 159, 164], "land": 159, "larg": [0, 103, 137, 158, 160, 163], "larger": 157, "largest": 120, "last": [105, 110, 124, 128, 129, 130, 135, 164], "last_epoch": 135, "lastli": 162, "latent": [92, 103, 105, 107, 109, 110, 122, 124, 128, 129, 130, 132, 164], "latest": 159, "latter": [92, 93], "layer": [0, 91, 92, 94, 103, 104, 105, 106, 107, 109, 110, 122, 124, 128, 129, 130, 160, 163], "layer_s": 93, "layer_size_scal": 106, "layernorm": 93, "ldot": [90, 94], "lead": [158, 159], "learn": [0, 1, 72, 74, 84, 86, 122, 126, 128, 130, 135, 157, 159, 160, 161, 162, 163, 164], "learnabl": [93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 130, 132, 164], "learnedtask": [127, 130], "least": [156, 158, 159], "leav": 135, "len": [48, 120, 157, 158], "length": [37, 92, 111, 119, 120, 133, 135], "less": [159, 164], "let": [159, 162, 164], "level": [0, 18, 31, 36, 52, 58, 59, 60, 62, 63, 69, 72, 73, 90, 94, 109, 126, 153, 158, 159, 160, 162, 163], "leverag": 1, "lex_sort": [112, 120], "liabil": 137, "liabl": 137, "lib": [97, 98, 99, 100, 141], "liboscprob": 48, "librari": 48, "licens": 137, "lift": 157, "light": 115, "lightn": [135, 159, 164], "lightningmodul": [92, 93, 121, 135, 153, 159, 164], "like": [19, 37, 94, 115, 122, 130, 133, 137, 154, 156, 158, 159, 161, 164], "likelihood": 137, "limit": [119, 137], "line": [135, 141, 157, 158, 162], "linear": [92, 105, 110, 164], "linearli": 135, "liquid": 98, "liquido": [17, 62, 95, 157], "liquido_read": 57, "liquido_v1": [95, 98], "liquidoread": [57, 62, 157], "list": [6, 7, 18, 23, 31, 34, 36, 37, 46, 50, 52, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 80, 84, 86, 90, 92, 93, 94, 96, 101, 103, 105, 107, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 133, 135, 137, 139, 145, 147, 148, 151, 153, 157, 158, 162], "list_all_submodul": [142, 147], "liter": 46, "livetim": 48, "ljvmiranda921": 156, "load": [0, 48, 68, 80, 121, 125, 143, 145, 158, 159, 160, 162, 163], "load_from_checkpoint": [159, 164], "load_modul": 121, "load_state_dict": [121, 125, 159, 164], "loaded_model": [159, 164], "local": [90, 97, 98, 99, 100, 119, 141, 159, 161, 164], "log": [0, 129, 134, 135, 137, 140, 158, 159, 160, 163, 164], "log10": [130, 139, 159, 164], "log_cmk": 137, "log_cmk_approx": 137, "log_cmk_exact": 137, "log_every_n_step": [101, 159, 164], "log_fold": [36, 58, 60, 62, 63, 72, 153], "log_model": [159, 164], "logcmk": [134, 137], "logcoshloss": [134, 137, 159, 164], "logger": [7, 19, 36, 58, 60, 62, 63, 70, 72, 79, 80, 101, 114, 121, 136, 139, 140, 153, 159, 164], "loggeradapt": 153, "logic": 158, "logit": [128, 137, 164], "logrecord": 153, "long": 158, "longev": [0, 160, 163], "longtensor": [90, 94, 133], "look": [23, 158, 159], "lookup": 147, "loop": [48, 159, 164], "loss": [101, 116, 122, 126, 130, 135, 137, 141, 159, 164], "loss_factor": 137, "loss_funct": [130, 134, 159, 164], "loss_weight": [116, 130, 159, 164], "loss_weight_column": [116, 145], "loss_weight_default_valu": [116, 145], "loss_weight_t": 145, "lossfunct": [130, 134, 137, 159], "lot": 156, "lower": [0, 159, 160, 163], "lr": [159, 164], "m": [115, 120, 137], "machin": 1, "made": [159, 164], "magnitud": [0, 160, 163], "mai": [58, 70, 80, 119, 130, 158, 159, 161, 164], "main": [1, 102, 116, 156, 159], "mainli": 37, "major": [126, 130], "make": [0, 7, 48, 119, 139, 145, 146, 156, 157, 158, 159, 160, 162, 163, 164], "makedir": [159, 164], "manag": [0, 134, 157, 159, 160, 163], "mandatori": 92, "mangl": 37, "mani": [74, 157, 159, 164], "manipul": [34, 112, 113, 118], "map": [7, 22, 23, 42, 69, 97, 98, 99, 100, 116, 117, 130, 143, 145, 146, 148, 159, 162, 164], "mari": [0, 160, 163], "martin": 104, "mask": [93, 116, 119, 133], "masked_entri": 133, "master": 137, "match": [58, 116, 139, 151, 154, 157], "math": [93, 140], "mathbb": 94, "mathbf": [90, 94], "matic": 130, "matric": 93, "matrix": [94, 114, 115, 133, 137, 158], "max": [90, 93, 105, 107, 110, 137, 139, 141, 159, 164], "max_activ": 119, "max_epoch": [101, 159, 164], "max_hit": 119, "max_pool": [90, 94], "max_pool_x": [90, 94], "max_puls": 119, "max_rel_po": 132, "max_table_s": 74, "max_weight": 139, "maximum": [74, 94, 119, 120, 130, 132, 141], "maximun": 92, "mc": [23, 69], "mc_truth": [19, 52, 158, 159], "mctree": [31, 35], "md": [116, 159], "mean": [0, 89, 105, 107, 110, 120, 137, 146, 157, 158, 159, 160, 163, 164], "meaning": 92, "meant": [157, 159, 164], "measur": [119, 120, 133, 159, 162], "mechan": 93, "meet": 130, "member": [21, 23, 37, 58, 119, 145, 146, 153, 157, 162], "memori": 158, "mention": 159, "merchant": 137, "merg": [7, 72, 73, 74, 137, 157, 158, 162], "merge_fil": [7, 72, 73, 74, 157, 162], "merged_database_nam": 74, "messag": [93, 135, 153, 159], "messagepass": 93, "metaclass": [145, 146], "metadata": [143, 145, 146, 148], "metaproject": 161, "meter": 159, "meth": 159, "method": [7, 19, 21, 33, 34, 35, 37, 58, 72, 73, 74, 80, 93, 94, 96, 120, 129, 137, 139, 157, 159, 164], "metric": [103, 105, 107, 110, 115, 124, 135, 159, 164], "mha": [93, 111], "might": [158, 159, 164], "mileston": [135, 159, 164], "million": 74, "min": [48, 90, 94, 105, 107, 110, 139, 159, 164], "min_pool": [90, 91, 94], "min_pool_x": [90, 91, 94], "mind": 159, "minh": 104, "minim": [101, 122, 158, 159, 162, 164], "minimum": [119, 130], "minkowski": 113, "minkowskiknnedg": [113, 115], "minu": 137, "mise": 137, "miss": 88, "mit": 137, "mix": 18, "ml": [0, 1, 160, 163], "mlp": [91, 92, 93, 105, 109, 110, 132, 164], "mlp_dim": [92, 132], "mlp_ratio": [93, 109], "mode": [101, 130], "model": [0, 1, 48, 78, 80, 84, 86, 134, 135, 137, 141, 143, 145, 146, 148, 155, 157, 158, 160, 161, 162, 163], "model_computed_field": [143, 145, 146, 148], "model_config": [80, 84, 86, 142, 143, 145, 148, 159, 164], "model_config_path": [159, 164], "model_field": [143, 145, 146, 148], "model_nam": [84, 86], "modelconfig": [80, 84, 86, 121, 142, 145, 146], "modelconfigsav": 146, "modelconfigsaverabc": [142, 146], "modelconfigsavermeta": [142, 146], "modif": [159, 164], "modifi": [137, 159, 164], "modul": [0, 1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 45, 49, 51, 53, 55, 57, 64, 66, 71, 75, 78, 81, 83, 87, 89, 91, 95, 102, 112, 113, 118, 123, 127, 131, 134, 140, 142, 155, 157, 159, 160, 163, 164], "modular": [0, 89, 157, 159, 160, 163, 164], "moduletyp": 147, "mont": 35, "more": [1, 68, 69, 103, 121, 145, 146, 153, 158, 159, 164], "most": [0, 1, 70, 115, 130, 157, 160, 162, 163, 164], "mryab": 137, "mseloss": [134, 137], "msg": 153, "mu": 48, "mulitpli": 137, "multi": [93, 105, 110, 126], "multiclassclassificationtask": [127, 128, 159], "multiheadattent": 93, "multiindex": 162, "multipl": [18, 92, 120, 135, 137, 145, 153, 164], "multipli": [93, 135], "multiprocess": [7, 157], "muon": [25, 158, 164], "must": [18, 58, 59, 69, 72, 90, 135, 137, 139, 156, 157, 158, 159, 162], "my": [158, 159, 162], "my_custom_label": [158, 159], "my_databas": 74, "my_fil": [157, 162], "my_geometry_t": 162, "my_outdir": [157, 162], "my_tabl": 162, "mycustomlabel": [158, 159], "mydetector": 162, "myexperi": 162, "myextractor": 162, "mygraphnetmodel": 164, "mymodel": 164, "mypi": 156, "mypicklewrit": 157, "myread": 162, "n": [19, 90, 94, 115, 133, 137, 158, 159, 162], "n_1": 94, "n_b": 94, "n_cluster": 120, "n_event": [157, 162], "n_featur": [92, 109, 111, 132], "n_freq": 92, "n_head": [93, 103, 107], "n_hit": 119, "n_pmt": 120, "n_puls": [119, 162], "n_rel": 109, "n_worker": 79, "name": [7, 18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 42, 48, 50, 52, 58, 60, 62, 63, 69, 72, 73, 74, 80, 84, 86, 96, 116, 117, 119, 122, 124, 130, 133, 136, 139, 141, 143, 145, 146, 147, 148, 153, 156, 157, 158, 159, 162, 164], "namespac": [121, 145, 146], "nan": [46, 120], "narg": 141, "nb_dom": 133, "nb_file": 7, "nb_input": [103, 104, 105, 106, 107, 108, 110, 124, 128, 129, 130, 159, 164], "nb_intermedi": 104, "nb_nearest_neighbour": [114, 115, 117, 158, 159, 164], "nb_neighbor": 93, "nb_neighbour": [103, 105, 107, 110, 124, 159, 164], "nb_output": [104, 106, 108, 119, 128, 129, 130, 159, 164], "nb_repeats_allow": 153, "nc": 48, "nc_mask": 48, "ndarrai": [31, 46, 116, 120, 139, 157], "nearest": [103, 105, 107, 110, 114, 115, 117, 124, 133, 159, 164], "nearli": 164, "necessari": [0, 34, 156, 160, 163], "need": [0, 34, 74, 89, 92, 93, 121, 124, 137, 150, 157, 158, 159, 160, 161, 162, 163, 164], "neg": 137, "negat": 94, "neighbour": [93, 103, 105, 107, 110, 114, 115, 117, 124, 133, 159, 164], "nest": 34, "nester": 34, "network": [1, 93, 104, 123, 164], "neural": [1, 123, 164], "neutrino": [0, 1, 21, 48, 52, 59, 93, 107, 109, 120, 132, 158, 159, 160, 162, 163, 164], "new": [0, 1, 18, 93, 119, 143, 148, 156, 157, 159, 160, 163, 164], "new_features_nam": 119, "new_phras": 150, "nfdi": [0, 160, 163], "ngen": 48, "nn": [0, 89, 93, 114, 117, 160, 163, 164], "no_evt_block": 111, "no_hits_block": 111, "no_weight_decai": [109, 111], "node": [48, 90, 94, 103, 104, 105, 107, 110, 112, 113, 114, 116, 117, 124, 133, 158, 159, 164], "node_definit": [116, 117, 158, 159, 164], "node_feature_nam": [119, 158, 159, 164], "node_rnn": [103, 123], "node_truth": 145, "node_truth_t": [145, 159], "nodeasdomtimeseri": [118, 119], "nodedefinit": [116, 117, 118, 119, 159, 164], "nodesashitstimeseri": [118, 119], "nodesaspuls": [116, 118, 119, 158, 159, 164], "nodetimernn": 124, "nois": [22, 35, 84, 159], "non": [34, 37, 69, 103, 130, 137, 159], "none": [7, 21, 23, 31, 35, 36, 37, 46, 48, 58, 59, 60, 62, 63, 69, 70, 72, 73, 74, 79, 80, 86, 93, 94, 101, 103, 105, 107, 109, 110, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 135, 137, 139, 141, 143, 144, 145, 147, 151, 153, 157, 158, 159, 162, 164], "nonetyp": 145, "noninfring": 137, "norm_lay": 93, "normal": [93, 105, 110, 120, 122, 130, 162], "normalizing_flow": 89, "normalizingflow": [89, 122, 130], "normform": [93, 102, 111], "normformer_block": [91, 93], "northeren": 25, "note": [59, 73, 74, 120, 146, 159], "notebook": 156, "notic": [74, 133, 137], "notimplementederror": 157, "now": [159, 162, 164], "np": [48, 139, 157], "nu": 48, "nu_dict": 48, "nu_param": 48, "nu_typ": 48, "nue": 48, "nufit": 48, "nufit2022": 48, "null": [36, 69, 158, 159, 164], "nullspliti3filt": [33, 36, 59], "num": 141, "num_class": 137, "num_edg": 158, "num_edge_featur": 158, "num_featur": 158, "num_head": [93, 111, 132], "num_lay": [124, 132], "num_nod": 158, "num_puls": 119, "num_register_token": 132, "num_row": [116, 158], "num_work": [7, 73, 157, 158, 159, 162, 164], "number": [0, 7, 19, 48, 70, 73, 74, 79, 92, 93, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 128, 129, 130, 132, 133, 135, 139, 141, 157, 158, 159, 160, 162, 163], "numer": [130, 162], "numpi": [48, 120], "numu": [48, 136], "numucc": 136, "o": [0, 98, 130, 157, 159, 160, 161, 163, 164], "obj": [34, 37, 147], "object": [6, 23, 34, 37, 48, 90, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 137, 141, 143, 145, 146, 148, 153, 158, 159, 164], "observ": 162, "observatori": [21, 59], "obtain": [94, 137], "oerso": 106, "offer": 158, "offset": [119, 120], "ofintern": 38, "often": 158, "old_phras": 150, "om": [35, 37], "omit": 164, "on_fit_end": 135, "on_train_end": 125, "on_train_epoch_end": 135, "on_train_epoch_start": 135, "on_validation_end": 135, "onc": [153, 159, 161], "one": [21, 69, 84, 92, 93, 94, 145, 146, 151, 156, 157, 158, 159, 162, 164], "ones": [48, 125], "onli": [0, 1, 48, 74, 89, 94, 103, 111, 130, 139, 143, 146, 148, 152, 157, 158, 159, 160, 162, 163, 164], "op": 48, "open": [0, 58, 156, 157, 158, 159, 160, 161, 162, 163], "opensciencegrid": 161, "oper": [90, 93, 102, 105], "oppos": 158, "optic": [37, 120], "optim": [101, 122, 125, 135, 159, 164], "optimis": [0, 1, 159, 160, 163, 164], "optimizer_class": [122, 159, 164], "optimizer_closur": 125, "optimizer_kwarg": [122, 159, 164], "optimizer_step": 125, "optimzi": 122, "option": [7, 21, 31, 74, 80, 86, 92, 93, 94, 103, 105, 107, 109, 110, 111, 115, 116, 117, 119, 120, 121, 122, 124, 130, 135, 137, 139, 140, 141, 143, 145, 151, 157, 158, 159, 162, 164], "orca": [95, 100], "orca115": [95, 99], "orca150": [95, 100, 164], "orca150superdens": [95, 100], "orca6": [95, 99], "orca_150": 100, "orca_depth_km": 48, "order": [0, 34, 48, 58, 79, 90, 119, 133, 137, 159, 160, 163], "ordinari": 164, "ordinarili": 162, "org": [48, 110, 111, 114, 137, 159, 161], "orient": [0, 89, 160, 163], "origin": [109, 158, 164], "osc_prob": 48, "osc_prob_cc": 48, "osc_prob_lib": 48, "oscil": 48, "oscilation_w": 48, "oscprob": 48, "oscprobdir": 48, "ot": 137, "other": [26, 69, 114, 137, 156, 158, 159, 164], "otherwis": [37, 137], "our": [159, 162], "out": [105, 127, 137, 153, 156, 157, 158, 159, 162, 164], "out_featur": 93, "outdir": [7, 157, 159, 162, 164], "outer": 34, "outlin": [162, 164], "output": [19, 74, 79, 80, 92, 93, 101, 103, 104, 105, 106, 108, 110, 116, 119, 120, 124, 128, 129, 130, 139, 145, 146, 157, 162, 164], "output_dim": [92, 164], "output_dir": [72, 73, 74, 157], "output_fil": 7, "output_file_path": 157, "output_fold": [6, 79], "outsid": 156, "over": [115, 119, 157, 158], "overal": 137, "overhead": 162, "overrid": 135, "overridden": [92, 93, 119], "overview": [0, 160, 163], "overwrit": [80, 135], "overwritten": [58, 141, 143], "own": [156, 159], "ownership": 156, "p": [35, 48, 137, 157], "p11003": 159, "packag": [0, 1, 68, 130, 147, 151, 152, 155, 156, 159, 160, 163, 164], "pad": [46, 116, 120, 133], "padding_valu": [25, 28, 46, 133], "pair": [21, 59, 92], "pairwis": [115, 133], "pairwise_shuffl": [66, 68], "panda": [70, 139, 157, 159, 162, 164], "paper": 137, "paradigm": [159, 164], "parallel": [7, 157, 162], "param": [39, 41, 48, 50, 52], "paramet": [6, 7, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 46, 48, 50, 52, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 80, 84, 86, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154], "parent": [34, 159], "parent_kei": 34, "parquet": [3, 10, 39, 51, 52, 60, 63, 73, 97, 98, 99, 100, 157, 158, 159, 162], "parquet_dataset": [12, 158], "parquet_extractor": 38, "parquet_to_sqlit": 66, "parquet_writ": 71, "parquetdataset": [157, 159], "parquetextractor": [7, 38, 39, 50, 58], "parquetread": [57, 60], "parquetwrit": [39, 71, 73, 157, 158, 162], "pars": [23, 141, 142, 143, 148, 157], "part": [157, 159, 161, 162], "particl": [31, 48, 69, 136, 158, 159, 162], "particlenet": 102, "particletransform": 111, "particular": [137, 156], "particularli": [158, 159, 164], "partit": 74, "partli": [0, 160, 163], "pass": [92, 93, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 122, 124, 126, 130, 132, 135, 137, 139, 156, 157, 158, 159, 162, 164], "path": [21, 48, 58, 59, 60, 62, 63, 68, 69, 74, 79, 84, 86, 93, 116, 121, 125, 135, 141, 143, 144, 145, 151, 157, 158, 159, 162, 164], "path_to_arrai": 162, "path_to_geometry_t": 162, "patienc": 141, "pb": 48, "pd": [157, 159, 162], "pdf": [111, 114, 122], "pdg": 136, "pdg_id": 46, "pdgid": [46, 48], "penal": 137, "peopl": [159, 164], "pep257": 156, "pep8": 156, "per": [23, 69, 93, 94, 103, 124, 130, 137, 139, 158, 159], "percentil": [119, 120], "percentileclust": [118, 119], "perceptron": [93, 105, 110], "perform": [0, 90, 92, 93, 94, 101, 102, 103, 105, 107, 110, 119, 122, 124, 125, 126, 128, 130, 159, 160, 163, 164], "permiss": 137, "permit": 137, "person": 137, "perturb": [116, 117], "perturbation_dict": [116, 117], "pframe": 59, "philosophi": [159, 164], "photon": [52, 158, 159], "phrase": 150, "phyic": 1, "physic": [0, 1, 21, 35, 37, 78, 84, 86, 89, 127, 130, 158, 159, 160, 163, 164], "physicist": [0, 1, 159, 160, 163], "physicst": 1, "pi": 48, "pick": 158, "pickl": [157, 159, 162, 164], "pid": [70, 136, 145, 158], "pid_kei": 136, "piecewiselinearlr": [134, 135, 159, 164], "pip": [156, 161], "pisa": 27, "place": [92, 109, 150, 156], "plai": 1, "plane": [24, 137], "pleas": [157, 158, 159, 162], "plot": 158, "plug": 1, "pmn": 48, "pmns_fast": 48, "pmt": [94, 120, 158, 159], "point": [30, 122, 136, 137, 159, 162, 164], "pole": [107, 109], "pone": 100, "pone_triangl": 100, "ponetriangl": [95, 100], "pool": [7, 90, 91, 103, 105, 107, 110], "pop_default": 141, "popular": 164, "port": 159, "portabl": [0, 159, 160, 163, 164], "portion": 137, "pos_i": 99, "pos_x": [99, 159], "pos_z": 99, "posit": [84, 92, 93, 94, 109, 111, 120, 129, 132, 143, 148, 158, 162], "position_encod": 111, "position_x_pr": 129, "position_x_sigma": 129, "position_y_pr": 129, "position_y_sigma": 129, "position_z_pr": 129, "position_z_sigma": 129, "positionalencod": [91, 92], "positionreconstruct": [127, 129], "positionreconstructionwithuncertainti": [127, 129], "possibl": [0, 34, 74, 156, 160, 162, 163], "post": [103, 105, 107, 110], "post_processing_layer_s": [103, 105, 107, 159, 164], "posterior": 122, "pow": [159, 164], "power": [157, 159, 164], "pr": 124, "practic": [0, 156, 160, 163], "pre": [0, 96, 116, 136, 156, 158, 159, 160, 163, 164], "pre_configur": 3, "precis": 137, "precommit": 156, "pred": [101, 126, 130], "predict": [0, 26, 30, 32, 84, 86, 101, 104, 109, 122, 126, 128, 130, 137, 159, 160, 163, 164], "predict_as_datafram": [101, 159, 164], "prediction_column": [80, 86, 101], "prediction_kei": 137, "prediction_label": [101, 130, 159, 164], "prefer": 115, "prem": 48, "premmodel": 48, "prepar": [0, 137, 158, 160, 163], "preprocess": 159, "present": [21, 36, 133, 141, 151, 152, 158, 164], "previou": [135, 159, 164], "primari": [69, 74, 158, 159], "primary_hadron_1_direction_phi": [158, 159], "primary_hadron_1_direction_theta": [158, 159], "primary_hadron_1_energi": [158, 159], "primary_hadron_1_position_i": [158, 159], "primary_hadron_1_position_x": [158, 159], "primary_hadron_1_position_z": [158, 159], "primary_hadron_1_typ": [158, 159], "primary_key_rescu": 74, "primary_lepton_1_direction_phi": [158, 159], "primary_lepton_1_direction_theta": [158, 159], "primary_lepton_1_energi": [158, 159], "primary_lepton_1_position_i": [158, 159], "primary_lepton_1_position_x": [158, 159], "primary_lepton_1_position_z": [158, 159], "primary_lepton_1_typ": [158, 159], "principl": [1, 159], "print": [121, 135, 153], "prior": 158, "prioriti": 156, "privat": 139, "pro": [159, 164], "prob": 48, "probabilit": 48, "probabl": [48, 93, 137, 164], "problem": [0, 48, 114, 156, 158, 159, 160, 163, 164], "proceedur": 74, "process": [1, 7, 84, 92, 96, 103, 105, 107, 110, 156, 157, 159, 164], "process_posit": 135, "produc": [58, 92, 122, 126, 136, 139, 158, 159], "product": 93, "programm": [0, 160, 163], "progress": 135, "progressbar": [134, 135, 159, 164], "proj_drop": 93, "project": [0, 63, 93, 156, 159, 160, 163, 164], "prometheu": [17, 63, 95, 158, 159, 164], "prometheus_dataset": 75, "prometheus_extractor": 51, "prometheus_read": 57, "prometheusextractor": [7, 51, 52, 58], "prometheusfeatureextractor": [51, 52], "prometheusread": [57, 63], "prometheustruthextractor": [51, 52], "prompt": 159, "prone": 159, "proof": [159, 164], "properti": [19, 26, 37, 48, 58, 72, 94, 96, 101, 108, 119, 120, 130, 136, 144, 153, 157], "protocol": 157, "prototyp": 98, "proven": [19, 21, 39, 41, 50, 52, 157], "provid": [0, 1, 7, 84, 89, 109, 116, 121, 122, 137, 156, 157, 158, 159, 160, 163, 164], "pth": [159, 164], "public": [96, 139], "publish": [137, 159, 164], "puls": [18, 22, 23, 35, 37, 42, 52, 69, 84, 90, 94, 109, 116, 119, 120, 126, 132, 133, 158, 159, 162, 164], "pulsemap": [22, 84, 86, 145, 158, 159], "pulsemap_extractor": [84, 86], "pulseseri": 35, "pulsmap": [84, 86], "punch4nfdi": [0, 160, 163], "pure": [7, 19, 20, 23, 37], "purpos": [0, 89, 137, 160, 162, 163], "put": [74, 159, 164], "py": [137, 159], "py3": 161, "pydant": [143, 145, 146, 148], "pydantic_cor": [143, 148], "pydocstyl": 156, "pyg": [158, 159, 164], "pylint": 156, "python": [0, 1, 7, 19, 20, 23, 34, 37, 156, 159, 160, 161, 163, 164], "python3": [97, 98, 99, 100, 141], "pytorch": [135, 159, 161, 164], "pytorch_lightn": [101, 135, 153, 159, 164], "pytorchlightn": 159, "q": [48, 93], "qk_scale": 93, "qkv_bia": 93, "qualiti": [0, 159, 160, 163], "quantiti": [27, 130, 133, 159], "queri": [69, 70, 74, 93, 158, 159], "query_databas": [66, 69], "query_t": 158, "queso": 28, "question": 159, "quick": 159, "r": [94, 114, 157, 159, 161, 162], "radial": 114, "radialedg": [113, 114], "radian": 48, "radiat": [119, 120, 159, 164], "radiu": [114, 159], "rais": [21, 23, 121, 122, 143, 148, 157], "random": [66, 70, 73, 119, 145, 158, 159], "randomli": [70, 116, 117, 146, 159, 164], "rang": [46, 48, 130, 160, 162, 163, 164], "rare": 157, "rasmu": [0, 106, 160, 163], "rate": [122, 135], "rather": [130, 153, 159, 164], "ratio": [93, 109], "raw": [0, 119, 120, 158, 159, 160, 162, 163, 164], "re": [144, 158, 159, 162, 164], "reach": [158, 162], "read": [0, 7, 34, 59, 60, 62, 63, 96, 105, 127, 157, 158, 159, 160, 162, 163], "read_csv": 162, "read_sql": 159, "readabl": 159, "reader": [3, 162], "readi": [162, 164], "readm": 159, "readout": [103, 105, 107, 110], "readout_layer_s": [103, 105, 107, 110, 159, 164], "readthedoc": 159, "receiv": [0, 160, 163, 164], "reciev": [72, 157, 162, 164], "recip": [92, 93], "recommend": [159, 161, 162, 164], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 78, 107, 109, 124, 127, 130, 158, 159, 160, 163], "record": 153, "recov": 130, "recreat": [158, 159, 164], "recurr": 123, "recurs": [23, 37, 58, 59, 121, 147, 151], "reduc": [159, 164], "reduce_opt": 90, "refer": [100, 122, 145, 158, 159, 162, 164], "refresh_r": 135, "regardless": [158, 159, 164], "regist": [92, 93, 132], "regress": 126, "regular": [37, 93, 159, 164], "rel": [93, 109, 132], "rel_pos_bia": 93, "rel_pos_bucket": 132, "relat": [68, 151, 162], "relev": [1, 37, 68, 151, 156], "reli": [59, 122], "reload": 164, "relu": 110, "remain": 158, "remov": [46, 116, 141, 162], "renam": 150, "rename_state_dict_entri": [140, 150], "repeat": [116, 153], "repeat_label": 116, "repeatfilt": [140, 153], "replac": [143, 145, 146, 148, 150], "repo": 156, "repositori": 156, "repres": [94, 103, 116, 117, 119, 120, 133, 143, 145, 146, 157, 158, 159, 162, 164], "represent": [37, 92, 93, 94, 117, 121, 122, 124, 158, 159, 162, 164], "reproduc": [145, 146, 164], "repurpos": 164, "requir": [0, 21, 27, 39, 52, 69, 119, 128, 130, 137, 145, 146, 148, 156, 157, 158, 159, 160, 161, 162, 163, 164], "requires_icecub": [140, 152], "research": [0, 159, 160, 163], "reset": 93, "reset_paramet": 93, "resolv": 70, "respect": [159, 162], "respons": [158, 159], "restrict": [130, 137, 164], "result": [69, 73, 94, 117, 120, 135, 137, 147, 159, 162, 164], "retriev": [96, 157, 158], "retro": 29, "return": [7, 18, 19, 21, 34, 35, 37, 46, 48, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 158, 159, 162, 164], "return_discard": 37, "return_el": 137, "reusabl": [0, 160, 163], "reuseabl": [159, 164], "review": 156, "rhel_7_x86_64": 161, "right": [137, 159], "rmse": 137, "rmseloss": [134, 137], "rmsevonmisesfisher3dloss": [134, 137], "rng": 68, "rnn": [89, 103], "rnn_dropout": 103, "rnn_dynedg": 103, "rnn_hidden_s": 103, "rnn_layer": 103, "rnn_tito": 102, "role": 164, "root": [42, 48, 137], "roughli": 158, "row": [69, 74, 116, 120, 133, 158, 159, 162, 164], "run": [1, 59, 79, 92, 93, 157, 159, 161, 162, 164], "run_id": 46, "run_sql_cod": [66, 69], "runner": [97, 98, 99, 100, 141], "runtim": [136, 161], "runtimeerror": 21, "ryabinin": 137, "sai": [159, 164], "same": [18, 37, 69, 90, 94, 120, 128, 133, 135, 147, 153, 158, 159, 164], "sampl": [70, 93, 116, 117, 119, 159, 164], "sampler": 10, "satisfi": [0, 157, 160, 163], "save": [7, 19, 21, 34, 39, 41, 50, 52, 69, 71, 72, 74, 121, 135, 137, 139, 143, 144, 145, 146, 157, 159, 162], "save_config": [144, 159, 164], "save_dataset_config": [142, 145], "save_dir": [135, 159, 164], "save_fil": [72, 157], "save_method": [7, 157, 162], "save_model_config": [142, 146], "save_state_dict": [121, 159, 164], "save_to_sql": [66, 69], "scalabl": 158, "scalar": [19, 133, 137], "scale": [92, 93, 106, 109, 115, 116, 119, 120, 130, 132, 137, 158, 164], "scaled_emb": [109, 132], "scatter": [119, 120], "schedul": 122, "scheduler_class": [122, 159, 164], "scheduler_config": [122, 159, 164], "scheduler_kwarg": [122, 159, 164], "schema": 159, "scheme": [103, 105, 107, 110, 157], "scientif": [0, 1, 160, 163], "scope": 156, "script": [159, 164], "search": [58, 59, 60, 62, 63, 151, 157], "sec": 137, "second": 115, "section": 159, "see": [92, 103, 114, 116, 122, 130, 135, 156, 158, 159, 161], "seed": [70, 116, 117, 145, 158, 159], "seen": 92, "select": [28, 70, 139, 145, 156, 159, 162], "self": [101, 116, 122, 126, 143, 148, 157, 158, 159, 162, 164], "sell": 137, "send": 130, "sensor": [96, 116, 158, 159, 162, 164], "sensor_i": 162, "sensor_id": [97, 99, 100, 162], "sensor_id_column": [97, 98, 99, 100, 162], "sensor_index_nam": 96, "sensor_mask": 116, "sensor_pos_i": [100, 158, 159, 164], "sensor_pos_x": [100, 158, 159, 164], "sensor_pos_z": [100, 158, 159, 164], "sensor_position_nam": 96, "sensor_string_id": 100, "sensor_tim": 162, "sensor_x": [158, 162], "sensor_z": 162, "separ": [34, 115, 135, 159, 161], "seper": [124, 158], "seq_lenght": 111, "seq_length": [92, 109, 132, 133], "sequenc": [79, 92, 93, 117, 120, 133, 159, 164], "sequenti": 117, "seri": [22, 23, 35, 37, 69, 84, 103, 119, 124, 158, 159, 164], "serial": [157, 158], "serialis": [33, 34, 159, 164], "serv": 158, "session": [145, 146, 158, 159, 164], "set": [3, 6, 21, 23, 48, 58, 59, 72, 92, 93, 109, 111, 119, 120, 121, 130, 136, 156, 157, 159, 162, 164], "set_extractor": 58, "set_gcd": 21, "set_index": 162, "set_number_of_input": 119, "set_output_feature_nam": 119, "set_verbose_print_recurs": 121, "setangl": 48, "setdelta": 48, "setdetpo": 48, "setdm": 48, "setisnubar": 48, "setlevel": 153, "setpath": 48, "setup": [135, 161], "setuptool": 161, "sever": [159, 164], "sh": 161, "shall": 137, "shape": [19, 115, 116, 119, 133, 137, 157, 158], "share": [101, 122, 126, 159, 164], "shared_step": [101, 122, 126], "shell": 161, "shift": 46, "should": [19, 21, 34, 70, 80, 92, 93, 94, 103, 109, 111, 116, 117, 124, 133, 137, 143, 145, 146, 148, 156, 157, 158, 159, 161, 162, 164], "show": [70, 135, 159], "shown": 159, "shuffl": [68, 73, 158], "sigmoid": 164, "sign": [48, 137], "signal": [84, 164], "signatur": [23, 37], "signific": 158, "significantli": 158, "signup": 159, "silent": [92, 93], "similar": [23, 37, 119, 159, 164], "similarli": [37, 157, 158, 159, 164], "simpl": [0, 89, 101, 159, 160, 163, 164], "simplecoarsen": 90, "simplest": [159, 164], "simpli": [159, 164], "simul": [35, 52, 63, 84, 159, 162], "sinc": [84, 92, 93, 137, 159], "singl": [18, 48, 72, 74, 94, 105, 110, 120, 136, 137, 139, 145, 146, 157, 158, 159, 162, 164], "sinusodi": 92, "sinusoid": [92, 109, 132], "sinusoidalposemb": [91, 92], "sipm_i": 98, "sipm_id": 98, "sipm_x": 98, "sipm_z": 98, "situat": 156, "size": [74, 92, 93, 94, 103, 105, 106, 107, 109, 110, 133, 141, 158], "sk": 48, "skip": [36, 105, 110, 159], "skip_readout": [105, 110], "sklearn": [159, 164], "sk\u0142odowska": [0, 160, 163], "slack": 159, "slice": [93, 105, 110], "slower": 74, "small": [137, 158, 159, 164], "smaller": [72, 157], "smooth": 156, "snippet": [159, 164], "so": [46, 48, 137, 158, 159, 161, 162, 164], "soft": 92, "softmax": 137, "softwar": [0, 48, 59, 137, 160, 163], "solar": 48, "solut": [92, 93, 107, 109, 156], "solv": [1, 156, 164], "some": [46, 59, 116, 120, 158, 159], "someth": [159, 164], "somewhat": 159, "sort": [116, 120], "sort_bi": 116, "sourc": [0, 6, 7, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 46, 50, 52, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 80, 84, 86, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 158, 159, 160, 163], "south": [107, 109], "space": [92, 114, 115, 130, 139], "space_coord": 115, "spacetim": 92, "spacetimeencod": [91, 92], "sparsetensor": 93, "spatial": 120, "special": [23, 84, 124, 133], "specialis": [159, 164], "specif": [0, 1, 6, 7, 17, 19, 22, 37, 48, 58, 59, 69, 74, 78, 80, 88, 90, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 114, 116, 119, 123, 127, 128, 129, 130, 131, 137, 156, 157, 158, 159, 160, 162, 163, 164], "specifi": [70, 90, 120, 122, 130, 135, 158, 159, 162, 164], "speed": [84, 115, 158], "sphere": 114, "spite": 137, "splinemp": 30, "split": [0, 36, 74, 90, 160, 163], "splitinicepuls": 69, "sql": 139, "sqlite": [1, 3, 10, 46, 69, 74, 158, 159], "sqlite3": 159, "sqlite_dataset": [15, 158], "sqlite_util": 66, "sqlite_writ": 71, "sqlitedatas": 158, "sqlitedataset": 157, "sqlitewrit": [71, 74, 157, 158], "squar": 137, "src": 159, "stabl": [129, 130], "stage": 135, "standalon": 124, "standard": [0, 36, 70, 80, 97, 98, 99, 100, 103, 116, 117, 119, 122, 125, 126, 130, 141, 156, 159, 160, 162, 163, 164], "standard_argu": 141, "standard_averaged_model": 89, "standard_model": [89, 159], "standardaveragedmodel": [89, 125], "standardaveragemodel": 125, "standardflowtask": [127, 130], "standardis": 95, "standardlearnedtask": [127, 128, 129, 130, 164], "standardmodel": [89, 101, 125, 126], "start": [31, 156, 159, 162, 164], "state": [0, 80, 103, 124, 150, 160, 163], "state_dict": [80, 84, 86, 121, 125, 150, 159], "static": [137, 156], "std": 94, "std_pool": [91, 94], "std_pool_x": [91, 94], "stdout": 135, "step": [101, 122, 125, 126, 133, 135, 159, 162, 164], "still": 145, "stochast": 93, "stop": [31, 135, 141], "store": [69, 72, 73, 74, 136, 157, 158, 159, 162, 164], "str": [6, 7, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 46, 50, 52, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 80, 84, 86, 93, 94, 96, 97, 98, 99, 100, 101, 103, 105, 107, 109, 110, 116, 117, 119, 120, 121, 122, 125, 130, 133, 135, 136, 139, 141, 143, 144, 145, 146, 147, 148, 150, 151, 153, 157, 162], "straightforward": 158, "strategi": [159, 164], "stream_handl": 153, "streamhandl": 153, "streamlin": 1, "string": [34, 70, 94, 96, 97, 116, 121, 122, 130, 143, 159, 162, 164], "string_id": [99, 162], "string_id_column": [97, 98, 99, 100, 162], "string_index_nam": 96, "string_mask": 116, "string_select": 145, "string_selection_resolv": 66, "stringselectionresolv": [66, 70], "strongli": [159, 164], "structur": [101, 147, 157, 158, 159, 164], "style": 156, "sub": 159, "subclass": [0, 89, 92, 93, 101, 157, 158, 159, 160, 163, 164], "subfold": 59, "subject": [109, 111, 137], "sublicens": 137, "submodul": [147, 155], "subpackag": 155, "subsampl": [73, 158], "subsequ": 159, "subset": [93, 103, 105, 107, 110, 124, 159], "substanti": 137, "suggest": [101, 137, 159], "suit": [0, 122, 130, 159, 160, 163], "suitabl": [1, 162], "sum": [90, 94, 101, 105, 107, 110, 126, 139, 159, 164], "sum_pool": [90, 91, 94], "sum_pool_and_distribut": [91, 94], "sum_pool_x": [90, 91, 94], "summar": [84, 86, 119, 120], "summari": [119, 120], "summaris": [159, 164], "summariz": 164, "summarization_indic": 120, "super": [157, 158, 159, 164], "supervis": [126, 130, 164], "support": [0, 7, 37, 46, 130, 156, 157, 158, 159, 160, 163], "suppos": [120, 158, 162], "sure": [48, 156, 157], "swa": 125, "swapabl": 159, "switch": [137, 159, 164], "synchron": 7, "syntax": [70, 101, 137, 158, 159], "system": [151, 159, 164], "t": [37, 69, 135, 137, 157, 158, 159, 162, 164], "tabl": [18, 19, 21, 39, 41, 50, 52, 58, 69, 73, 74, 96, 116, 139, 157, 158, 159], "table_nam": [52, 69], "table_without_index": 162, "tackl": 164, "tag": 156, "take": [37, 48, 92, 93, 94, 120, 124, 156, 158], "talk": 159, "target": [101, 122, 128, 130, 137, 148, 159, 164], "target_label": [101, 122, 130, 159, 164], "target_norm": 130, "target_pr": [128, 164], "task": [0, 1, 89, 101, 126, 137, 156, 159, 160, 163], "team": [116, 156, 158, 159, 161, 162, 164], "technic": [0, 160, 162, 163], "techniqu": [0, 160, 163, 164], "telescop": [0, 1, 159, 160, 162, 163, 164], "tend": 74, "tensor": [80, 90, 92, 93, 94, 96, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 119, 122, 124, 125, 126, 130, 132, 133, 137, 150, 154, 158, 159, 162, 164], "term": [93, 137, 164], "termin": 159, "test": [70, 130, 145, 152, 156, 158, 159, 164], "test_dataset": 75, "test_funct": 152, "test_select": [145, 158, 159], "than": [0, 130, 153, 158, 159, 160, 163, 164], "thei": [79, 157, 158, 159, 164], "them": [0, 1, 34, 80, 89, 92, 93, 105, 130, 158, 159, 160, 162, 163, 164], "themselv": [1, 145, 146, 159, 164], "therebi": [1, 145, 146, 159, 164], "therefor": [34, 59, 157, 158, 159, 162, 164], "theta": 48, "theta12": 48, "theta13": 48, "theta23": 48, "theta_12": 48, "theta_13": 48, "theta_23": 48, "thi": [0, 7, 18, 19, 21, 23, 37, 39, 41, 48, 50, 52, 58, 59, 68, 69, 73, 74, 84, 89, 92, 93, 94, 101, 103, 105, 109, 110, 115, 116, 117, 119, 120, 122, 124, 126, 128, 129, 130, 133, 135, 137, 139, 143, 145, 146, 148, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164], "thing": 159, "thoglu": [122, 130], "those": [21, 158, 159], "three": [110, 120, 137, 164], "threshold": [0, 84, 160, 163], "throng": 48, "through": [0, 48, 92, 93, 128, 129, 130, 137, 157, 159, 160, 163, 164], "throw": 157, "thu": [146, 164], "ti": 158, "time": [0, 46, 48, 69, 90, 92, 94, 103, 115, 119, 120, 124, 129, 133, 139, 153, 158, 159, 160, 162, 163], "time_column": 119, "time_coord": 115, "time_lik": 115, "time_like_weight": 115, "time_series_column": [103, 124], "time_window": 90, "timereconstruct": [127, 129], "tini": 159, "tito": [93, 103, 107], "to_config": 164, "to_csv": [159, 164], "to_parquet": 162, "todo": 159, "togeth": [0, 89, 114, 137, 160, 163], "token": [111, 132], "too": [159, 164], "tool": [0, 1, 160, 163], "top": 164, "torch": [0, 89, 93, 116, 117, 121, 122, 152, 158, 159, 160, 161, 162, 163, 164], "torch_cpu": 161, "torch_geometr": [94, 133, 158, 159, 164], "torch_lightn": 164, "tort": 137, "total": [48, 111, 133, 139, 158, 159, 162], "total_energi": [158, 159, 164], "tqdmprogressbar": 135, "track": [0, 19, 21, 25, 39, 41, 50, 52, 129, 134, 136, 156, 157, 159, 160, 163], "tradit": [0, 160, 163], "train": [0, 1, 7, 70, 78, 84, 93, 101, 109, 111, 116, 122, 125, 126, 133, 141, 145, 146, 148, 155, 157, 158, 159, 160, 162, 163], "train_batch": [101, 125], "train_dataload": [101, 159, 164], "train_ev": 130, "train_select": [145, 158, 159], "trainabl": 146, "trainer": [101, 135, 159, 164], "trainer_kwarg": 101, "training_config": [142, 159, 164], "training_example_data_sqlit": [141, 158, 159, 164], "training_step": [101, 125], "trainingconfig": [142, 148, 159, 164], "transform": [1, 46, 89, 93, 94, 102, 107, 109, 124, 130, 139, 159, 164], "transform_infer": [130, 159, 164], "transform_prediction_and_target": [130, 159, 164], "transform_support": [130, 159, 164], "transform_target": [130, 159, 164], "transit": 150, "transpar": [145, 146, 156, 159, 164], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [142, 147], "treat": [103, 124], "tree": [23, 159], "tri": [23, 37], "triangl": 100, "trident": 100, "trident1211": [95, 100], "trig": 119, "trig_nam": 119, "trigger": [23, 119, 158, 159, 164], "trivial": [37, 130], "true": [36, 48, 69, 84, 103, 105, 107, 109, 110, 116, 119, 121, 135, 137, 139, 145, 146, 148, 151, 157, 158, 159, 164], "trust": [121, 159, 164], "truth": [22, 31, 52, 69, 73, 116, 130, 139, 145, 158, 162, 164], "truth_dict": 116, "truth_label": 158, "truth_tabl": [73, 139, 145, 158, 159], "truthdata": 50, "try": [37, 157], "tum": [25, 32], "tupl": [7, 35, 37, 46, 69, 93, 103, 105, 107, 110, 120, 130, 133, 141, 150], "turn": [120, 156], "tutorial_output": [159, 164], "two": [105, 135, 137, 157, 158, 159, 162], "txt": 161, "type": [0, 7, 21, 33, 34, 35, 46, 50, 52, 58, 59, 60, 62, 63, 68, 69, 70, 72, 73, 74, 79, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 139, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163], "typic": [0, 34, 124, 158, 160, 162, 163], "u": [158, 162], "ultra": 158, "unaccur": 137, "unambigu": [145, 146], "unbatch_edge_index": [89, 90], "uncertainti": [129, 159, 164], "uncompress": 158, "under": [0, 159, 160, 162, 163, 164], "unfamiliar": 164, "uniform": [134, 139], "uniformweightfitt": 139, "union": [0, 7, 23, 34, 37, 58, 59, 60, 62, 63, 79, 80, 84, 86, 90, 92, 93, 94, 101, 103, 105, 110, 111, 116, 117, 122, 126, 130, 145, 148, 151, 157, 160, 162, 163], "uniqu": [69, 92, 119, 133, 145, 159, 162, 164], "unit": [0, 7, 115, 152, 156, 160, 163], "univers": [107, 109], "unlik": 158, "unscal": 164, "untransform": 128, "up": [0, 48, 84, 156, 160, 163], "updat": [110, 124, 125, 133, 135, 159, 161, 164], "upgrad": [22, 97, 159, 161], "upon": [122, 164], "us": [0, 1, 2, 7, 18, 19, 21, 26, 31, 33, 34, 39, 41, 48, 50, 52, 58, 59, 66, 69, 70, 72, 73, 74, 78, 80, 84, 86, 89, 92, 93, 94, 96, 101, 103, 105, 106, 107, 109, 110, 111, 114, 116, 117, 119, 120, 121, 122, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 152, 153, 156, 157, 160, 161, 162, 163], "usabl": [0, 160, 163], "usag": [122, 130, 141], "use_cach": 70, "use_global_featur": [103, 107], "use_oscprob": 48, "use_post_processing_lay": [103, 107], "user": [0, 89, 101, 135, 158, 159, 160, 161, 163, 164], "usual": 158, "util": [1, 3, 20, 40, 89, 112, 134, 155, 158, 159, 161, 164], "utils_osc": [45, 48], "v": 93, "v1": [143, 145, 146, 148, 161], "v4": 161, "val_batch": [101, 125], "val_dataload": 101, "valid": [37, 70, 101, 122, 125, 126, 130, 135, 137, 141, 143, 148, 158, 159, 164], "validate_fil": 58, "validate_task": [101, 122, 126], "validation_step": [101, 125], "validationerror": [143, 148], "valu": [31, 34, 46, 48, 69, 93, 94, 110, 115, 116, 117, 130, 133, 136, 137, 141, 143, 164], "valueerror": [23, 121, 122], "vanilla": 111, "var": 129, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 37, 58, 92, 105, 119, 120, 133, 139, 153, 157, 162, 164], "varianc": 137, "varieti": 159, "variou": [1, 71, 159], "vast": [126, 130], "vector": [46, 48, 90, 93, 94, 137, 157, 164], "verbos": [59, 101, 126, 135], "verbose_print": 121, "veri": [70, 158, 159, 164], "verifi": [101, 122, 126], "versa": 135, "version": [94, 120, 130, 135, 156, 159, 164], "vertex": [129, 159], "vertexreconstruct": [127, 129], "vertic": 48, "viabl": 162, "vice": 135, "virtual": 161, "visit": 162, "vmf": 129, "vmf_loss": 137, "vmfs_factor": 137, "volum": 31, "von": 137, "vonmisesfisher2dloss": [134, 137, 159, 164], "vonmisesfisher3dloss": [134, 137], "vonmisesfisherloss": [134, 137], "w": [159, 164], "w2": 48, "wa": [0, 7, 158, 159, 160, 162, 163, 164], "wai": [37, 70, 126, 156, 159, 162, 164], "wandb": [159, 164], "wandb_dir": [159, 164], "wandb_logg": [159, 164], "wandblogg": [159, 164], "want": [158, 159, 161, 162, 164], "warn": [153, 159], "warning_onc": [153, 159], "warranti": 137, "waterdemo81": [95, 100], "wb": 157, "we": [34, 37, 70, 120, 122, 156, 159, 161, 162, 164], "weight": [48, 84, 86, 93, 109, 111, 116, 130, 137, 139, 146, 159, 164], "weight_events_oscprob": 45, "weight_fit": 134, "weight_nam": 139, "weightfitt": [134, 139], "well": [156, 159, 164], "were": 48, "wether": [110, 111], "what": [1, 92, 116, 156, 159, 164], "whatev": 159, "wheel": 161, "when": [0, 34, 36, 69, 84, 93, 103, 105, 107, 110, 111, 124, 136, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164], "whenev": 161, "where": [19, 59, 116, 117, 119, 120, 124, 133, 136, 157, 158, 159, 162, 164], "wherea": [139, 158], "whether": [35, 37, 69, 92, 93, 103, 105, 107, 109, 110, 121, 132, 137, 147, 151, 152, 159], "which": [0, 19, 21, 22, 31, 35, 39, 41, 48, 50, 52, 70, 72, 74, 79, 90, 94, 105, 110, 116, 117, 120, 121, 122, 128, 130, 133, 137, 141, 157, 158, 159, 160, 163, 164], "while": [0, 23, 92, 93, 101, 135, 156, 158, 160, 163], "who": [150, 159, 164], "whom": 137, "whose": 84, "wide": [122, 164], "willing": [158, 162], "window": [90, 158, 159], "wise": 94, "wish": [0, 79, 156, 160, 163], "with_standard_argu": 141, "within": [31, 90, 92, 93, 94, 105, 110, 114, 159, 164], "without": [1, 114, 117, 119, 137, 158, 161], "work": [0, 35, 103, 156, 157, 158, 159, 160, 163, 164], "worker": [6, 7, 68, 73, 79, 141, 153], "workflow": [0, 160, 163], "would": [156, 158, 159, 162, 164], "wrap": [135, 145, 146], "write": [73, 84, 86, 157, 159, 164], "writer": [3, 162], "written": [79, 157], "wrt": 130, "www": [48, 159], "x": [31, 92, 93, 94, 97, 115, 119, 120, 124, 130, 133, 137, 139, 158, 159, 162, 164], "x8": 158, "x_i": 93, "x_j": 93, "x_low": 139, "xyz": [96, 97, 98, 99, 100, 119, 120, 158, 162], "xyz_coord": 133, "xyz_dir_to_zen_az": [45, 46], "xyzt": 133, "y": [31, 92, 97, 115, 133], "yaml": [143, 144, 159], "yet": 48, "yield": [0, 105, 110, 137, 160, 163], "yml": [70, 141, 145, 146, 158, 159, 164], "you": [74, 79, 92, 122, 145, 146, 156, 158, 159, 161, 162, 164], "your": [117, 122, 156, 157, 158, 159, 161], "yourself": 156, "z": [31, 48, 92, 97, 115, 119, 120, 133], "z_name": 119, "z_offset": [119, 120], "z_scale": [119, 120], "zenith": [46, 48, 129, 136, 159, 164], "zenith_kappa": 129, "zenith_kei": 136, "zenith_pr": 129, "zenithreconstruct": [127, 129], "zenithreconstructionwithkappa": [127, 129, 159, 164], "zero": [46, 48], "zineb": 48, "zip": 48, "\u00f8rs\u00f8e": [0, 160, 163]}, "titles": ["Usage", "Subpackages", "graphnet.constants module", "graphnet.data package", "graphnet.data.constants module", "graphnet.data.curated_datamodule module", "graphnet.data.dataclasses module", "graphnet.data.dataconverter module", "graphnet.data.dataloader module", "graphnet.data.datamodule module", "graphnet.data.dataset package", "graphnet.data.dataset.dataset module", "graphnet.data.dataset.parquet package", "graphnet.data.dataset.parquet.parquet_dataset module", "graphnet.data.dataset.samplers module", "graphnet.data.dataset.sqlite package", "graphnet.data.dataset.sqlite.sqlite_dataset module", "graphnet.data.extractors package", "graphnet.data.extractors.combine_extractors module", "graphnet.data.extractors.extractor module", "graphnet.data.extractors.icecube package", "graphnet.data.extractors.icecube.i3extractor module", "graphnet.data.extractors.icecube.i3featureextractor module", "graphnet.data.extractors.icecube.i3genericextractor module", "graphnet.data.extractors.icecube.i3hybridrecoextractor module", "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module", "graphnet.data.extractors.icecube.i3particleextractor module", "graphnet.data.extractors.icecube.i3pisaextractor module", "graphnet.data.extractors.icecube.i3quesoextractor module", "graphnet.data.extractors.icecube.i3retroextractor module", "graphnet.data.extractors.icecube.i3splinempeextractor module", "graphnet.data.extractors.icecube.i3truthextractor module", "graphnet.data.extractors.icecube.i3tumextractor module", "graphnet.data.extractors.icecube.utilities package", "graphnet.data.extractors.icecube.utilities.collections module", "graphnet.data.extractors.icecube.utilities.frames module", "graphnet.data.extractors.icecube.utilities.i3_filters module", "graphnet.data.extractors.icecube.utilities.types module", "graphnet.data.extractors.internal package", "graphnet.data.extractors.internal.parquet_extractor module", "graphnet.data.extractors.km3net package", "graphnet.data.extractors.km3net.km3netrootextractor module", "graphnet.data.extractors.km3net.km3netrootpulseextractor module", "graphnet.data.extractors.km3net.km3netroottriggpulseextractor module", "graphnet.data.extractors.km3net.km3netroottruthextractor module", "graphnet.data.extractors.km3net.utilities package", "graphnet.data.extractors.km3net.utilities.km3net_utilities module", "graphnet.data.extractors.km3net.utilities.utils_osc module", "graphnet.data.extractors.km3net.utilities.weight_events_oscprob module", "graphnet.data.extractors.liquido package", "graphnet.data.extractors.liquido.h5_extractor module", "graphnet.data.extractors.prometheus package", "graphnet.data.extractors.prometheus.prometheus_extractor module", "graphnet.data.parquet package", "graphnet.data.parquet.deprecated_methods module", "graphnet.data.pre_configured package", "graphnet.data.pre_configured.dataconverters module", "graphnet.data.readers package", "graphnet.data.readers.graphnet_file_reader module", "graphnet.data.readers.i3reader module", "graphnet.data.readers.internal_parquet_reader module", "graphnet.data.readers.km3netrootreader module", "graphnet.data.readers.liquido_reader module", "graphnet.data.readers.prometheus_reader module", "graphnet.data.sqlite package", "graphnet.data.sqlite.deprecated_methods module", "graphnet.data.utilities package", "graphnet.data.utilities.parquet_to_sqlite module", "graphnet.data.utilities.random module", "graphnet.data.utilities.sqlite_utilities module", "graphnet.data.utilities.string_selection_resolver module", "graphnet.data.writers package", "graphnet.data.writers.graphnet_writer module", "graphnet.data.writers.parquet_writer module", "graphnet.data.writers.sqlite_writer module", "graphnet.datasets package", "graphnet.datasets.prometheus_datasets module", "graphnet.datasets.test_dataset module", "graphnet.deployment package", "graphnet.deployment.deployer module", "graphnet.deployment.deployment_module module", "graphnet.deployment.i3modules package", "graphnet.deployment.i3modules.deprecated_methods module", "graphnet.deployment.icecube package", "graphnet.deployment.icecube.cleaning_module module", "graphnet.deployment.icecube.i3deployer module", "graphnet.deployment.icecube.inference_module module", "graphnet.exceptions package", "graphnet.exceptions.exceptions module", "graphnet.models package", "graphnet.models.coarsening module", "graphnet.models.components package", "graphnet.models.components.embedding module", "graphnet.models.components.layers module", "graphnet.models.components.pool module", "graphnet.models.detector package", "graphnet.models.detector.detector module", "graphnet.models.detector.icecube module", "graphnet.models.detector.liquido module", "graphnet.models.detector.orca module", "graphnet.models.detector.prometheus module", "graphnet.models.easy_model module", "graphnet.models.gnn package", "graphnet.models.gnn.RNN_tito module", "graphnet.models.gnn.convnet module", "graphnet.models.gnn.dynedge module", "graphnet.models.gnn.dynedge_jinst module", "graphnet.models.gnn.dynedge_kaggle_tito module", "graphnet.models.gnn.gnn module", "graphnet.models.gnn.icemix module", "graphnet.models.gnn.particlenet module", "graphnet.models.gnn.transformer module", "graphnet.models.graphs package", "graphnet.models.graphs.edges package", "graphnet.models.graphs.edges.edges module", "graphnet.models.graphs.edges.minkowski module", "graphnet.models.graphs.graph_definition module", "graphnet.models.graphs.graphs module", "graphnet.models.graphs.nodes package", "graphnet.models.graphs.nodes.nodes module", "graphnet.models.graphs.utils module", "graphnet.models.model module", "graphnet.models.normalizing_flow module", "graphnet.models.rnn package", "graphnet.models.rnn.node_rnn module", "graphnet.models.standard_averaged_model module", "graphnet.models.standard_model module", "graphnet.models.task package", "graphnet.models.task.classification module", "graphnet.models.task.reconstruction module", "graphnet.models.task.task module", "graphnet.models.transformer package", "graphnet.models.transformer.iseecube module", "graphnet.models.utils module", "graphnet.training package", "graphnet.training.callbacks module", "graphnet.training.labels module", "graphnet.training.loss_functions module", "graphnet.training.utils module", "graphnet.training.weight_fitting module", "graphnet.utilities package", "graphnet.utilities.argparse module", "graphnet.utilities.config package", "graphnet.utilities.config.base_config module", "graphnet.utilities.config.configurable module", "graphnet.utilities.config.dataset_config module", "graphnet.utilities.config.model_config module", "graphnet.utilities.config.parsing module", "graphnet.utilities.config.training_config module", "graphnet.utilities.decorators module", "graphnet.utilities.deprecation_tools module", "graphnet.utilities.filesys module", "graphnet.utilities.imports module", "graphnet.utilities.logging module", "graphnet.utilities.maths module", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 162, "2": 162, "In": [158, 164], "The": [159, 164], "To": 156, "acknowledg": 0, "ad": [158, 159, 162, 164], "advanc": 159, "appendix": 159, "appli": 162, "argpars": 141, "backbon": 164, "base_config": 143, "befor": 162, "callback": 135, "checkpoint": 164, "choos": 158, "class": [159, 162, 164], "classif": 128, "cleaning_modul": 84, "coarsen": 90, "code": 156, "collect": 34, "combin": [158, 159], "combine_extractor": 18, "compon": [91, 92, 93, 94], "config": [142, 143, 144, 145, 146, 147, 148], "configur": 144, "constant": [2, 4], "content": 159, "contribut": 156, "convent": 156, "convers": 157, "convnet": 104, "creat": 159, "curated_datamodul": 5, "custom": [158, 159], "cvmf": 161, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 157, 162], "dataclass": 6, "dataconfig": 159, "dataconvert": [7, 56, 157], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 12, 13, 14, 15, 16, 75, 76, 77, 158, 159], "dataset_config": 145, "datasetconfig": 159, "decor": 149, "deploy": [78, 79, 80, 81, 82, 83, 84, 85, 86], "deployment_modul": 80, "deprecated_method": [54, 65, 82], "deprecation_tool": 150, "detector": [95, 96, 97, 98, 99, 100, 162], "dynedg": 105, "dynedge_jinst": 106, "dynedge_kaggle_tito": 107, "easy_model": 101, "edg": [113, 114, 115], "embed": 92, "energi": 164, "event": 158, "exampl": [159, 162, 164], "except": [87, 88], "experi": [162, 164], "extractor": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 157, 162], "filesi": 151, "frame": 35, "function": 159, "geometri": 162, "github": 156, "gnn": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "graph": [112, 113, 114, 115, 116, 117, 118, 119, 120], "graph_definit": 116, "graphdefinit": 164, "graphnet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159], "graphnet_file_read": 58, "graphnet_writ": 72, "graphnetfileread": 162, "graphnetgraphnet": [156, 157, 158, 160, 162, 163, 164], "h5_extractor": 50, "i3_filt": 36, "i3deploy": 85, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": [81, 82], "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 59, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 83, 84, 85, 86, 97, 161], "icemix": 109, "implement": [158, 162], "import": 152, "index": 162, "inference_modul": 86, "instal": 161, "instanti": 164, "integr": 162, "intern": [38, 39], "internal_parquet_read": 60, "introduct": 159, "iseecub": 132, "issu": 156, "km3net": [40, 41, 42, 43, 44, 45, 46, 47, 48], "km3net_util": 46, "km3netrootextractor": 41, "km3netrootpulseextractor": 42, "km3netrootread": 61, "km3netroottriggpulseextractor": 43, "km3netroottruthextractor": 44, "label": [136, 158, 159], "layer": 93, "liquido": [49, 50, 98], "liquido_read": 62, "load": 164, "log": 153, "loss_funct": 137, "math": 154, "minkowski": 115, "model": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 159, 164], "model_config": 146, "modelconfig": [159, 164], "modul": [2, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 43, 44, 46, 47, 48, 50, 52, 54, 56, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 84, 85, 86, 88, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "multi": 162, "multipl": [158, 159], "new": [158, 162], "node": [118, 119], "node_rnn": 124, "normalizing_flow": 122, "orca": 99, "overview": 159, "own": [162, 164], "packag": [3, 10, 12, 15, 17, 20, 33, 38, 40, 45, 49, 51, 53, 55, 57, 64, 66, 71, 75, 78, 81, 83, 87, 89, 91, 95, 102, 112, 113, 118, 123, 127, 131, 134, 140, 142], "parquet": [12, 13, 53, 54], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 67, "parquet_writ": 73, "parquetdataset": 158, "pars": 147, "particlenet": 110, "pool": 94, "pre_configur": [55, 56], "prometheu": [51, 52, 100], "prometheus_dataset": 76, "prometheus_extractor": 52, "prometheus_read": 63, "pull": 156, "qualiti": 156, "quick": 161, "random": 68, "reader": [57, 58, 59, 60, 61, 62, 63, 157], "reconstruct": [129, 164], "reproduc": 159, "request": 156, "rnn": [123, 124], "rnn_tito": 103, "sampler": 14, "save": 164, "select": 158, "sqlite": [15, 16, 64, 65], "sqlite_dataset": 16, "sqlite_util": 69, "sqlite_writ": 74, "sqlitedataset": [158, 159], "src": 155, "standard_averaged_model": 125, "standard_model": 126, "standardmodel": [159, 164], "start": 161, "state_dict": 164, "string_selection_resolv": 70, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 45, 49, 51, 53, 55, 57, 64, 66, 71, 75, 78, 81, 83, 87, 89, 91, 95, 102, 112, 113, 118, 123, 127, 131, 134, 140, 142], "subpackag": [1, 3, 10, 17, 20, 40, 78, 89, 112, 140], "subset": 158, "support": 162, "syntax": 164, "tabl": 162, "task": [127, 128, 129, 130, 164], "test_dataset": 77, "track": 164, "train": [134, 135, 136, 137, 138, 139, 164], "training_config": 148, "transform": [111, 131, 132], "truth": 159, "tutori": 159, "type": 37, "us": [158, 159, 164], "usag": 0, "util": [33, 34, 35, 36, 37, 45, 46, 47, 48, 66, 67, 68, 69, 70, 120, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "utils_osc": 47, "v": 158, "weight_events_oscprob": 48, "weight_fit": 139, "write": 162, "writer": [71, 72, 73, 74, 157], "your": [162, 164]}})