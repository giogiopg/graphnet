Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[166, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[166, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[168, "adding-your-own-model"]], "Adding custom Labels": [[162, "adding-custom-labels"]], "Adding custom truth labels": [[163, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[163, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[163, "appendix"]], "Choosing a subset of events using selection": [[162, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[160, "code-quality"]], "Combining Multiple Datasets": [[162, "combining-multiple-datasets"], [163, "combining-multiple-datasets"]], "Contents": [[163, "contents"]], "Contributing To GraphNeTgraphnet": [[160, null]], "Conventions": [[160, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[163, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[163, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[161, null]], "DataConverter": [[161, "dataconverter"]], "Dataset": [[162, "dataset"]], "Datasets In GraphNeTgraphnet": [[162, null]], "Example DataConfig": [[163, "example-dataconfig"]], "Example ModelConfig": [[163, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[166, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[168, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[168, "experiment-tracking"]], "Extractors": [[161, "extractors"]], "GitHub issues": [[160, "github-issues"]], "GraphDefinition, backbone & Task": [[168, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[163, null]], "GraphNeTgraphnet": [[164, null], [167, null]], "Implementing a new Dataset": [[162, "implementing-a-new-dataset"]], "Installation": [[165, null]], "Installation in CVMFS (IceCube)": [[165, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[168, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[166, null]], "Introduction": [[163, "introduction"]], "Model.save": [[168, "model-save"]], "ModelConfig and state_dict": [[168, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[168, null]], "Overview of GraphNeT": [[163, "overview-of-graphnet"]], "Pull requests": [[160, "pull-requests"]], "Quick Start": [[165, "quick-start"]], "RNN_tito": [[107, null]], "Readers": [[161, "readers"]], "SQLiteDataset & ParquetDataset": [[162, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[162, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[168, "saving-loading-and-checkpointing-models"]], "The Model class": [[163, "the-model-class"], [168, "the-model-class"]], "The StandardModel class": [[163, "the-standardmodel-class"], [168, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[168, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[168, "using-checkpoints"]], "Writers": [[161, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[166, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[145, null]], "base_config": [[147, null]], "callbacks": [[139, null]], "classification": [[132, null]], "cleaning_module": [[88, null]], "coarsening": [[94, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[95, null]], "config": [[146, null]], "configurable": [[148, null]], "constants": [[2, null], [4, null]], "convnet": [[108, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[59, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[149, null]], "datasets": [[79, null]], "decorators": [[153, null]], "deployer": [[83, null]], "deployment": [[82, null]], "deployment_module": [[84, null]], "deprecated_methods": [[57, null], [69, null], [86, null]], "deprecation_tools": [[154, null]], "detector": [[99, null], [100, null]], "dynedge": [[109, null]], "dynedge_jinst": [[110, null]], "dynedge_kaggle_tito": [[111, null]], "easy_model": [[105, null]], "edges": [[117, null], [118, null]], "embedding": [[96, null]], "exceptions": [[91, null], [92, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[155, null]], "frames": [[35, null]], "gnn": [[106, null], [112, null]], "graph_definition": [[120, null]], "graphnet_file_reader": [[61, null]], "graphnet_writer": [[76, null]], "graphs": [[116, null], [121, null]], "h5_extractor": [[53, null]], "i3_filters": [[36, null]], "i3deployer": [[89, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[85, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[62, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [87, null], [101, null]], "icemix": [[113, null]], "imports": [[156, null]], "inference_module": [[90, null]], "internal": [[38, null]], "internal_parquet_reader": [[63, null]], "iseecube": [[136, null]], "km3net": [[40, null]], "km3net_utilities": [[49, null]], "km3netextractor": [[41, null]], "km3netpulseextractor": [[42, null]], "km3netreader": [[64, null]], "km3netrootextractor": [[43, null]], "km3netrootpulseextractor": [[44, null]], "km3netrootreader": [[65, null]], "km3netroottriggpulseextractor": [[45, null]], "km3netroottruthextractor": [[46, null]], "km3nettruthextractor": [[47, null]], "labels": [[140, null]], "layers": [[97, null]], "liquido": [[52, null], [102, null]], "liquido_reader": [[66, null]], "logging": [[157, null]], "loss_functions": [[141, null]], "maths": [[158, null]], "minkowski": [[119, null]], "model": [[125, null]], "model_config": [[150, null]], "models": [[93, null]], "node_rnn": [[128, null]], "nodes": [[122, null], [123, null]], "normalizing_flow": [[126, null]], "orca": [[103, null]], "parquet": [[12, null], [56, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[71, null]], "parquet_writer": [[77, null]], "parsing": [[151, null]], "particlenet": [[114, null]], "pool": [[98, null]], "pre_configured": [[58, null]], "prometheus": [[54, null], [104, null]], "prometheus_datasets": [[80, null]], "prometheus_extractor": [[55, null]], "prometheus_reader": [[67, null]], "random": [[72, null]], "readers": [[60, null]], "reconstruction": [[133, null]], "rnn": [[127, null]], "samplers": [[14, null]], "sqlite": [[15, null], [68, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[73, null]], "sqlite_writer": [[78, null]], "src": [[159, null]], "standard_averaged_model": [[129, null]], "standard_model": [[130, null]], "string_selection_resolver": [[74, null]], "task": [[131, null], [134, null]], "test_dataset": [[81, null]], "training": [[138, null]], "training_config": [[152, null]], "transformer": [[115, null], [135, null]], "types": [[37, null]], "utilities": [[33, null], [48, null], [70, null], [144, null]], "utils": [[124, null], [137, null], [142, null]], "utils_osc": [[50, null]], "weight_events_oscprob": [[51, null]], "weight_fitting": [[143, null]], "writers": [[75, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.km3net", "api/graphnet.data.extractors.km3net.km3netextractor", "api/graphnet.data.extractors.km3net.km3netpulseextractor", "api/graphnet.data.extractors.km3net.km3netrootextractor", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottruthextractor", "api/graphnet.data.extractors.km3net.km3nettruthextractor", "api/graphnet.data.extractors.km3net.utilities", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities", "api/graphnet.data.extractors.km3net.utilities.utils_osc", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.km3netreader", "api/graphnet.data.readers.km3netrootreader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.orca", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.gnn.transformer", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.km3net.rst", "api/graphnet.data.extractors.km3net.km3netextractor.rst", "api/graphnet.data.extractors.km3net.km3netpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netrootextractor.rst", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottruthextractor.rst", "api/graphnet.data.extractors.km3net.km3nettruthextractor.rst", "api/graphnet.data.extractors.km3net.utilities.rst", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities.rst", "api/graphnet.data.extractors.km3net.utilities.utils_osc.rst", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.km3netreader.rst", "api/graphnet.data.readers.km3netrootreader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.orca.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.gnn.transformer.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"add_charge_threshold_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_counts", false]], "add_mean() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.graphs.utils.cluster_and_pad method)": [[124, "graphnet.models.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[145, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[150, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[137, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[147, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[150, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "assert_no_uint_values() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[49, "graphnet.data.extractors.km3net.utilities.km3net_utilities.assert_no_uint_values", false]], "attention_rel (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.AttributeCoarsening", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[141, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[147, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[132, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[132, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "block (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[137, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[137, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[150, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[128, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.Coarsening", false]], "columnmissingexception": [[92, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[130, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[134, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[134, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[119, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[148, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[148, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[145, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[108, "graphnet.models.gnn.convnet.ConvNet", false]], "create_unique_id_filetype() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[49, "graphnet.data.extractors.km3net.utilities.km3net_utilities.create_unique_id_filetype", false]], "creating_time_zero() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[49, "graphnet.data.extractors.km3net.utilities.km3net_utilities.creating_time_zero", false]], "critical() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[152, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.debug", false]], "deepice (class in graphnet.models.gnn.icemix)": [[113, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[133, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[134, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[134, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[134, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[133, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[134, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[134, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[83, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[84, "graphnet.deployment.deployment_module.DeploymentModule", false]], "detector (class in graphnet.models.detector.detector)": [[100, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[140, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[147, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[109, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[110, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[111, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[152, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[105, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[118, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[121, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[158, "graphnet.utilities.maths.eps_like", false]], "error() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[118, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[97, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.extra_repr_recursive", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[100, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[101, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[101, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.orca.ivanorca115 method)": [[103, "graphnet.models.detector.orca.IVANORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca115 method)": [[103, "graphnet.models.detector.orca.ORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca6 method)": [[103, "graphnet.models.detector.orca.ORCA6.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[104, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[104, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[104, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[104, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[104, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[157, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[157, "graphnet.utilities.logging.RepeatFilter.filter", false]], "filter_none_nan() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[49, "graphnet.data.extractors.km3net.utilities.km3net_utilities.filter_None_NaN", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[155, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[152, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[94, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[96, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[96, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[96, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[97, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[97, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[97, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[97, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[97, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[97, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[97, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[97, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[100, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[108, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[109, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[110, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[111, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[112, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[113, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[114, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[107, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[118, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[120, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[123, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[126, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[128, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[130, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[134, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[134, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[136, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[141, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[141, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[96, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.models.model.model class method)": [[125, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[148, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.orca.ivanorca115 attribute)": [[103, "graphnet.models.detector.orca.IVANORCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[104, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[104, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[104, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[104, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[147, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[137, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[139, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "gnn (class in graphnet.models.gnn.gnn)": [[112, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[120, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.km3net.km3netextractor": [[41, "module-graphnet.data.extractors.km3net.km3netextractor", false]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false]], "graphnet.data.extractors.km3net.utilities": [[48, "module-graphnet.data.extractors.km3net.utilities", false]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[49, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false]], "graphnet.data.extractors.km3net.utilities.utils_osc": [[50, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false]], "graphnet.data.extractors.km3net.utilities.weight_events_oscprob": [[51, "module-graphnet.data.extractors.km3net.utilities.weight_events_oscprob", false]], "graphnet.data.extractors.liquido": [[52, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[53, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[54, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[55, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.deployment.deployer": [[83, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[84, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[85, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[86, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[87, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[88, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[89, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[90, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[91, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[92, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[93, "module-graphnet.models", false]], "graphnet.models.coarsening": [[94, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[95, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[96, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[97, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[98, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[99, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[100, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[101, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[102, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.orca": [[103, "module-graphnet.models.detector.orca", false]], "graphnet.models.detector.prometheus": [[104, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[105, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn.convnet": [[108, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[109, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[110, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[111, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[112, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[113, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[114, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[107, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[116, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[117, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[118, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[119, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[120, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[121, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[122, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[123, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[124, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[125, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[126, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[127, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[128, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[129, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[130, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[131, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[132, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[133, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[134, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[135, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[136, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[137, "module-graphnet.models.utils", false]], "graphnet.training": [[138, "module-graphnet.training", false]], "graphnet.training.callbacks": [[139, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[140, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[141, "module-graphnet.training.loss_functions", false]], "graphnet.utilities": [[144, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[145, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[146, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[147, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[148, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[149, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[150, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[151, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[152, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[153, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[154, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[155, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[156, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[157, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[158, "module-graphnet.utilities.maths", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[139, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[86, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "group_by() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[53, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[53, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[53, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[157, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[155, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[156, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[156, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[156, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[89, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[90, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[88, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[123, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[134, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[134, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.info", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[155, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[155, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[136, "graphnet.models.transformer.iseecube.ISeeCube", false]], "ivanorca115 (class in graphnet.models.detector.orca)": [[103, "graphnet.models.detector.orca.IVANORCA115", false]], "key (graphnet.training.labels.label property)": [[140, "graphnet.training.labels.Label.key", false]], "km3netextractor (class in graphnet.data.extractors.km3net.km3netextractor)": [[41, "graphnet.data.extractors.km3net.km3netextractor.KM3NeTExtractor", false]], "km3netfullpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTFullPulseExtractor", false]], "km3netpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTPulseExtractor", false]], "km3nettriggpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTTriggPulseExtractor", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[137, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[118, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[121, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[140, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[134, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[124, "graphnet.models.graphs.utils.lex_sort", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[102, "graphnet.models.detector.liquido.LiquidO_v1", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[125, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[147, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_state_dict() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[141, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[141, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[141, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[157, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.MAELoss", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[97, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[119, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[97, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[125, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[147, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[150, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[152, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[150, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[150, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[150, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [6, "module-graphnet.data.dataclasses", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [41, "module-graphnet.data.extractors.km3net.km3netextractor", false], [42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false], [48, "module-graphnet.data.extractors.km3net.utilities", false], [49, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false], [50, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false], [51, "module-graphnet.data.extractors.km3net.utilities.weight_events_oscprob", false], [52, "module-graphnet.data.extractors.liquido", false], [53, "module-graphnet.data.extractors.liquido.h5_extractor", false], [54, "module-graphnet.data.extractors.prometheus", false], [55, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [83, "module-graphnet.deployment.deployer", false], [84, "module-graphnet.deployment.deployment_module", false], [85, "module-graphnet.deployment.i3modules", false], [86, "module-graphnet.deployment.i3modules.deprecated_methods", false], [87, "module-graphnet.deployment.icecube", false], [88, "module-graphnet.deployment.icecube.cleaning_module", false], [89, "module-graphnet.deployment.icecube.i3deployer", false], [90, "module-graphnet.deployment.icecube.inference_module", false], [91, "module-graphnet.exceptions", false], [92, "module-graphnet.exceptions.exceptions", false], [93, "module-graphnet.models", false], [94, "module-graphnet.models.coarsening", false], [95, "module-graphnet.models.components", false], [96, "module-graphnet.models.components.embedding", false], [97, "module-graphnet.models.components.layers", false], [98, "module-graphnet.models.components.pool", false], [99, "module-graphnet.models.detector", false], [100, "module-graphnet.models.detector.detector", false], [101, "module-graphnet.models.detector.icecube", false], [102, "module-graphnet.models.detector.liquido", false], [103, "module-graphnet.models.detector.orca", false], [104, "module-graphnet.models.detector.prometheus", false], [105, "module-graphnet.models.easy_model", false], [107, "module-graphnet.models.gnn.RNN_tito", false], [108, "module-graphnet.models.gnn.convnet", false], [109, "module-graphnet.models.gnn.dynedge", false], [110, "module-graphnet.models.gnn.dynedge_jinst", false], [111, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [112, "module-graphnet.models.gnn.gnn", false], [113, "module-graphnet.models.gnn.icemix", false], [114, "module-graphnet.models.gnn.particlenet", false], [116, "module-graphnet.models.graphs", false], [117, "module-graphnet.models.graphs.edges", false], [118, "module-graphnet.models.graphs.edges.edges", false], [119, "module-graphnet.models.graphs.edges.minkowski", false], [120, "module-graphnet.models.graphs.graph_definition", false], [121, "module-graphnet.models.graphs.graphs", false], [122, "module-graphnet.models.graphs.nodes", false], [123, "module-graphnet.models.graphs.nodes.nodes", false], [124, "module-graphnet.models.graphs.utils", false], [125, "module-graphnet.models.model", false], [126, "module-graphnet.models.normalizing_flow", false], [127, "module-graphnet.models.rnn", false], [128, "module-graphnet.models.rnn.node_rnn", false], [129, "module-graphnet.models.standard_averaged_model", false], [130, "module-graphnet.models.standard_model", false], [131, "module-graphnet.models.task", false], [132, "module-graphnet.models.task.classification", false], [133, "module-graphnet.models.task.reconstruction", false], [134, "module-graphnet.models.task.task", false], [135, "module-graphnet.models.transformer", false], [136, "module-graphnet.models.transformer.iseecube", false], [137, "module-graphnet.models.utils", false], [138, "module-graphnet.training", false], [139, "module-graphnet.training.callbacks", false], [140, "module-graphnet.training.labels", false], [141, "module-graphnet.training.loss_functions", false], [144, "module-graphnet.utilities", false], [145, "module-graphnet.utilities.argparse", false], [146, "module-graphnet.utilities.config", false], [147, "module-graphnet.utilities.config.base_config", false], [148, "module-graphnet.utilities.config.configurable", false], [149, "module-graphnet.utilities.config.dataset_config", false], [150, "module-graphnet.utilities.config.model_config", false], [151, "module-graphnet.utilities.config.parsing", false], [152, "module-graphnet.utilities.config.training_config", false], [153, "module-graphnet.utilities.decorators", false], [154, "module-graphnet.utilities.deprecation_tools", false], [155, "module-graphnet.utilities.filesys", false], [156, "module-graphnet.utilities.imports", false], [157, "module-graphnet.utilities.logging", false], [158, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[132, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[112, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[132, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[133, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[133, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[133, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[134, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[134, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[134, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[134, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[134, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[112, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[123, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[157, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[113, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[128, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[123, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[123, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[123, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[126, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[139, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[139, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[139, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[139, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[145, "graphnet.utilities.argparse.Options", false]], "orca115 (class in graphnet.models.detector.orca)": [[103, "graphnet.models.detector.orca.ORCA115", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "orca6 (class in graphnet.models.detector.orca)": [[103, "graphnet.models.detector.orca.ORCA6", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[114, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[123, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[139, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[145, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[105, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "progressbar (class in graphnet.training.callbacks)": [[139, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[55, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[55, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[55, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[118, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[94, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[154, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[157, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[156, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[97, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "rmseloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[107, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[83, "graphnet.deployment.deployer.Deployer.run", false]], "save() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[148, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[149, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[150, "graphnet.utilities.config.model_config.save_model_config", false]], "save_state_dict() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.save_state_dict", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[103, "graphnet.models.detector.orca.IVANORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca115 attribute)": [[103, "graphnet.models.detector.orca.ORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca6 attribute)": [[103, "graphnet.models.detector.orca.ORCA6.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[104, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[104, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[104, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[104, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[123, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[123, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[125, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[139, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[126, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[130, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[96, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[96, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[145, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[134, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[134, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[130, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[157, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[103, "graphnet.models.detector.orca.IVANORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca115 attribute)": [[103, "graphnet.models.detector.orca.ORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca6 attribute)": [[103, "graphnet.models.detector.orca.ORCA6.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[104, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[104, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[104, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[104, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[100, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[98, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[152, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[105, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[134, "graphnet.models.task.task.Task", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[140, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.train", false]], "train_eval() (graphnet.models.task.task.task method)": [[134, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[152, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[151, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[149, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[94, "graphnet.models.coarsening.unbatch_edge_index", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[126, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[130, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[105, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[129, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[125, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[141, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[157, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[104, "graphnet.models.detector.prometheus.WaterDemo81", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[145, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[101, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[101, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[101, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[102, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.orca.ivanorca115 attribute)": [[103, "graphnet.models.detector.orca.IVANORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca115 attribute)": [[103, "graphnet.models.detector.orca.ORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca6 attribute)": [[103, "graphnet.models.detector.orca.ORCA6.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[104, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[104, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[104, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[104, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[104, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[104, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[104, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[104, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[104, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "xyz_dir_to_zen_az() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[49, "graphnet.data.extractors.km3net.utilities.km3net_utilities.xyz_dir_to_zen_az", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[133, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [91, 0, 0, "-", "exceptions"], [93, 0, 0, "-", "models"], [138, 0, 0, "-", "training"], [144, 0, 0, "-", "utilities"]], "graphnet.data": [[6, 0, 0, "-", "dataclasses"], [17, 0, 0, "-", "extractors"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [52, 0, 0, "-", "liquido"], [54, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.km3net": [[41, 0, 0, "-", "km3netextractor"], [42, 0, 0, "-", "km3netpulseextractor"], [48, 0, 0, "-", "utilities"]], "graphnet.data.extractors.km3net.km3netextractor": [[41, 1, 1, "", "KM3NeTExtractor"]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, 1, 1, "", "KM3NeTFullPulseExtractor"], [42, 1, 1, "", "KM3NeTPulseExtractor"], [42, 1, 1, "", "KM3NeTTriggPulseExtractor"]], "graphnet.data.extractors.km3net.utilities": [[49, 0, 0, "-", "km3net_utilities"], [50, 0, 0, "-", "utils_osc"], [51, 0, 0, "-", "weight_events_oscprob"]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[49, 5, 1, "", "assert_no_uint_values"], [49, 5, 1, "", "create_unique_id_filetype"], [49, 5, 1, "", "creating_time_zero"], [49, 5, 1, "", "filter_None_NaN"], [49, 5, 1, "", "xyz_dir_to_zen_az"]], "graphnet.data.extractors.liquido": [[53, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[53, 1, 1, "", "H5Extractor"], [53, 1, 1, "", "H5HitExtractor"], [53, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[55, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[55, 1, 1, "", "PrometheusExtractor"], [55, 1, 1, "", "PrometheusFeatureExtractor"], [55, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.deployment": [[83, 0, 0, "-", "deployer"], [84, 0, 0, "-", "deployment_module"], [85, 0, 0, "-", "i3modules"], [87, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[83, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[83, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[84, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[86, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[86, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[88, 0, 0, "-", "cleaning_module"], [89, 0, 0, "-", "i3deployer"], [90, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[88, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[89, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[90, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[92, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[92, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[94, 0, 0, "-", "coarsening"], [95, 0, 0, "-", "components"], [99, 0, 0, "-", "detector"], [105, 0, 0, "-", "easy_model"], [116, 0, 0, "-", "graphs"], [125, 0, 0, "-", "model"], [126, 0, 0, "-", "normalizing_flow"], [127, 0, 0, "-", "rnn"], [129, 0, 0, "-", "standard_averaged_model"], [130, 0, 0, "-", "standard_model"], [131, 0, 0, "-", "task"], [135, 0, 0, "-", "transformer"], [137, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[94, 1, 1, "", "AttributeCoarsening"], [94, 1, 1, "", "Coarsening"], [94, 1, 1, "", "CustomDOMCoarsening"], [94, 1, 1, "", "DOMAndTimeWindowCoarsening"], [94, 1, 1, "", "DOMCoarsening"], [94, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[94, 4, 1, "", "forward"], [94, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[96, 0, 0, "-", "embedding"], [97, 0, 0, "-", "layers"], [98, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[96, 1, 1, "", "FourierEncoder"], [96, 1, 1, "", "SinusoidalPosEmb"], [96, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[96, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[96, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[96, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[97, 1, 1, "", "Attention_rel"], [97, 1, 1, "", "Block"], [97, 1, 1, "", "Block_rel"], [97, 1, 1, "", "DropPath"], [97, 1, 1, "", "DynEdgeConv"], [97, 1, 1, "", "DynTrans"], [97, 1, 1, "", "EdgeConvTito"], [97, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[97, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[97, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[97, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[97, 4, 1, "", "extra_repr"], [97, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[97, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[97, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[97, 4, 1, "", "forward"], [97, 4, 1, "", "message"], [97, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[97, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[98, 5, 1, "", "group_by"], [98, 5, 1, "", "group_pulses_to_dom"], [98, 5, 1, "", "group_pulses_to_pmt"], [98, 5, 1, "", "min_pool"], [98, 5, 1, "", "min_pool_x"], [98, 5, 1, "", "std_pool"], [98, 5, 1, "", "std_pool_x"], [98, 5, 1, "", "sum_pool"], [98, 5, 1, "", "sum_pool_and_distribute"], [98, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[100, 0, 0, "-", "detector"], [101, 0, 0, "-", "icecube"], [102, 0, 0, "-", "liquido"], [103, 0, 0, "-", "orca"], [104, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[100, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[100, 4, 1, "", "feature_map"], [100, 4, 1, "", "forward"], [100, 3, 1, "", "geometry_table"], [100, 3, 1, "", "sensor_index_name"], [100, 3, 1, "", "sensor_position_names"], [100, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[101, 1, 1, "", "IceCube86"], [101, 1, 1, "", "IceCubeDeepCore"], [101, 1, 1, "", "IceCubeKaggle"], [101, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[101, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[101, 4, 1, "", "feature_map"], [101, 2, 1, "", "geometry_table_path"], [101, 2, 1, "", "sensor_id_column"], [101, 2, 1, "", "string_id_column"], [101, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[102, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[102, 4, 1, "", "feature_map"], [102, 2, 1, "", "geometry_table_path"], [102, 2, 1, "", "sensor_id_column"], [102, 2, 1, "", "string_id_column"], [102, 2, 1, "", "xyz"]], "graphnet.models.detector.orca": [[103, 1, 1, "", "IVANORCA115"], [103, 1, 1, "", "ORCA115"], [103, 1, 1, "", "ORCA6"]], "graphnet.models.detector.orca.IVANORCA115": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "geometry_table_path"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA115": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA6": [[103, 4, 1, "", "feature_map"], [103, 2, 1, "", "sensor_id_column"], [103, 2, 1, "", "string_id_column"], [103, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[104, 1, 1, "", "ARCA115"], [104, 1, 1, "", "BaikalGVD8"], [104, 1, 1, "", "IceCube86Prometheus"], [104, 1, 1, "", "IceCubeDeepCore8"], [104, 1, 1, "", "IceCubeGen2"], [104, 1, 1, "", "IceCubeUpgrade7"], [104, 1, 1, "", "IceDemo81"], [104, 1, 1, "", "ORCA150"], [104, 1, 1, "", "ORCA150SuperDense"], [104, 1, 1, "", "PONETriangle"], [104, 1, 1, "", "Prometheus"], [104, 1, 1, "", "TRIDENT1211"], [104, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[104, 4, 1, "", "feature_map"], [104, 2, 1, "", "geometry_table_path"], [104, 2, 1, "", "sensor_id_column"], [104, 2, 1, "", "string_id_column"], [104, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[105, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[105, 4, 1, "", "compute_loss"], [105, 4, 1, "", "configure_optimizers"], [105, 4, 1, "", "fit"], [105, 4, 1, "", "forward"], [105, 4, 1, "", "inference"], [105, 4, 1, "", "predict"], [105, 4, 1, "", "predict_as_dataframe"], [105, 3, 1, "", "prediction_labels"], [105, 4, 1, "", "shared_step"], [105, 3, 1, "", "target_labels"], [105, 4, 1, "", "train"], [105, 4, 1, "", "training_step"], [105, 4, 1, "", "validate_tasks"], [105, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[107, 0, 0, "-", "RNN_tito"], [108, 0, 0, "-", "convnet"], [109, 0, 0, "-", "dynedge"], [110, 0, 0, "-", "dynedge_jinst"], [111, 0, 0, "-", "dynedge_kaggle_tito"], [112, 0, 0, "-", "gnn"], [113, 0, 0, "-", "icemix"], [114, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[107, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[107, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[108, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[108, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[109, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[109, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[110, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[110, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[111, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[111, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[112, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[112, 4, 1, "", "forward"], [112, 3, 1, "", "nb_inputs"], [112, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[113, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[113, 4, 1, "", "forward"], [113, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[114, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[114, 4, 1, "", "forward"]], "graphnet.models.graphs": [[117, 0, 0, "-", "edges"], [120, 0, 0, "-", "graph_definition"], [121, 0, 0, "-", "graphs"], [122, 0, 0, "-", "nodes"], [124, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[118, 0, 0, "-", "edges"], [119, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[118, 1, 1, "", "EdgeDefinition"], [118, 1, 1, "", "EuclideanEdges"], [118, 1, 1, "", "KNNEdges"], [118, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[118, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[119, 1, 1, "", "MinkowskiKNNEdges"], [119, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[120, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[120, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[121, 1, 1, "", "EdgelessGraph"], [121, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[123, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[123, 1, 1, "", "IceMixNodes"], [123, 1, 1, "", "NodeAsDOMTimeSeries"], [123, 1, 1, "", "NodeDefinition"], [123, 1, 1, "", "NodesAsPulses"], [123, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[123, 4, 1, "", "forward"], [123, 3, 1, "", "nb_outputs"], [123, 4, 1, "", "set_number_of_inputs"], [123, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[124, 1, 1, "", "cluster_and_pad"], [124, 5, 1, "", "cluster_summarize_with_percentiles"], [124, 5, 1, "", "gather_cluster_sequence"], [124, 5, 1, "", "ice_transparency"], [124, 5, 1, "", "identify_indices"], [124, 5, 1, "", "lex_sort"]], "graphnet.models.graphs.utils.cluster_and_pad": [[124, 4, 1, "", "add_charge_threshold_summary"], [124, 4, 1, "", "add_counts"], [124, 4, 1, "", "add_mean"], [124, 4, 1, "", "add_percentile_summary"], [124, 4, 1, "", "add_std"], [124, 4, 1, "", "add_sum_charge"]], "graphnet.models.model": [[125, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[125, 4, 1, "", "extra_repr"], [125, 4, 1, "", "extra_repr_recursive"], [125, 4, 1, "", "from_config"], [125, 4, 1, "", "load"], [125, 4, 1, "", "load_state_dict"], [125, 4, 1, "", "save"], [125, 4, 1, "", "save_state_dict"], [125, 4, 1, "", "set_verbose_print_recursively"], [125, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[126, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[126, 4, 1, "", "forward"], [126, 4, 1, "", "shared_step"], [126, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[128, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[128, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[128, 4, 1, "", "clean_up_data_object"], [128, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[129, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[129, 4, 1, "", "load_state_dict"], [129, 4, 1, "", "on_train_end"], [129, 4, 1, "", "optimizer_step"], [129, 4, 1, "", "training_step"], [129, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[130, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[130, 4, 1, "", "compute_loss"], [130, 4, 1, "", "forward"], [130, 4, 1, "", "shared_step"], [130, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[132, 0, 0, "-", "classification"], [133, 0, 0, "-", "reconstruction"], [134, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[132, 1, 1, "", "BinaryClassificationTask"], [132, 1, 1, "", "BinaryClassificationTaskLogits"], [132, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[132, 2, 1, "", "default_prediction_labels"], [132, 2, 1, "", "default_target_labels"], [132, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[132, 2, 1, "", "default_prediction_labels"], [132, 2, 1, "", "default_target_labels"], [132, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[133, 1, 1, "", "AzimuthReconstruction"], [133, 1, 1, "", "AzimuthReconstructionWithKappa"], [133, 1, 1, "", "DirectionReconstructionWithKappa"], [133, 1, 1, "", "EnergyReconstruction"], [133, 1, 1, "", "EnergyReconstructionWithPower"], [133, 1, 1, "", "EnergyReconstructionWithUncertainty"], [133, 1, 1, "", "EnergyTCReconstruction"], [133, 1, 1, "", "InelasticityReconstruction"], [133, 1, 1, "", "PositionReconstruction"], [133, 1, 1, "", "TimeReconstruction"], [133, 1, 1, "", "VertexReconstruction"], [133, 1, 1, "", "VisibleInelasticityReconstruction"], [133, 1, 1, "", "ZenithReconstruction"], [133, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[133, 2, 1, "", "default_prediction_labels"], [133, 2, 1, "", "default_target_labels"], [133, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[134, 1, 1, "", "IdentityTask"], [134, 1, 1, "", "LearnedTask"], [134, 1, 1, "", "StandardFlowTask"], [134, 1, 1, "", "StandardLearnedTask"], [134, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[134, 3, 1, "", "default_prediction_labels"], [134, 3, 1, "", "default_target_labels"], [134, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[134, 4, 1, "", "compute_loss"], [134, 4, 1, "", "forward"], [134, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[134, 3, 1, "", "default_prediction_labels"], [134, 4, 1, "", "forward"], [134, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[134, 4, 1, "", "compute_loss"], [134, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[134, 3, 1, "", "default_prediction_labels"], [134, 3, 1, "", "default_target_labels"], [134, 4, 1, "", "inference"], [134, 3, 1, "", "nb_inputs"], [134, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[136, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[136, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[136, 4, 1, "", "forward"]], "graphnet.models.utils": [[137, 5, 1, "", "array_to_sequence"], [137, 5, 1, "", "calculate_distance_matrix"], [137, 5, 1, "", "calculate_xyzt_homophily"], [137, 5, 1, "", "get_fields"], [137, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[139, 0, 0, "-", "callbacks"], [140, 0, 0, "-", "labels"], [141, 0, 0, "-", "loss_functions"]], "graphnet.training.callbacks": [[139, 1, 1, "", "GraphnetEarlyStopping"], [139, 1, 1, "", "PiecewiseLinearLR"], [139, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[139, 4, 1, "", "on_fit_end"], [139, 4, 1, "", "on_train_epoch_end"], [139, 4, 1, "", "on_validation_end"], [139, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[139, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[139, 4, 1, "", "get_metrics"], [139, 4, 1, "", "init_predict_tqdm"], [139, 4, 1, "", "init_test_tqdm"], [139, 4, 1, "", "init_train_tqdm"], [139, 4, 1, "", "init_validation_tqdm"], [139, 4, 1, "", "on_train_epoch_end"], [139, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[140, 1, 1, "", "Direction"], [140, 1, 1, "", "Label"], [140, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[140, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[141, 1, 1, "", "BinaryCrossEntropyLoss"], [141, 1, 1, "", "CrossEntropyLoss"], [141, 1, 1, "", "EnsembleLoss"], [141, 1, 1, "", "EuclideanDistanceLoss"], [141, 1, 1, "", "LogCMK"], [141, 1, 1, "", "LogCoshLoss"], [141, 1, 1, "", "LossFunction"], [141, 1, 1, "", "MAELoss"], [141, 1, 1, "", "MSELoss"], [141, 1, 1, "", "RMSELoss"], [141, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [141, 1, 1, "", "VonMisesFisher2DLoss"], [141, 1, 1, "", "VonMisesFisher3DLoss"], [141, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[141, 4, 1, "", "backward"], [141, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[141, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[141, 4, 1, "", "log_cmk"], [141, 4, 1, "", "log_cmk_approx"], [141, 4, 1, "", "log_cmk_exact"]], "graphnet.utilities": [[145, 0, 0, "-", "argparse"], [146, 0, 0, "-", "config"], [153, 0, 0, "-", "decorators"], [154, 0, 0, "-", "deprecation_tools"], [155, 0, 0, "-", "filesys"], [156, 0, 0, "-", "imports"], [157, 0, 0, "-", "logging"], [158, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[145, 1, 1, "", "ArgumentParser"], [145, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[145, 2, 1, "", "standard_arguments"], [145, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[145, 4, 1, "", "contains"], [145, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[147, 0, 0, "-", "base_config"], [148, 0, 0, "-", "configurable"], [149, 0, 0, "-", "dataset_config"], [150, 0, 0, "-", "model_config"], [151, 0, 0, "-", "parsing"], [152, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[147, 1, 1, "", "BaseConfig"], [147, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[147, 4, 1, "", "as_dict"], [147, 4, 1, "", "dump"], [147, 4, 1, "", "load"], [147, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[148, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[148, 3, 1, "", "config"], [148, 4, 1, "", "from_config"], [148, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[149, 1, 1, "", "DatasetConfig"], [149, 1, 1, "", "DatasetConfigSaverABCMeta"], [149, 1, 1, "", "DatasetConfigSaverMeta"], [149, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[149, 4, 1, "", "as_dict"], [149, 2, 1, "", "features"], [149, 2, 1, "", "graph_definition"], [149, 2, 1, "", "index_column"], [149, 2, 1, "", "labels"], [149, 2, 1, "", "loss_weight_column"], [149, 2, 1, "", "loss_weight_default_value"], [149, 2, 1, "", "loss_weight_table"], [149, 2, 1, "", "model_config"], [149, 2, 1, "", "node_truth"], [149, 2, 1, "", "node_truth_table"], [149, 2, 1, "", "path"], [149, 2, 1, "", "pulsemaps"], [149, 2, 1, "", "seed"], [149, 2, 1, "", "selection"], [149, 2, 1, "", "string_selection"], [149, 2, 1, "", "truth"], [149, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[150, 1, 1, "", "ModelConfig"], [150, 1, 1, "", "ModelConfigSaverABC"], [150, 1, 1, "", "ModelConfigSaverMeta"], [150, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[150, 2, 1, "", "arguments"], [150, 4, 1, "", "as_dict"], [150, 2, 1, "", "class_name"], [150, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[151, 5, 1, "", "get_all_grapnet_classes"], [151, 5, 1, "", "get_graphnet_classes"], [151, 5, 1, "", "is_graphnet_class"], [151, 5, 1, "", "is_graphnet_module"], [151, 5, 1, "", "list_all_submodules"], [151, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[152, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[152, 2, 1, "", "dataloader"], [152, 2, 1, "", "early_stopping_patience"], [152, 2, 1, "", "fit"], [152, 2, 1, "", "model_config"], [152, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[154, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[155, 5, 1, "", "find_i3_files"], [155, 5, 1, "", "has_extension"], [155, 5, 1, "", "is_gcd_file"], [155, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[156, 5, 1, "", "has_icecube_package"], [156, 5, 1, "", "has_jammy_flows_package"], [156, 5, 1, "", "has_torch_package"], [156, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[157, 1, 1, "", "Logger"], [157, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[157, 4, 1, "", "critical"], [157, 4, 1, "", "debug"], [157, 4, 1, "", "error"], [157, 3, 1, "", "file_handlers"], [157, 3, 1, "", "handlers"], [157, 4, 1, "", "info"], [157, 4, 1, "", "setLevel"], [157, 3, 1, "", "stream_handlers"], [157, 4, 1, "", "warning"], [157, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[157, 4, 1, "", "filter"], [157, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[158, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 34, 83, 96, 100, 105, 108, 109, 114, 120, 126, 134, 137, 139, 145, 149, 150, 157, 158, 161, 162, 163, 164, 166, 167, 168], "0": [31, 49, 51, 88, 94, 97, 98, 107, 108, 109, 111, 114, 118, 119, 121, 124, 128, 134, 137, 140, 141, 149, 162, 163, 165, 166, 168], "000": 162, "001": [163, 168], "01": [163, 168], "0221": 163, "02_data": 163, "03042": 110, "03762": 96, "04616": 141, "04_ensemble_dataset": 163, "05": 141, "06": 160, "06166": 118, "08570": 114, "0e04": 166, "0e4": 166, "1": [0, 19, 34, 49, 51, 83, 86, 89, 94, 97, 98, 107, 109, 111, 113, 114, 118, 119, 121, 124, 128, 132, 133, 134, 137, 139, 140, 141, 149, 161, 162, 163, 164, 165, 167, 168], "10": [101, 102, 103, 104, 123, 124, 145, 162, 163, 166, 168], "100": 162, "1000": [134, 162, 163], "10000": 96, "1088": 163, "10th": 124, "11": [163, 165], "115": 103, "12": [51, 113, 136, 149, 162, 163], "120": 163, "128": [96, 108, 109, 111, 114, 145, 162, 163, 168], "14": [51, 149, 162, 163], "1536": 136, "15674": 96, "16": [96, 107, 114, 136, 149, 162, 163, 168], "17": 163, "1706": 96, "1748": 163, "180": 51, "1809": 118, "1812": 141, "1902": 114, "192": 113, "196": 136, "1e6": 134, "2": [34, 51, 97, 98, 107, 109, 111, 114, 118, 121, 124, 128, 133, 137, 141, 149, 162, 163, 165, 168], "20": [157, 163, 165, 166, 168], "200": [162, 166], "2014": 51, "2018": 160, "2019": 141, "2020": [0, 164, 167], "21": [160, 162, 163], "2209": 110, "230": 51, "2310": 96, "232": 51, "256": [51, 109, 111, 114, 136], "26": 162, "276": 51, "2d": 141, "2nd": [96, 113], "3": [51, 98, 107, 108, 111, 119, 124, 128, 133, 136, 137, 141, 160, 163, 165, 166], "30": 166, "300": [162, 166], "32": [96, 113, 136], "33": 51, "336": [109, 111], "384": [96, 113, 136], "39": [0, 164, 167], "3d": [133, 141], "4": [51, 97, 110, 113, 124, 133, 163, 166, 168], "40": 166, "41": 51, "41e": 51, "42": 51, "42e": 51, "45": 51, "465e": 51, "49": 51, "5": [51, 107, 124, 128, 141, 145, 161, 162, 163, 165, 166, 168], "50": [123, 124, 145, 166], "500": [124, 166], "50000": [149, 162, 163], "5001": 162, "507e": 51, "50th": 124, "510e": 51, "57": 51, "58": 51, "59": 165, "6": [96, 98, 103, 113, 136], "62": 51, "6371": 51, "64": [107, 114], "7": [51, 88, 98], "700": 141, "768": 123, "8": [51, 97, 98, 107, 109, 111, 121, 128, 141, 160, 162, 163, 165, 168], "80": [163, 168], "86": [22, 101], "890778": [0, 164, 167], "90": [123, 124], "90th": 124, "A": [36, 49, 51, 83, 84, 88, 89, 98, 100, 101, 102, 103, 104, 105, 120, 121, 124, 125, 126, 130, 132, 134, 137, 141, 161, 162, 163, 166, 168], "AND": 141, "AS": 141, "As": [109, 114, 168], "BE": 141, "BUT": 141, "But": 168, "By": [0, 134, 162, 163, 164, 167, 168], "FOR": 141, "For": [37, 123, 139, 162, 163, 168], "IN": 141, "If": [21, 23, 31, 36, 96, 97, 109, 113, 114, 120, 123, 124, 125, 134, 139, 141, 160, 161, 163, 168], "In": [149, 150, 161, 163, 165], "It": [1, 34, 88, 96, 124, 132, 134, 160, 162, 163, 168], "NO": 141, "NOT": [141, 163], "No": [0, 163, 164, 167], "OF": 141, "OR": 141, "One": 163, "Or": 162, "THE": 141, "TO": 141, "That": [109, 114, 133, 140, 163, 168], "The": [0, 18, 34, 37, 51, 83, 84, 86, 88, 89, 90, 94, 96, 97, 98, 107, 109, 111, 113, 114, 118, 120, 124, 126, 128, 132, 133, 134, 136, 137, 139, 140, 141, 154, 161, 162, 164, 166, 167], "Then": 160, "There": [163, 168], "These": [0, 120, 160, 162, 163, 164, 166, 167, 168], "To": [162, 163, 165, 166, 168], "WITH": 141, "Will": [83, 86, 88, 89, 90, 118, 161], "With": [163, 166, 168], "_": 163, "__": [34, 37, 163], "_____________________": 141, "__call__": [19, 21, 84, 161, 162, 163, 166], "__init__": [149, 150, 161, 162, 163, 168], "_accepted_extractor": [161, 166], "_accepted_file_extens": [161, 166], "_and_": [109, 114], "_charge_sum": 124, "_charge_weight": 124, "_cluster_nam": 124, "_column_nam": 161, "_construct_edg": 118, "_count": 124, "_definition_": 163, "_extractor": [161, 166], "_extractor_nam": [161, 166], "_file_extens": 161, "_forward": 168, "_layer": 168, "_lrschedul": 139, "_merge_datafram": 161, "_osc_prob": 51, "_padded_x": 124, "_pdgid2flavor": 51, "_pred": 134, "_save_fil": 161, "_sensor_tim": 166, "_sensor_xyz": 166, "_tabl": 161, "_task": [105, 126, 130], "_verify_column": 161, "_x_": 163, "_zipequ": 51, "a__b": 34, "ab": [114, 141, 149, 162, 163], "abc": [19, 83, 125, 140, 148, 149, 150], "abcmeta": [149, 150], "abil": 162, "abl": [34, 123, 126, 161, 163, 165, 166, 168], "about": [125, 162, 163, 166], "abov": [141, 162, 163, 166, 168], "absolut": 141, "absopt": 123, "absorpt": 124, "abstract": [1, 100, 112, 120, 134, 148, 163], "abstractmethod": 162, "acceler": 1, "accept": [160, 168], "accepted_extractor": 161, "accepted_file_extens": 161, "access": [140, 162], "accompani": 163, "accord": [94, 98, 118, 120, 121, 124, 141], "achiev": 165, "achitectur": 168, "across": [1, 2, 37, 83, 86, 89, 98, 105, 130, 141, 144, 145, 146, 157, 166], "act": [134, 141, 163, 168], "action": 141, "activ": [97, 105, 107, 109, 114, 123, 128, 134, 160], "activation_lay": [109, 114], "actual": [163, 168], "ad": [22, 96, 109, 113, 123, 124], "adam": [126, 163, 168], "adapt": [163, 168], "add": [97, 109, 114, 124, 145, 154, 160, 163, 166], "add_batchnorm_lay": 114, "add_charge_threshold_summari": 124, "add_count": [123, 124], "add_global_variables_after_pool": [109, 163, 168], "add_ice_properti": 123, "add_inactive_sensor": 120, "add_label": [162, 163], "add_mean": 124, "add_norm_lay": 109, "add_percentile_summari": 124, "add_std": 124, "add_sum_charg": 124, "addit": [94, 97, 105, 124, 141, 161, 163, 168], "additional_attribut": [105, 163, 168], "address": 168, "adher": [160, 168], "adjac": 100, "adjust": 168, "advanc": [1, 98], "after": [97, 107, 109, 111, 114, 139, 145, 149, 162, 163, 168], "again": [163, 168], "aggr": 97, "aggreg": [97, 98, 124], "agnost": [0, 164, 167, 168], "agreement": [0, 160, 164, 167], "ai": 163, "aim": [0, 1, 160, 163, 164, 167], "algorithm": 26, "all": [1, 18, 19, 21, 23, 36, 41, 42, 51, 88, 96, 97, 98, 100, 109, 112, 114, 119, 120, 124, 125, 134, 141, 147, 148, 149, 150, 151, 152, 157, 160, 161, 162, 163, 166, 168], "allow": [0, 39, 85, 93, 98, 139, 147, 152, 162, 163, 164, 167, 168], "along": [124, 163, 168], "alongsid": [163, 168], "also": [107, 149, 161, 162, 163, 166, 168], "alter": [120, 124], "altern": [109, 141, 160], "amount": 107, "an": [0, 19, 37, 51, 85, 89, 120, 121, 128, 129, 141, 155, 157, 160, 161, 163, 164, 165, 166, 167, 168], "anaconda": 165, "analys": 163, "analysi": [83, 89], "angl": [49, 51, 133, 140, 163, 168], "ani": [6, 34, 35, 36, 37, 88, 94, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 141, 145, 147, 148, 149, 150, 151, 152, 157, 162, 163, 168], "anoth": [149, 150, 162, 163], "anu": 51, "anumu": 51, "anyth": 160, "api": [159, 161, 163], "appear": [83, 86, 89, 162, 163], "append": [51, 120], "appli": [83, 86, 89, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 124, 126, 128, 130, 132, 134, 136, 141, 151, 161, 162, 163], "applic": [34, 162, 163, 168], "appropri": [134, 163], "approx": 141, "ar": [0, 1, 21, 23, 31, 36, 37, 51, 83, 88, 89, 97, 98, 107, 109, 111, 114, 116, 117, 118, 120, 121, 122, 123, 124, 128, 132, 141, 149, 150, 160, 161, 162, 163, 164, 166, 167, 168], "arbitrari": [0, 164, 167], "arca": 104, "arca115": [99, 104], "architectur": [1, 108, 109, 110, 111, 114, 126, 128, 136, 163, 168], "area": 1, "arg": [18, 36, 51, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 134, 136, 141, 145, 147, 157, 161, 166], "argpars": [1, 51, 144], "argument": [113, 126, 139, 145, 147, 149, 150, 152, 162, 163, 166, 168], "argumentpars": [144, 145], "aris": 141, "arrai": [19, 31, 34, 51, 123, 124, 137, 161, 162, 163, 166], "array_to_sequ": [93, 137], "arriv": 162, "art": [0, 164, 167], "articl": 163, "artifact": [163, 168], "arxiv": [96, 114, 118, 141], "as_dict": [147, 149, 150, 163, 168], "asarrai": 51, "assert": [49, 161, 162], "assert_no_uint_valu": [48, 49], "assertionerror": 161, "assign": [94, 98, 121, 160, 161], "associ": [88, 90, 120, 124, 133, 141, 161, 162, 163, 166, 168], "assort": 158, "assum": [88, 96, 100, 120, 124, 134, 137], "atmospher": [51, 162], "attempt": [21, 31, 163], "attent": [96, 97, 113, 136], "attention_rel": [95, 97], "attn_drop": 97, "attn_head_dim": 97, "attn_mask": 97, "attribut": [94, 134, 162, 163, 168], "attributecoarsen": [93, 94], "author": [108, 110, 141], "auto": 134, "autom": 160, "automat": [23, 96, 120, 124, 141, 160, 161, 163, 166], "auxiliari": [96, 163, 168], "avail": [23, 132, 133, 134, 156, 161, 162, 163, 165, 166, 168], "available_t": 161, "averag": [51, 98, 129, 141], "avg": 94, "avg_pool": 94, "avg_pool_x": 94, "avoid": [157, 160], "awai": [1, 163], "azimiuth": 140, "azimuth": [49, 51, 133, 140], "azimuth_kappa": 133, "azimuth_kei": 140, "azimuth_pr": 133, "azimuthreconstruct": [131, 133], "azimuthreconstructionwithkappa": [131, 133], "b": [34, 94, 98, 137, 163, 166, 168], "backbon": [126, 163], "backend": 166, "backward": [124, 141], "baikalgvd8": [99, 104], "bar": 139, "base": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 42, 49, 51, 53, 55, 83, 84, 86, 88, 89, 90, 92, 94, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 139, 140, 141, 145, 147, 148, 149, 150, 152, 156, 157, 161, 162, 163, 164, 167, 168], "base_config": [144, 146], "baseclass": [83, 89], "baseconfig": [146, 147, 148, 149, 150, 152], "basemodel": [147, 149, 150], "basi": 168, "basic": [1, 163], "batch": [0, 94, 97, 98, 105, 114, 126, 128, 130, 137, 145, 162, 164, 167], "batch_idx": [105, 126, 129, 130, 137], "batch_siz": [137, 162, 163, 168], "becaus": [163, 168], "been": [86, 88, 141, 160, 168], "befor": [109, 119, 128, 134, 139], "behavior": 161, "behaviour": 139, "behind": [163, 168], "being": [21, 31, 88, 96, 132, 134, 162, 163, 168], "beitv2": 97, "belong": 137, "below": [123, 160, 161, 163, 164, 166, 167, 168], "besid": 162, "bessel": 141, "best": [0, 51, 139, 160, 164, 167], "better": 160, "between": [39, 96, 105, 116, 117, 118, 119, 122, 126, 130, 134, 137, 139, 141, 149, 150, 163, 168], "bia": [97, 136], "bias": [163, 168], "big": [163, 168], "biject": 161, "binari": [130, 132, 141, 168], "binaryclassificationtask": [131, 132, 163, 168], "binaryclassificationtasklogit": [131, 132], "binarycrossentropyloss": [138, 141], "black": 160, "blob": [141, 163], "block": [0, 1, 95, 97, 114, 163, 164, 167], "block_rel": [95, 97], "boilerpl": 168, "bool": [35, 36, 37, 42, 51, 88, 96, 97, 105, 107, 109, 111, 113, 114, 120, 123, 124, 125, 130, 136, 139, 141, 145, 151, 154, 155, 156, 157], "boost": 37, "border": 31, "both": [0, 23, 126, 130, 134, 163, 164, 166, 167, 168], "boundari": 31, "box": [161, 163, 168], "branch": 160, "break_cyclic_recurs": [33, 37], "bucket": 136, "bug": [160, 163], "build": [0, 1, 93, 100, 118, 119, 123, 124, 125, 126, 147, 149, 150, 163, 164, 167, 168], "built": [0, 93, 120, 126, 162, 163, 164, 166, 167, 168], "c": [21, 31, 34, 98, 119, 141, 163], "c_": 141, "calcul": [51, 88, 96, 105, 118, 121, 123, 124, 126, 130, 137, 140, 141, 162, 163, 168], "calculate_distance_matrix": [93, 137], "calculate_xyzt_homophili": [93, 137], "calibr": [35, 37], "call": [23, 37, 96, 98, 134, 139, 157, 161, 163, 166, 168], "callabl": [37, 97, 98, 100, 101, 102, 103, 104, 120, 129, 134, 147, 149, 150, 151, 156, 166], "callback": [1, 105, 138, 163, 168], "can": [0, 1, 19, 23, 26, 88, 96, 98, 120, 126, 145, 147, 149, 150, 160, 161, 162, 163, 164, 166, 167, 168], "cannot": [37, 128, 147, 152], "capabl": [0, 130, 164, 167], "captur": [163, 168], "care": [51, 162], "carlo": 35, "cascad": 133, "case": [23, 88, 98, 124, 134, 161, 162, 163, 165, 168], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 163, "caveat": [163, 168], "cc": [49, 51, 140], "cc_mask": 51, "cd": 165, "center": 118, "centr": 118, "central": [163, 165], "certain": 163, "cframe": [21, 31], "chain": [0, 1, 85, 93, 105, 126, 130, 141, 164, 165, 167], "chang": [141, 160, 163, 168], "charg": [49, 96, 107, 123, 124, 128, 141, 162, 163, 168], "charge_column": 123, "charge_index": 124, "check": [35, 36, 37, 123, 145, 155, 156, 160, 166], "checkpoint": 163, "checkpointing_bas": 163, "chenli2049": 136, "cherenkov": [123, 124, 163, 166, 168], "choic": [162, 163, 168], "choos": [163, 168], "chose": 51, "chosen": [118, 124, 157, 162], "chunk": 161, "ckpt": [163, 168], "ckpt_path": 105, "claim": 141, "clash": 157, "class": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 42, 51, 53, 55, 83, 84, 86, 88, 89, 90, 94, 96, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 139, 140, 141, 145, 147, 148, 149, 150, 151, 152, 157, 160, 161, 162], "class_nam": [36, 150, 157, 162, 163, 168], "classif": [1, 93, 130, 131, 134, 141, 163, 168], "classifi": [132, 162, 163, 168], "classmethod": [125, 141, 147, 163, 168], "classvar": [147, 149, 150, 152], "clean": [88, 160, 165], "clean_up_data_object": 128, "cleaning_modul": [82, 87], "clear": [157, 162], "cli": 145, "clone": 165, "closest": 139, "cloud": [163, 168], "cls_tocken": 113, "cluster": [94, 97, 98, 107, 109, 111, 114, 123, 124, 128], "cluster_and_pad": [116, 124], "cluster_class": 124, "cluster_column": 124, "cluster_index": 98, "cluster_indic": 124, "cluster_on": [123, 124], "cluster_summarize_with_percentil": [116, 124], "clustered_x": 124, "cnn": [163, 168], "co": 51, "coarsen": [1, 93, 98], "code": [0, 31, 48, 49, 120, 149, 150, 161, 162, 163, 164, 166, 167, 168], "coincid": 123, "collabor": [1, 163, 168], "collect": [20, 33, 85, 141, 158, 163, 168], "column": [19, 53, 55, 84, 90, 92, 96, 100, 105, 107, 118, 120, 121, 123, 124, 128, 132, 133, 134, 137, 141, 161, 162, 163, 166, 168], "column_nam": [53, 161], "column_offset": 124, "columnmissingexcept": [91, 92], "com": [113, 126, 136, 141, 163, 165], "combin": [18, 34, 107, 130, 141, 149, 168], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [105, 134, 161, 162, 163, 168], "command": 145, "commit": 160, "common": [0, 1, 141, 149, 150, 153, 156, 162, 163, 164, 167], "compar": [163, 168], "comparison": [26, 141], "compat": [105, 126, 130, 134, 161, 162, 163, 168], "competit": [96, 97, 101, 111, 113], "complet": [0, 93, 163, 164, 165, 167, 168], "complex": [0, 93, 163, 164, 167], "compon": [0, 1, 93, 96, 97, 98, 105, 125, 126, 130, 163, 164, 167, 168], "compos": [163, 168], "composit": 157, "comprehens": 163, "compress": 162, "compris": [0, 164, 167], "comput": [51, 84, 97, 105, 119, 124, 130, 134, 137, 141, 162, 163], "compute_evt_weight": 51, "compute_loss": [105, 130, 134], "compute_minkowski_distance_mat": [117, 119], "compute_osc_weight": 51, "con": [163, 168], "concaten": [34, 109], "concept": 160, "conceptu": [161, 163], "concret": 163, "condit": [126, 134, 141], "condition_on": 126, "confid": 163, "config": [1, 51, 139, 141, 144, 145, 147, 148, 149, 150, 151, 152, 162, 163, 168], "config_dir": [163, 168], "configdict": [147, 149, 150, 152], "configur": [0, 1, 84, 85, 93, 105, 125, 144, 146, 147, 149, 150, 152, 157, 161, 163, 164, 167, 168], "configure_optim": 105, "conflict": 163, "conform": [147, 149, 150, 152], "conjunct": [19, 134], "conn": 163, "connect": [0, 118, 119, 120, 123, 141, 162, 163, 164, 167], "consequ": 125, "consid": [51, 88, 107, 162, 163, 166], "consist": [51, 96, 145, 157, 160, 163, 168], "consortium": [0, 164, 167], "constant": [1, 3, 134, 159, 162, 163, 168], "constitut": 162, "constraint": [105, 163], "construct": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 53, 55, 84, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 132, 133, 134, 136, 139, 140, 141, 145, 148, 149, 150, 157, 161, 162, 163, 168], "constructor": [161, 162, 163], "consult": 168, "consum": 163, "consumpt": 162, "contain": [0, 6, 17, 18, 21, 34, 35, 38, 39, 51, 52, 55, 83, 84, 85, 86, 88, 89, 90, 92, 105, 109, 114, 116, 117, 119, 120, 121, 122, 124, 125, 126, 130, 134, 137, 141, 145, 161, 162, 163, 164, 166, 167, 168], "containeris": 1, "content": [161, 168], "continu": [0, 141, 163, 164, 167], "contract": 141, "contribut": [0, 141, 163, 164, 167], "contributor": 160, "conveni": [1, 160, 163, 168], "convent": 51, "convers": [38, 39, 55, 123, 162, 163, 166], "convert": [0, 1, 21, 31, 34, 36, 49, 137, 161, 162, 163, 164, 165, 166, 167], "convex": 31, "convnet": [93, 106, 163], "convolut": [97, 108, 109, 110, 111, 114], "coo": 162, "coordin": [31, 100, 119, 123, 124, 137, 163], "copi": [141, 162], "copyright": 141, "core": 112, "correct": [51, 141], "correspond": [34, 37, 109, 114, 120, 124, 155, 162, 163, 166, 168], "cos_zenith": 51, "cosh": 141, "cosin": 51, "costheta": 51, "cosz": 51, "could": [160, 163, 168], "count": 124, "count_nonzero": 51, "counterpart": 162, "cpu": 84, "creat": [49, 120, 121, 123, 124, 147, 148, 152, 160, 162, 168], "create_unique_id_filetyp": [48, 49], "creating_time_zero": [48, 49], "critic": [157, 163, 166], "cross": 141, "crossentropyloss": [138, 141], "csv": [149, 162, 163, 166, 168], "ctx": 141, "cuda": 165, "cumul": 124, "curated_datamodul": [1, 3], "curi": [0, 164, 167], "current": [49, 51, 128, 139, 160, 163], "custom": [91, 120, 139, 168], "custom_label_funct": 120, "customdomcoarsen": [93, 94], "customis": 139, "d": [34, 119, 120, 123, 137, 160, 166], "damag": 141, "data": [0, 1, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 48, 49, 51, 53, 54, 55, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 121, 123, 124, 126, 128, 129, 130, 134, 136, 137, 140, 145, 147, 149, 152, 156, 159, 162, 163, 164, 167, 168], "data_path": 120, "databas": [162, 163], "dataclass": [1, 3, 35], "dataconfig": [149, 162], "dataconvert": [1, 3, 58, 163, 166], "datafram": [49, 100, 105, 161, 163, 166, 168], "dataload": [1, 3, 105, 120, 152, 162, 163, 168], "datamodul": [1, 3], "datarepresent": 126, "dataset": [1, 3, 25, 92, 107, 120, 128, 145, 149, 159, 166, 168], "dataset_1": [162, 163], "dataset_2": [162, 163], "dataset_3": [162, 163], "dataset_config": [144, 146, 163, 168], "dataset_config_path": [163, 168], "datasetconfig": [146, 149, 162, 168], "datasetconfigsav": 149, "datasetconfigsaverabcmeta": [146, 149], "datasetconfigsavermeta": [146, 149], "db": [162, 163], "dcp": 51, "ddp": [163, 168], "de": 34, "deactiv": [105, 134], "deal": 141, "debug": [157, 163], "decai": 113, "decor": [1, 144, 156], "dedic": 160, "deem": 37, "deep": [0, 97, 111, 113, 161, 163, 164, 165, 166, 167, 168], "deepcopi": 154, "deepcor": [22, 101], "deepic": [106, 113], "def": [51, 161, 162, 163, 166, 168], "default": [21, 23, 31, 34, 51, 55, 83, 84, 86, 88, 89, 90, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 134, 136, 137, 139, 140, 141, 145, 147, 155, 162, 163], "default_prediction_label": [132, 133, 134, 168], "default_target_label": [132, 133, 134, 168], "defin": [31, 84, 88, 90, 98, 116, 117, 118, 120, 122, 124, 126, 149, 162, 163, 166, 168], "definit": [51, 118, 120, 121, 123, 125, 134, 160, 163, 168], "deleg": 157, "deliv": 105, "delta13": 51, "delta_m21": 51, "delta_m31": 51, "demo_ic": 104, "demo_wat": 104, "denot": [19, 139, 140, 161, 166], "dens": 98, "depend": [0, 96, 161, 162, 163, 164, 167, 168], "deploi": [0, 1, 84, 163, 164, 165, 167], "deploy": [0, 1, 84, 86, 87, 88, 89, 90, 120, 159, 163, 164, 166, 167, 168], "deployment_modul": [1, 82], "deploymentmodul": [82, 83, 84, 86, 89, 90], "deprec": [86, 154], "deprecated_method": [3, 56, 68, 82, 85], "deprecation_tool": [1, 144], "depth": [97, 113, 124, 136], "depth_rel": 113, "describ": [160, 163], "descript": [51, 125, 145], "design": [1, 163, 166], "desir": 155, "detail": [1, 107, 125, 126, 134, 139, 162, 163, 165, 166, 168], "detector": [0, 1, 31, 85, 93, 101, 102, 103, 104, 120, 121, 123, 162, 163, 164, 167, 168], "detector_respons": 163, "determin": [83, 86, 89, 107], "develop": [0, 1, 160, 162, 163, 164, 165, 166, 167, 168], "deviat": [120, 121, 124], "devic": 84, "df": [49, 161], "dfg": [0, 164, 167], "dict": [23, 34, 37, 51, 84, 100, 101, 102, 103, 104, 105, 113, 120, 121, 123, 125, 126, 129, 139, 145, 147, 149, 150, 151, 152, 154, 161, 162, 163, 166], "dictionari": [19, 34, 35, 37, 120, 121, 125, 147, 149, 150, 152, 161, 166], "differ": [0, 19, 21, 39, 41, 52, 53, 55, 85, 121, 160, 161, 162, 163, 164, 166, 167, 168], "difficult": 162, "diffier": [163, 168], "digit": 96, "dim": [96, 97], "dimenion": [109, 111, 114], "dimens": [96, 97, 101, 102, 103, 104, 107, 108, 109, 111, 113, 114, 124, 128, 134, 136, 137, 141, 166, 168], "dimension": [96, 97, 162, 168], "dir": [51, 155], "dir_i": 49, "dir_with_fil": [161, 166], "dir_x": 49, "dir_x_pr": 133, "dir_y_pr": 133, "dir_z": [49, 51], "dir_z_pr": 133, "direct": [49, 111, 124, 132, 133, 134, 138, 140, 162, 166], "direction_kappa": 133, "directionreconstructionwithkappa": [131, 133, 163, 168], "directli": [0, 109, 114, 161, 163, 164, 166, 167, 168], "directori": [139, 155, 161, 163, 168], "dirti": 163, "discard_empty_ev": 88, "disconnect": 162, "discuss": 160, "disk": [161, 162, 163], "distanc": [31, 118, 119, 121, 137], "distribut": [98, 109, 126, 133, 141, 165, 168], "distribution_strategi": 105, "ditto": 141, "diverg": 141, "divid": [83, 86, 89, 124, 134], "dl": [163, 168], "dm_21": 51, "dm_31": 51, "dnn": [25, 32], "do": [0, 84, 88, 141, 149, 150, 160, 162, 163, 164, 167, 168], "doc": 163, "docformatt": 160, "docker": 1, "docstr": 160, "document": [126, 141, 166, 168], "doe": [37, 132, 134, 150, 161, 162, 163, 168], "dom": [94, 98, 107, 123, 124, 128, 163, 168], "dom_i": [101, 123], "dom_tim": 123, "dom_x": [101, 123], "dom_z": [101, 123], "domain": [0, 1, 163, 164, 167], "domandtimewindowcoarsen": [93, 94], "domcoarsen": [93, 94], "don": [139, 161], "done": [23, 98, 157, 160, 161, 163, 166], "dot": 97, "download": 165, "downsid": 162, "drawn": [116, 117, 121, 122, 163, 168], "drhb": 113, "drop": [97, 108], "drop_path": 97, "drop_prob": 97, "dropout": [97, 107, 114, 128], "dropout_prob": 97, "dropout_ratio": 108, "dropout_readout": 114, "droppath": [95, 97], "dtype": [120, 121, 158, 162, 163, 168], "due": [162, 163, 168], "dummy_pid": [162, 163], "dump": [147, 149, 150, 161, 162, 163], "duplciat": 139, "duplic": 123, "dure": [97, 113, 120, 134, 139, 166], "dynam": [23, 97, 109, 110, 111, 114, 163, 168], "dynedg": [88, 90, 93, 106, 110, 111, 113, 114, 163, 168], "dynedge_arg": 113, "dynedge_jinst": [93, 106], "dynedge_kaggle_tito": [93, 106], "dynedge_layer_s": [109, 114, 163, 168], "dynedgeconv": [95, 97, 109, 114], "dynedgejinst": [106, 110], "dynedgetito": [106, 107, 111], "dyntran": [95, 97, 107, 111], "dyntrans1": 97, "dyntrans_layer_s": [107, 111], "e": [1, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 51, 55, 84, 88, 90, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 112, 118, 120, 121, 123, 124, 125, 126, 129, 130, 132, 133, 134, 137, 139, 140, 141, 147, 157, 160, 161, 162, 163, 165, 168], "each": [23, 34, 37, 49, 51, 83, 84, 86, 89, 94, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 114, 118, 120, 121, 123, 124, 128, 132, 134, 137, 139, 141, 155, 161, 162, 163, 166, 168], "earli": [139, 145], "early_stopping_pati": [105, 152], "earlystop": 139, "earth": 51, "easi": [0, 161, 162, 163, 164, 167, 168], "easili": [1, 163, 168], "easy_model": [1, 93], "easysyntax": [93, 105, 126, 130], "ed": 141, "edg": [93, 97, 98, 109, 110, 111, 114, 116, 119, 120, 121, 122, 123, 137, 162, 163, 168], "edge_attr": [162, 163], "edge_definit": 120, "edge_index": [94, 97, 137, 162, 163], "edgeconv": 97, "edgeconvtito": [95, 97], "edgedefinit": [116, 117, 118, 119, 120, 121, 122, 163, 168], "edgelessgraph": [116, 121], "effect": [139, 160, 163, 168], "effort": [160, 162, 166], "either": [0, 21, 31, 141, 161, 163, 164, 167], "element": [19, 34, 37, 105, 126, 130, 137, 151, 161, 163, 166], "elementwis": 141, "elimin": 88, "els": [51, 88, 140, 161, 166], "ema": 129, "embed": [93, 95, 107, 113, 128, 132, 134, 136], "embedding_dim": [107, 128], "empti": 88, "en": 163, "enabl": [0, 105, 123, 164, 167], "encod": [96, 140], "encount": 163, "encourag": [160, 163], "end": [0, 1, 124, 139, 163, 164, 167], "energi": [49, 51, 133, 134, 162, 163, 166], "energy_cascad": 133, "energy_cascade_pr": 133, "energy_pr": 133, "energy_reco": 90, "energy_sigma": 133, "energy_track": 133, "energy_track_pr": 133, "energyreconstruct": [131, 133, 163, 168], "energyreconstructionwithpow": [131, 133], "energyreconstructionwithuncertainti": [131, 133, 163], "energytcreconstruct": [131, 133], "engin": [0, 164, 167], "enough": 125, "ensemble_dataset": [162, 163], "ensembledataset": [149, 162, 163], "ensembleloss": [138, 141], "ensur": [37, 141, 157, 160, 168], "entir": [125, 161, 163, 168], "entiti": [163, 168], "entri": [88, 90, 109, 114, 137, 145, 166], "entropi": 141, "enum": 37, "env": 165, "environ": 165, "ep": [158, 163, 168], "epoch": [129, 139, 145], "eps_lik": [144, 158], "equival": [37, 163, 168], "error": [141, 157, 160, 161, 163], "especi": 88, "establish": 168, "etc": [0, 141, 157, 162, 163, 164, 166, 167], "euclidean": [118, 160], "euclideandistanceloss": [138, 141], "euclideanedg": [117, 118], "european": [0, 164, 167], "ev": 51, "eval": [125, 165], "evalu": [126, 134], "event": [0, 1, 18, 28, 31, 49, 51, 55, 88, 96, 98, 107, 120, 123, 124, 130, 134, 136, 137, 140, 141, 149, 161, 163, 164, 166, 167, 168], "event_no": [149, 162, 163, 168], "everi": [114, 126, 161, 163, 166], "everyth": [163, 168], "everytim": 160, "evt_id": 49, "exact": [110, 141, 168], "exactli": [141, 157, 162], "exampl": [34, 94, 98, 124, 126, 137, 141, 149, 150, 161, 162, 165], "example_energy_reconstruction_model": [145, 163, 168], "except": [1, 159, 161], "exclud": 23, "exclude_kei": 23, "excluding_valu": 137, "execut": 51, "exist": [0, 93, 126, 140, 149, 162, 163, 164, 167, 168], "exist_ok": [163, 168], "expand": [0, 163, 164, 167], "expans": 113, "expect": [88, 90, 120, 123, 162, 163, 168], "experi": [0, 1, 6, 84, 138, 161, 163, 164, 167], "experiment": 168, "expert": 1, "explain": 163, "explicitli": [147, 152], "exponenti": 141, "export": [161, 162, 163, 166, 168], "expos": 1, "express": [125, 141], "extend": [0, 1, 31, 161, 162, 164, 167], "extend_boundari": 31, "extens": [1, 155], "extern": [162, 163], "extra": [97, 168], "extra_repr": [97, 125], "extra_repr_recurs": 125, "extract": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 49, 53, 54, 55, 88, 90, 134, 137, 161, 163, 166], "extractor": [1, 3, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 48, 49, 52, 53, 54, 55, 88, 90], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 53, 55, 161, 166], "f": [98, 161, 163, 168], "f1": 98, "f2": 98, "f_absorpt": 124, "f_scatter": 124, "factor": [97, 124, 139, 141, 163, 168], "fail": 18, "fals": [36, 51, 88, 96, 97, 109, 113, 114, 120, 123, 125, 136, 139, 141, 163, 168], "fanci": 163, "fashion": 1, "fast": [0, 162, 163, 164, 167], "faster": [0, 161, 162, 164, 167], "favorit": 165, "favourit": 163, "fc": 98, "featur": [1, 22, 88, 90, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 128, 132, 136, 137, 149, 160, 162, 163, 166, 168], "feature_idx": 124, "feature_map": [100, 101, 102, 103, 104, 166], "feature_nam": 124, "features_subset": [97, 107, 109, 111, 114, 128, 163, 168], "feedforward": 97, "feel": 163, "fetch": 145, "few": [0, 93, 160, 161, 162, 163, 164, 167, 168], "fiber_id": 102, "field": [126, 137, 140, 147, 152, 154, 161, 162, 163, 166], "figur": 0, "file": [0, 1, 19, 21, 31, 34, 36, 39, 42, 49, 52, 53, 54, 55, 83, 84, 86, 88, 89, 90, 120, 125, 139, 141, 145, 146, 147, 148, 149, 150, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168], "file_handl": 157, "file_path": [161, 166], "file_read": [161, 166], "file_typ": 49, "filehandl": 157, "filenam": 155, "fileread": 19, "filesi": [1, 144], "fill": 51, "fillpath": 51, "filter": [36, 42, 157, 166], "filter_ani": 36, "filter_nam": 36, "filter_none_nan": [48, 49], "filter_triggered_puls": 42, "filtermask": 36, "final": [0, 51, 98, 139, 149, 162, 163, 164, 167], "find": [21, 31, 119, 155, 162, 163, 166, 168], "find_fil": 161, "find_i3_fil": [144, 155], "first": [49, 96, 107, 119, 123, 128, 139, 160, 163, 166], "fisher": 141, "fit": [51, 105, 141, 152, 163, 168], "five": 162, "fix": 163, "fl_in": 51, "fl_out": 51, "flag": [22, 49, 88], "flake8": 160, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flav": 51, "flav_in": 51, "flav_out": 51, "flavor": 51, "flavor_out_is_same_as_flavor_in_mask": 51, "flavour": 51, "flavour_in": 51, "flavour_out": 51, "flexibil": 168, "float": [31, 49, 88, 97, 105, 107, 108, 114, 118, 119, 120, 121, 123, 124, 128, 134, 139, 141, 149, 162], "float32": [120, 121], "float64": 141, "flow": [126, 134, 168], "flow_lay": [126, 134], "flowchart": [0, 164, 167], "flux": 51, "fly": [162, 163], "fn": [37, 147, 151], "fn_kwarg": 151, "folder": [83, 161], "folk": 163, "follow": [105, 109, 114, 126, 130, 141, 160, 161, 162, 163], "fork": 160, "form": [0, 19, 93, 132, 147, 152, 161, 162, 164, 167, 168], "format": [0, 1, 34, 38, 39, 49, 96, 125, 128, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168], "forward": [94, 96, 97, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 120, 123, 126, 128, 130, 134, 136, 141, 168], "found": [37, 124, 141, 162, 163], "four": 96, "fourier": 96, "fourierencod": [95, 96, 113, 136], "fraction": [108, 128], "frame": [20, 21, 23, 31, 33, 36, 37, 51, 90], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 163, 164, 167], "free": [0, 141, 163, 164, 167], "freeli": 163, "freju": 51, "frequenc": 96, "friendli": [0, 161, 163, 164, 165, 167], "from": [0, 1, 19, 20, 21, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 42, 51, 53, 54, 55, 96, 98, 100, 101, 102, 103, 104, 111, 113, 118, 120, 123, 124, 125, 126, 129, 132, 133, 134, 137, 139, 140, 141, 147, 148, 150, 152, 157, 160, 161, 162, 163, 164, 166, 167, 168], "from_config": [125, 148, 149, 150, 162, 163, 168], "from_dataset_config": [163, 168], "full": [163, 168], "fulli": [161, 163, 168], "func": 163, "function": [0, 21, 37, 39, 49, 55, 88, 90, 94, 97, 98, 100, 101, 102, 103, 104, 109, 114, 120, 124, 125, 126, 134, 137, 141, 144, 149, 150, 151, 154, 155, 156, 158, 162, 164, 166, 167, 168], "fund": [0, 164, 167], "furnish": 141, "further": [88, 124], "furthermor": 128, "g": [1, 18, 19, 21, 31, 34, 37, 51, 88, 90, 98, 120, 123, 124, 134, 137, 141, 157, 160, 162, 163, 165, 168], "galatict": 24, "gamma_1": 97, "gamma_2": 97, "gather": 124, "gather_cluster_sequ": [116, 124], "gcd": [21, 31, 35, 86, 88, 89, 90, 155], "gcd_dict": [35, 37], "gcd_file": [6, 21, 31, 86, 88, 89, 90], "gcd_list": 155, "gcd_rescu": 155, "gelu": 97, "gener": [0, 23, 36, 83, 88, 89, 90, 96, 116, 117, 120, 121, 122, 124, 132, 141, 162, 163, 164, 166, 167, 168], "geometr": 163, "geometri": [100, 120, 168], "geometry_t": [100, 101, 102, 103, 104, 166], "geometry_table_path": [101, 102, 103, 104, 166], "germani": [0, 164, 167], "get": [19, 35, 51, 100, 124, 139, 163, 168], "get_all_argument_valu": [146, 147], "get_all_grapnet_class": [146, 151], "get_field": [93, 137], "get_graphnet_class": [146, 151], "get_lr": 139, "get_member_vari": [33, 37], "get_metr": 139, "get_om_keys_and_pulseseri": [33, 35], "getnupath": 51, "gev": 49, "gframe": [21, 31], "gggt": [126, 134], "git": 165, "github": [113, 126, 134, 136, 141, 163, 165], "give": 51, "given": [21, 31, 96, 98, 118, 134, 141, 145, 162, 166], "glob": 161, "global": [2, 107, 109, 111, 114, 125, 163], "global_pooling_schem": [107, 109, 111, 114, 163, 168], "gnn": [1, 85, 93, 107, 108, 109, 110, 111, 113, 114, 120, 126, 128, 136, 163, 168], "go": [51, 160, 163], "googl": 160, "got": 161, "gpu": [105, 145, 163, 165, 168], "grab": 134, "grad_output": 141, "gradient_clip_v": 105, "grant": [0, 141, 164, 167], "graph": [0, 1, 93, 97, 98, 100, 117, 118, 119, 120, 122, 123, 124, 128, 137, 140, 160, 162, 163, 164, 167, 168], "graph_definit": [93, 116, 126, 149, 162, 163, 168], "graph_definiton": 162, "graphdefinit": [116, 117, 120, 121, 122, 126, 160, 162, 163], "graphnet": [0, 1, 2, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 49, 53, 55, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168], "graphnet_file_read": [3, 60, 161, 166], "graphnet_model": 139, "graphnet_modul": 86, "graphnet_writ": [3, 75], "graphnetearlystop": [138, 139], "graphnetfileread": 161, "graphneti3deploy": [85, 86], "graphnetwrit": 161, "grapnet": [151, 163], "greatli": [163, 168], "group": [0, 98, 163, 164, 167], "group_bi": [95, 98], "group_pulses_to_dom": [95, 98], "group_pulses_to_pmt": [95, 98], "groupbi": 98, "gsystem": 51, "guarante": [163, 168], "guid": 160, "guidelin": 160, "gvd": 104, "h5": [53, 161], "h5_extractor": [17, 52], "h5extractor": [52, 53, 161], "h5hitextractor": [52, 53, 161], "h5py": 161, "h5truthextractor": [52, 53, 161], "ha": [0, 37, 49, 86, 88, 108, 124, 141, 155, 161, 162, 163, 164, 165, 166, 167, 168], "had": 166, "hadron": 133, "hand": [23, 162, 163], "handl": [23, 141, 145, 154, 157, 161, 162, 163], "handler": 157, "happen": [124, 162, 166], "hard": [31, 123], "has_extens": [144, 155], "has_icecube_packag": [144, 156], "has_jammy_flows_packag": [144, 156], "has_torch_packag": [144, 156], "have": [1, 23, 98, 113, 120, 124, 134, 160, 162, 163, 166, 168], "head": [97, 107, 111, 113, 134, 136, 168], "head_dim": 97, "head_siz": 113, "heavi": 161, "help": [88, 90, 145, 160, 162, 163, 166, 168], "here": [120, 160, 162, 163, 165, 166, 168], "herebi": 141, "hidden": [96, 97, 107, 109, 110, 114, 128], "hidden_dim": [113, 136], "hidden_featur": 97, "hidden_s": [128, 132, 133, 134, 163, 168], "high": [0, 163, 164, 167], "higher": 162, "highest_protocol": 161, "hint": 160, "hit": [49, 162, 163, 166], "hitdata": 53, "hlc": 123, "hlc_name": 123, "hnl": 49, "hold": [120, 124, 161, 166, 168], "holder": 141, "home": [101, 102, 103, 104, 145, 161, 166], "homophili": 137, "honda": 51, "hook": 160, "horizon": [0, 164, 167], "host": 166, "how": [116, 117, 122, 161, 163, 168], "howev": [162, 163], "html": [126, 134, 163], "http": [51, 113, 114, 118, 126, 134, 136, 141, 160, 163, 165], "hull": 31, "human": 163, "hybrid": 24, "hyperparamet": [150, 163, 168], "i": [0, 1, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 49, 51, 53, 55, 83, 86, 88, 89, 90, 94, 96, 97, 98, 108, 109, 113, 114, 118, 120, 121, 123, 124, 126, 128, 130, 133, 134, 137, 139, 140, 141, 145, 147, 150, 151, 152, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168], "i3": [1, 21, 31, 35, 36, 37, 83, 88, 90, 155, 163, 165], "i3_fil": [6, 21, 31], "i3_filt": [20, 33], "i3_list": 155, "i3calibr": 35, "i3deploy": [6, 82, 86, 87], "i3extractor": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "i3featureextractor": [17, 20, 88, 90], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6], "i3filt": [33, 36], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 88, 90], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [86, 87, 88, 89, 90], "i3mctre": 31, "i3modul": [1, 82, 84, 86], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [87, 88], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 60], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3truthextractor": [17, 20], "i3tumextractor": [17, 20], "ic": [111, 113, 123], "ice_arg": 123, "ice_transpar": [116, 124], "icecub": [1, 3, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 82, 85, 88, 89, 90, 93, 97, 99, 103, 111, 113, 123, 124, 156, 163, 168], "icecube86": [99, 101, 103, 104], "icecube86prometheu": [99, 104], "icecube_deepcor": 104, "icecube_gen2": 104, "icecube_upgrad": [101, 104], "icecubedeepcor": [99, 101], "icecubedeepcore8": [99, 104], "icecubegen2": [99, 104], "icecubekaggl": [99, 101], "icecubeupgrad": [99, 101], "icecubeupgrade7": [99, 104], "icedemo81": [99, 104], "icemix": [93, 106], "icemixnod": [122, 123], "icetrai": [35, 37, 84, 85, 156, 165], "id": [49, 100, 120, 161, 162, 163, 166], "id_column": 123, "ideal": 168, "ident": [98, 100, 101, 102, 103, 104, 134], "identifi": [31, 123, 124, 137, 149, 150, 166], "identify_indic": [116, 124], "identitytask": [131, 132, 134], "ie": 107, "ignor": 37, "illustr": [0, 160, 161, 164, 167], "imag": [0, 1, 160, 163, 164, 167, 168], "impact": 113, "implement": [1, 19, 21, 84, 89, 97, 107, 108, 109, 110, 111, 113, 114, 118, 128, 136, 141, 160, 161, 163, 168], "impli": 141, "import": [0, 1, 51, 93, 144, 161, 162, 163, 164, 166, 167, 168], "impos": 105, "improv": [0, 1, 145, 163, 164, 167, 168], "in_featur": 97, "inaccur": 124, "inact": 120, "includ": [1, 51, 97, 105, 123, 141, 147, 160, 162, 163, 166, 168], "include_dynedg": 113, "incompat": 163, "incorpor": 96, "increas": [0, 139, 164, 167], "indent": 125, "independ": [83, 86, 89, 161], "index": [1, 37, 98, 100, 107, 119, 124, 128, 139, 162, 163, 168], "index_column": [149, 162, 163], "indic": [49, 92, 98, 107, 119, 124, 128, 134, 139, 141, 145, 160, 163, 168], "indicesfor": 35, "indici": 35, "individu": [0, 98, 109, 137, 162, 164, 167, 168], "industri": [0, 164, 167], "inelast": 133, "inelasticity_pr": 133, "inelasticityreconstruct": [131, 133], "inf": 137, "infer": [0, 1, 84, 85, 88, 90, 105, 134, 163, 164, 167], "inference_modul": [82, 87], "info": [157, 163], "inform": [18, 19, 21, 23, 31, 39, 42, 53, 55, 120, 123, 124, 125, 161, 162, 163, 166, 168], "ingest": [0, 1, 99, 164, 167], "inherit": [19, 21, 37, 100, 123, 141, 157, 161, 162, 163, 168], "init_fn": [149, 150], "init_predict_tqdm": 139, "init_test_tqdm": 139, "init_train_tqdm": 139, "init_validation_tqdm": 139, "init_valu": 97, "initail": 41, "initi": [36, 42, 48, 51, 83, 86, 89, 97, 107, 113, 119, 124], "initial_st": 55, "initialis": [150, 163, 168], "injection_azimuth": [162, 163], "injection_bjorkeni": [162, 163], "injection_bjorkenx": [162, 163], "injection_column_depth": [162, 163], "injection_energi": [162, 163], "injection_interaction_typ": [162, 163], "injection_position_i": [162, 163], "injection_position_x": [162, 163], "injection_position_z": [162, 163], "injection_typ": [162, 163], "injection_zenith": [162, 163, 168], "innov": [0, 164, 167], "inptut": 124, "input": [83, 86, 88, 89, 90, 96, 97, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 123, 124, 126, 128, 132, 134, 136, 137, 147, 152, 154, 161, 162, 163, 166, 168], "input_dim": [97, 168], "input_dir": [161, 166], "input_featur": [100, 120], "input_feature_nam": [100, 120, 121, 123], "input_fil": 83, "input_nam": 124, "ins": 100, "insert": 124, "insid": 162, "inspect": [163, 168], "inspir": 114, "instal": [160, 163], "instanc": [19, 21, 31, 37, 39, 41, 53, 55, 120, 125, 140, 148, 150, 161, 162, 163, 168], "instanti": [150, 161, 162, 166], "instead": [21, 31, 86, 126, 141, 163, 168], "int": [25, 28, 36, 49, 83, 86, 89, 96, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 141, 145, 149, 152, 157, 161, 168], "integ": [107, 109, 110, 114, 141, 162, 163], "integr": 168, "intend": [107, 128, 163], "interact": [49, 51, 133, 140, 162, 163], "interaction_kei": 140, "interaction_tim": 133, "interaction_time_pr": 133, "interaction_typ": 140, "interchang": [163, 168], "interfac": [0, 51, 149, 150, 163, 164, 165, 166, 167], "interim": 161, "intermedi": [0, 1, 108, 163, 164, 167], "intern": [3, 17, 39], "internal_parquet_read": [3, 60], "interpol": [124, 139], "interpret": 132, "interv": [96, 163, 168], "intract": 162, "introduc": 163, "introduct": [126, 134], "intuit": [157, 168], "inv_hierarchi": 51, "invers": 134, "invert": [51, 134], "io": [126, 134, 160, 163], "iop": 163, "iopscienc": 163, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_cc": 51, "is_cc_flag": 49, "is_gcd_fil": [144, 155], "is_graphnet_class": [146, 151], "is_graphnet_modul": [146, 151], "is_i3_fil": [144, 155], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_typ": [33, 37], "iseecub": [93, 135], "isinst": 161, "isn": 37, "isol": 121, "issu": [163, 168], "its": [37, 49, 128, 162, 163, 168], "itself": [37, 134, 161, 163, 168], "iv": 141, "ivanorca115": [99, 103], "jammy_flow": [126, 134, 156], "job": 166, "join": [161, 163], "json": [34, 149, 162, 163], "just": [98, 161, 162, 163, 168], "k": [97, 107, 109, 111, 114, 118, 121, 128, 137, 141], "kaggl": [96, 97, 101, 111, 113], "kappa": [133, 141], "kappa_switch": 141, "karg": [125, 129], "keep": [19, 21, 36, 39, 41, 53, 55, 123, 161], "kei": [23, 34, 35, 37, 97, 98, 123, 140, 149, 150, 161, 162, 163, 166], "kept": 36, "key_padding_mask": 97, "keyword": [139, 147, 152], "kind": [141, 166], "km": 51, "km3flux": 51, "km3net": [3, 17, 41, 42, 48, 49, 51, 163, 168], "km3net_util": [40, 48], "km3netextractor": [17, 40, 42], "km3netfullpulseextractor": [40, 42], "km3netpulseextractor": [17, 40], "km3netread": [3, 60], "km3netroot": 41, "km3netrootextractor": [17, 40], "km3netrootpulseextractor": [17, 40], "km3netrootread": [3, 60], "km3netroottriggpulseextractor": [17, 40], "km3netroottruthextractor": [17, 40], "km3nettextractor": 41, "km3nettriggpulseextractor": [40, 42], "km3nettruthextractor": [17, 40], "knn_graph_batch": [93, 137], "knnedg": [117, 118], "knngraph": [116, 121, 162, 163, 168], "know": 166, "known": 98, "kv": 97, "kwarg": [36, 94, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 125, 126, 128, 129, 130, 132, 133, 134, 136, 139, 141, 147, 149, 150, 157], "l": [124, 137], "label": [1, 25, 28, 105, 108, 120, 130, 134, 138, 149], "lai": 163, "lambda": [125, 163, 168], "land": 163, "larg": [0, 107, 141, 162, 164, 167], "larger": 161, "largest": 124, "last": [109, 114, 128, 132, 133, 134, 139, 168], "last_epoch": 139, "lastli": 166, "latent": [96, 107, 109, 111, 113, 114, 126, 128, 132, 133, 134, 136, 168], "latest": 163, "layer": [0, 93, 95, 98, 107, 108, 109, 110, 111, 113, 114, 126, 128, 132, 133, 134, 164, 167], "layer_s": 97, "layer_size_scal": 110, "layernorm": 97, "ldot": [94, 98], "lead": [162, 163], "learn": [0, 1, 88, 90, 126, 130, 132, 134, 139, 161, 163, 164, 165, 166, 167, 168], "learnabl": [97, 107, 108, 109, 110, 111, 112, 113, 114, 128, 134, 136, 168], "learnedtask": [131, 134], "least": [160, 162, 163], "leav": 139, "len": [51, 124, 161, 162], "length": [37, 123, 124, 137, 139], "less": [163, 168], "let": [163, 166, 168], "level": [0, 18, 31, 36, 55, 94, 98, 113, 130, 157, 162, 163, 164, 166, 167], "leverag": 1, "lex_sort": [116, 124], "liabil": 141, "liabl": 141, "lib": [101, 102, 103, 104, 145], "liboscprob": 51, "librari": 51, "licens": 141, "lift": 161, "light": 119, "lightn": [139, 163, 168], "lightningmodul": [96, 97, 125, 139, 157, 163, 168], "like": [19, 37, 98, 119, 126, 134, 137, 141, 158, 160, 162, 163, 165, 168], "limit": [123, 141], "line": [139, 145, 161, 162, 166], "linear": [109, 114, 124, 168], "linearli": 139, "liquid": 102, "liquido": [3, 17, 53, 93, 99, 161], "liquido_read": [3, 60], "liquido_v1": [99, 102], "liquidoread": 161, "list": [6, 18, 23, 31, 34, 36, 37, 49, 53, 55, 83, 84, 86, 88, 89, 90, 94, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 111, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 134, 137, 139, 141, 149, 151, 152, 155, 157, 161, 162, 166], "list_all_submodul": [146, 151], "livetim": 51, "ljvmiranda921": 160, "load": [0, 51, 84, 125, 129, 147, 149, 162, 163, 164, 166, 167], "load_from_checkpoint": [163, 168], "load_modul": 125, "load_state_dict": [125, 129, 163, 168], "loaded_model": [163, 168], "local": [94, 101, 102, 103, 104, 123, 145, 163, 165, 168], "locat": 124, "log": [0, 1, 133, 138, 139, 141, 144, 162, 163, 164, 167, 168], "log10": [134, 163, 168], "log_cmk": 141, "log_cmk_approx": 141, "log_cmk_exact": 141, "log_every_n_step": [105, 163, 168], "log_fold": [36, 157], "log_model": [163, 168], "logcmk": [138, 141], "logcoshloss": [138, 141, 163, 168], "logger": [19, 36, 83, 84, 105, 118, 125, 140, 144, 157, 163, 168], "loggeradapt": 157, "logic": 162, "logit": [132, 141, 168], "logrecord": 157, "long": 162, "longer": 123, "longev": [0, 164, 167], "longtensor": [94, 98, 137], "look": [23, 162, 163], "lookup": 151, "loop": [51, 163, 168], "loss": [105, 120, 126, 130, 134, 139, 141, 145, 163, 168], "loss_factor": 141, "loss_funct": [1, 134, 138, 163, 168], "loss_weight": [120, 134, 163, 168], "loss_weight_column": [120, 149], "loss_weight_default_valu": [120, 149], "loss_weight_t": 149, "lossfunct": [134, 138, 141, 163], "lot": 160, "lower": [0, 163, 164, 167], "lr": [163, 168], "m": [119, 124, 141], "machin": 1, "made": [163, 168], "maeloss": [138, 141], "magnitud": [0, 164, 167], "mai": [84, 123, 134, 162, 163, 165, 168], "main": [1, 160, 163], "mainli": 37, "major": [130, 134], "make": [0, 51, 123, 149, 150, 160, 161, 162, 163, 164, 166, 167, 168], "makedir": [163, 168], "manag": [0, 138, 161, 163, 164, 167], "mandatori": 96, "mangl": 37, "mani": [161, 163, 168], "manipul": [34, 116, 117, 122], "map": [22, 23, 101, 102, 103, 104, 120, 121, 134, 163, 166, 168], "mari": [0, 164, 167], "martin": 108, "mask": [120, 137], "masked_entri": 137, "master": 141, "match": [120, 155, 158, 161], "math": [1, 97, 144], "mathbb": 98, "mathbf": [94, 98], "matic": 134, "matric": 97, "matrix": [98, 118, 119, 124, 137, 141, 162], "max": [94, 97, 109, 111, 114, 141, 145, 163, 168], "max_activ": 123, "max_epoch": [105, 163, 168], "max_length": 123, "max_pool": [94, 98], "max_pool_x": [94, 98], "max_puls": 123, "max_rel_po": 136, "maximum": [98, 123, 124, 134, 136, 145], "mc": 23, "mc_truth": [19, 55, 162, 163], "mctree": [31, 35], "md": 163, "mean": [0, 93, 109, 111, 114, 124, 141, 150, 161, 162, 163, 164, 167, 168], "meaning": 96, "meant": [161, 163, 168], "measur": [123, 124, 137, 163, 166], "mechan": 97, "meet": 134, "member": [21, 23, 31, 37, 123, 149, 150, 157, 161, 166], "memori": 162, "mention": 163, "merchant": 141, "merg": [141, 161, 162, 166], "merge_fil": [161, 166], "messag": [97, 139, 157, 163], "messagepass": 97, "metaclass": [149, 150], "metaproject": 165, "meter": 163, "meth": 163, "method": [19, 21, 31, 33, 34, 35, 37, 84, 86, 97, 98, 100, 113, 124, 133, 141, 161, 163, 168], "metric": [107, 109, 111, 114, 119, 128, 139, 163, 168], "might": [162, 163, 168], "mileston": [139, 163, 168], "min": [51, 94, 98, 109, 111, 114, 163, 168], "min_pool": [94, 95, 98], "min_pool_x": [94, 95, 98], "mind": 163, "minh": 108, "minim": [105, 126, 162, 163, 166, 168], "minimum": [123, 134], "minkowski": [116, 117], "minkowskiknnedg": [117, 119], "minu": 141, "mise": 141, "miss": 92, "mit": 141, "mix": 18, "ml": [0, 1, 164, 167], "mlp": [95, 96, 97, 109, 113, 114, 136, 168], "mlp_dim": [96, 136], "mlp_ratio": [97, 113], "mode": [105, 134], "model": [0, 1, 49, 51, 84, 85, 88, 90, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 145, 147, 149, 150, 152, 159, 161, 162, 164, 165, 166, 167], "model_config": [84, 88, 90, 144, 146, 147, 149, 152, 163, 168], "model_config_path": [163, 168], "model_hnl": 49, "model_nam": [88, 90], "modelconfig": [84, 88, 90, 125, 146, 149, 150], "modelconfigsav": 150, "modelconfigsaverabc": [146, 150], "modelconfigsavermeta": [146, 150], "modif": [163, 168], "modifi": [141, 163, 168], "modul": [0, 6, 17, 18, 37, 38, 42, 52, 83, 85, 86, 87, 88, 89, 92, 93, 96, 97, 99, 116, 117, 119, 120, 121, 122, 125, 127, 131, 135, 138, 144, 146, 149, 150, 151, 152, 156, 161, 163, 164, 167, 168], "modular": [0, 93, 161, 163, 164, 167, 168], "moduletyp": 151, "mont": 35, "more": [1, 107, 125, 149, 150, 157, 162, 163, 168], "most": [0, 1, 119, 134, 161, 164, 166, 167, 168], "mryab": 141, "mseloss": [138, 141], "msg": 157, "mu": 51, "mulitpli": 141, "multi": [97, 109, 114, 130], "multiclassclassificationtask": [131, 132, 163], "multiheadattent": 97, "multiindex": 166, "multipl": [18, 96, 124, 139, 141, 149, 157, 168], "multipli": [97, 139], "multiprocess": 161, "muon": [25, 49, 162, 168], "must": [18, 94, 139, 141, 160, 161, 162, 163, 166], "my": [162, 163, 166], "my_custom_label": [162, 163], "my_fil": [161, 166], "my_geometry_t": 166, "my_outdir": [161, 166], "my_tabl": 166, "mycustomlabel": [162, 163], "mydetector": 166, "myexperi": 166, "myextractor": 166, "mygraphnetmodel": 168, "mymodel": 168, "mypi": 160, "mypicklewrit": 161, "myread": 166, "n": [19, 94, 98, 119, 137, 141, 162, 163, 166], "n_1": 98, "n_b": 98, "n_cluster": 124, "n_event": [161, 166], "n_featur": [96, 113, 136], "n_freq": 96, "n_head": [97, 107, 111], "n_pmt": 124, "n_puls": [123, 166], "n_rel": 113, "n_worker": [83, 86, 89], "name": [18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 42, 49, 51, 53, 55, 84, 88, 90, 100, 101, 102, 103, 104, 120, 121, 123, 124, 126, 128, 134, 137, 140, 145, 147, 149, 150, 151, 152, 157, 160, 161, 162, 163, 166, 168], "namespac": [125, 149, 150], "nan": [49, 124], "narg": 145, "nb_dom": 137, "nb_input": [107, 108, 109, 110, 111, 112, 114, 128, 132, 133, 134, 163, 168], "nb_intermedi": 108, "nb_nearest_neighbour": [118, 119, 121, 162, 163, 168], "nb_neighbor": 97, "nb_neighbour": [107, 109, 111, 114, 128, 163, 168], "nb_output": [108, 110, 112, 123, 132, 133, 134, 163, 168], "nb_repeats_allow": 157, "nc": [49, 51], "nc_mask": 51, "ndarrai": [31, 49, 120, 124, 161], "nearest": [107, 109, 111, 114, 118, 119, 121, 128, 137, 163, 168], "nearli": 168, "necessari": [0, 34, 160, 164, 167], "need": [0, 34, 93, 96, 125, 128, 141, 154, 161, 162, 163, 164, 165, 166, 167, 168], "negat": 98, "neighbour": [97, 107, 109, 111, 114, 118, 119, 121, 128, 137, 163, 168], "nest": 34, "nester": 34, "network": [1, 97, 108, 127, 168], "neural": [1, 127, 168], "neutral": 49, "neutrino": [0, 1, 21, 49, 51, 55, 97, 111, 113, 124, 136, 162, 163, 164, 166, 167, 168], "new": [0, 1, 18, 97, 123, 147, 152, 160, 161, 163, 164, 167, 168], "new_features_nam": 123, "new_phras": 154, "nfdi": [0, 164, 167], "ngen": 51, "nn": [0, 93, 97, 118, 121, 164, 167, 168], "no_weight_decai": 113, "node": [51, 93, 94, 98, 107, 108, 109, 111, 114, 116, 117, 118, 120, 121, 128, 137, 162, 163, 168], "node_definit": [120, 121, 162, 163, 168], "node_feature_nam": [123, 162, 163, 168], "node_rnn": [93, 107, 127], "node_truth": 149, "node_truth_t": [149, 163], "nodeasdomtimeseri": [122, 123], "nodedefinit": [120, 121, 122, 123, 163, 168], "nodesaspuls": [120, 122, 123, 162, 163, 168], "nodetimernn": 128, "nois": [22, 35, 49, 88, 163], "non": [34, 37, 107, 134, 141, 163], "none": [21, 23, 31, 35, 36, 37, 49, 51, 83, 84, 90, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 111, 113, 114, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 134, 139, 141, 145, 147, 148, 149, 151, 155, 157, 161, 162, 163, 166, 168], "noninfring": 141, "norm_lay": 97, "normal": [97, 109, 114, 124, 126, 134, 166], "normalizing_flow": [1, 93], "normalizingflow": [93, 126, 134], "northeren": 25, "note": [124, 150, 163], "notebook": 160, "notic": [137, 141], "notimplementederror": 161, "now": [163, 166, 168], "np": [51, 161], "nu": 51, "nu_dict": 51, "nu_param": 51, "nu_typ": 51, "nue": 51, "nufit": 51, "nufit2022": 51, "null": [36, 162, 163, 168], "nullspliti3filt": [33, 36], "num": 145, "num_class": 141, "num_edg": 162, "num_edge_featur": 162, "num_featur": 162, "num_head": [97, 136], "num_lay": [128, 136], "num_nod": 162, "num_puls": 123, "num_register_token": 136, "num_row": [120, 162], "num_work": [161, 162, 163, 166, 168], "number": [0, 19, 51, 83, 86, 89, 96, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 128, 132, 133, 134, 136, 137, 139, 145, 161, 162, 163, 164, 166, 167], "numer": [134, 166], "numpi": [51, 124], "numu": [51, 140], "numucc": 140, "o": [0, 102, 134, 161, 163, 164, 165, 167, 168], "obj": [34, 37, 151], "object": [6, 23, 34, 37, 51, 94, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 141, 145, 157, 162, 163, 168], "observ": 166, "observatori": 21, "obtain": [98, 141], "oerso": 110, "offer": 162, "offset": [123, 124], "ofintern": 38, "often": 162, "old_phras": 154, "om": [35, 37], "omit": 168, "on_fit_end": 139, "on_train_end": 129, "on_train_epoch_end": 139, "on_train_epoch_start": 139, "on_validation_end": 139, "onc": [157, 163, 165], "one": [21, 31, 88, 98, 149, 150, 155, 160, 161, 162, 163, 166, 168], "ones": [51, 124, 129], "onli": [0, 1, 36, 51, 93, 98, 107, 123, 124, 134, 147, 150, 152, 156, 161, 162, 163, 164, 166, 167, 168], "op": 51, "open": [0, 160, 161, 162, 163, 164, 165, 166, 167], "opensciencegrid": 165, "oper": [94, 97, 109], "oppos": 162, "optic": [37, 124], "optim": [105, 126, 129, 139, 163, 168], "optimis": [0, 1, 163, 164, 167, 168], "optimizer_class": [126, 163, 168], "optimizer_closur": 129, "optimizer_kwarg": [126, 163, 168], "optimizer_step": 129, "optimzi": 126, "option": [21, 31, 42, 84, 90, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 113, 114, 119, 120, 121, 123, 124, 125, 126, 128, 134, 139, 141, 144, 145, 147, 149, 155, 161, 162, 163, 166, 168], "orca": [93, 99, 104], "orca115": [99, 103], "orca150": [99, 104, 168], "orca150superdens": [99, 104], "orca6": [99, 103], "orca_150": 104, "orca_depth_km": 51, "order": [0, 34, 51, 83, 86, 89, 94, 123, 137, 141, 163, 164, 167], "ordinari": 168, "ordinarili": 166, "org": [51, 114, 118, 141, 163, 165], "orient": [0, 93, 164, 167], "origin": [113, 162, 168], "osc_prob": 51, "osc_prob_cc": 51, "osc_prob_lib": 51, "oscil": 51, "oscilation_w": 51, "oscprob": 51, "oscprobdir": 51, "ot": 141, "other": [26, 118, 141, 160, 162, 163, 168], "otherwis": [37, 141], "our": [163, 166], "out": [109, 131, 141, 157, 160, 161, 162, 163, 166, 168], "out_featur": 97, "outdir": [161, 163, 166, 168], "outer": 34, "outlin": [166, 168], "output": [19, 83, 84, 96, 97, 105, 107, 108, 109, 110, 112, 114, 120, 123, 124, 128, 132, 133, 134, 149, 150, 161, 166, 168], "output_dim": [96, 168], "output_dir": 161, "output_file_path": 161, "output_fold": [6, 83], "outsid": 160, "over": [119, 123, 161, 162], "overal": 141, "overhead": 166, "overrid": 139, "overridden": 123, "overview": [0, 164, 167], "overwrit": [84, 139], "overwritten": [145, 147], "own": [160, 163], "ownership": 160, "p": [35, 51, 141, 161], "p11003": 163, "packag": [0, 1, 134, 151, 155, 156, 160, 163, 164, 167, 168], "pad": [49, 120, 124, 137], "padding_valu": [25, 28, 49, 137], "pair": [21, 31, 96], "pairwis": [119, 137], "panda": [161, 163, 166, 168], "paper": 141, "paradigm": [163, 168], "parallel": [161, 166], "param": [39, 41, 51, 53, 55], "paramet": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 49, 51, 53, 55, 83, 84, 86, 88, 89, 90, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158], "parent": [34, 163], "parent_kei": 34, "parquet": [1, 3, 10, 39, 54, 55, 101, 102, 103, 104, 161, 162, 163, 166], "parquet_dataset": [10, 12, 162], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 70], "parquet_writ": [3, 75], "parquetdataset": [161, 163], "parquetextractor": [38, 39, 53], "parquetwrit": [39, 161, 162, 166], "pars": [23, 144, 145, 146, 147, 152, 161], "part": [85, 161, 163, 165, 166], "particl": [31, 49, 51, 140, 162, 163, 166], "particlenet": [93, 106], "particular": [141, 160], "particularli": [162, 163, 168], "partli": [0, 164, 167], "pass": [96, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 120, 126, 128, 130, 134, 136, 139, 141, 160, 161, 162, 163, 166, 168], "path": [21, 31, 51, 83, 86, 88, 89, 90, 97, 120, 125, 129, 139, 145, 147, 148, 149, 155, 161, 162, 163, 166, 168], "path_to_arrai": 166, "path_to_geometry_t": 166, "patienc": 145, "pb": 51, "pd": [161, 163, 166], "pdf": [118, 126], "pdg": [49, 140], "pdg_id": 49, "pdgid": 51, "penal": 141, "peopl": [163, 168], "pep257": 160, "pep8": 160, "per": [23, 97, 98, 107, 128, 134, 141, 162, 163], "percentil": [123, 124], "percentileclust": [122, 123], "perceptron": [97, 109, 114], "perform": [0, 94, 96, 97, 98, 105, 107, 109, 111, 114, 123, 126, 128, 129, 130, 132, 134, 163, 164, 167, 168], "permiss": 141, "permit": 141, "person": 141, "perturb": [120, 121], "perturbation_dict": [120, 121], "philosophi": [163, 168], "photon": [55, 162, 163], "phrase": 154, "phyic": 1, "physic": [0, 1, 21, 35, 37, 88, 90, 93, 131, 134, 162, 163, 164, 167, 168], "physicist": [0, 1, 163, 164, 167], "physicst": 1, "pi": 51, "pick": 162, "pickl": [161, 163, 166, 168], "pid": [140, 149, 162], "pid_kei": 140, "piecewiselinearlr": [138, 139, 163, 168], "pip": [160, 165], "pisa": 27, "place": [96, 113, 154, 160], "plai": 1, "plane": [24, 141], "pleas": [86, 161, 162, 163, 166], "plot": 162, "plug": 1, "pmn": 51, "pmns_fast": 51, "pmt": [98, 124, 162, 163], "point": [30, 126, 140, 141, 163, 166, 168], "pole": 111, "pone": 104, "pone_triangl": 104, "ponetriangl": [99, 104], "pool": [93, 94, 95, 107, 109, 111, 114], "pop_default": 145, "popular": 168, "port": 163, "portabl": [0, 163, 164, 167, 168], "portion": 141, "pos_i": 103, "pos_x": [103, 163], "pos_z": 103, "posit": [88, 96, 97, 98, 113, 124, 133, 136, 147, 152, 162, 166], "position_x_pr": 133, "position_y_pr": 133, "position_z_pr": 133, "positionreconstruct": [131, 133], "possibl": [0, 34, 160, 164, 166, 167], "post": [107, 109, 111, 114], "post_processing_layer_s": [107, 109, 111, 163, 168], "posterior": 126, "pow": [163, 168], "power": [161, 163, 168], "pr": 128, "practic": [0, 160, 164, 167], "pre": [0, 100, 120, 140, 160, 162, 163, 164, 167, 168], "pre_configur": [1, 3], "precis": 141, "precommit": 160, "pred": [105, 130, 134], "predict": [0, 26, 30, 32, 88, 90, 105, 108, 113, 126, 130, 132, 134, 141, 163, 164, 167, 168], "predict_as_datafram": [105, 163, 168], "prediction_column": [84, 90, 105], "prediction_kei": 141, "prediction_label": [105, 134, 163, 168], "prefer": 119, "prem": 51, "premmodel": 51, "prepar": [0, 141, 162, 164, 167], "preprocess": 163, "present": [21, 31, 36, 137, 145, 155, 156, 162, 168], "previou": [139, 163, 168], "primari": [162, 163], "primary_hadron_1_direction_phi": [162, 163], "primary_hadron_1_direction_theta": [162, 163], "primary_hadron_1_energi": [162, 163], "primary_hadron_1_position_i": [162, 163], "primary_hadron_1_position_x": [162, 163], "primary_hadron_1_position_z": [162, 163], "primary_hadron_1_typ": [162, 163], "primary_lepton_1_direction_phi": [162, 163], "primary_lepton_1_direction_theta": [162, 163], "primary_lepton_1_energi": [162, 163], "primary_lepton_1_position_i": [162, 163], "primary_lepton_1_position_x": [162, 163], "primary_lepton_1_position_z": [162, 163], "primary_lepton_1_typ": [162, 163], "principl": [1, 163], "print": [125, 139, 157], "prior": 162, "prioriti": 160, "pro": [163, 168], "prob": 51, "probabilit": 51, "probabl": [51, 97, 141, 168], "problem": [0, 51, 118, 160, 162, 163, 164, 167, 168], "process": [1, 88, 96, 100, 107, 109, 111, 114, 160, 161, 163, 168], "process_posit": 139, "produc": [96, 126, 130, 140, 162, 163], "product": 97, "programm": [0, 164, 167], "progress": 139, "progressbar": [138, 139, 163, 168], "proj_drop": 97, "project": [0, 97, 160, 163, 164, 167, 168], "prometheu": [3, 17, 55, 93, 99, 162, 163, 168], "prometheus_dataset": [1, 79], "prometheus_extractor": [17, 54], "prometheus_read": [3, 60], "prometheusextractor": [54, 55], "prometheusfeatureextractor": [54, 55], "prometheustruthextractor": [54, 55], "prompt": 163, "prone": 163, "proof": [163, 168], "properti": [19, 26, 37, 51, 98, 100, 105, 112, 123, 124, 134, 140, 148, 157, 161], "protocol": 161, "prototyp": 102, "proven": [19, 21, 39, 41, 53, 55, 161], "provid": [0, 1, 88, 93, 113, 120, 125, 126, 141, 160, 161, 162, 163, 164, 167, 168], "pth": [163, 168], "public": 100, "publish": [141, 163, 168], "puls": [18, 22, 23, 35, 37, 42, 55, 88, 94, 98, 113, 120, 123, 124, 130, 136, 137, 162, 163, 166, 168], "pulsemap": [22, 88, 90, 149, 162, 163], "pulsemap_extractor": [88, 90], "pulseseri": 35, "pulsmap": [88, 90], "punch4nfdi": [0, 164, 167], "pure": [19, 20, 23, 37], "purpos": [0, 93, 141, 164, 166, 167], "put": [163, 168], "py": [141, 163], "py3": 165, "pydant": [147, 149, 150, 152], "pydantic_cor": [147, 152], "pydocstyl": 160, "pyg": [162, 163, 168], "pylint": 160, "python": [0, 1, 19, 20, 23, 34, 37, 160, 163, 164, 165, 167, 168], "python3": [101, 102, 103, 104, 145], "pytorch": [139, 163, 165, 168], "pytorch_lightn": [105, 139, 157, 163, 168], "pytorchlightn": 163, "q": [51, 97], "qk_scale": 97, "qkv_bia": 97, "qualiti": [0, 163, 164, 167], "quantiti": [27, 134, 137, 163], "queri": [97, 162, 163], "query_t": 162, "queso": 28, "question": 163, "quick": [124, 163], "r": [98, 118, 161, 163, 165, 166], "radial": 118, "radialedg": [117, 118], "radian": 51, "radiat": [123, 124, 163, 168], "radiu": [118, 163], "rais": [21, 23, 31, 125, 126, 147, 152, 161], "random": [3, 70, 123, 149, 162, 163], "randomli": [120, 121, 150, 163, 168], "rang": [51, 134, 164, 166, 167, 168], "rare": 161, "rasmu": [0, 110, 164, 167], "rate": [126, 139], "rather": [134, 157, 163, 168], "ratio": [97, 113], "raw": [0, 123, 124, 162, 163, 164, 166, 167, 168], "re": [148, 162, 163, 166, 168], "reach": [162, 166], "read": [0, 34, 100, 109, 131, 161, 162, 163, 164, 166, 167], "read_csv": 166, "read_sql": 163, "readabl": 163, "reader": [1, 3, 166], "readi": [166, 168], "readm": 163, "readout": [107, 109, 111, 114], "readout_layer_s": [107, 109, 111, 114, 163, 168], "readthedoc": 163, "receiv": [0, 164, 167, 168], "reciev": [161, 166, 168], "recommend": [163, 165, 166, 168], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 85, 93, 111, 128, 131, 134, 162, 163, 164, 167], "record": 157, "recov": 134, "recreat": [162, 163, 168], "recurr": 127, "recurs": [23, 37, 125, 151, 155], "reduc": [163, 168], "reduce_opt": 94, "refer": [104, 126, 149, 162, 163, 166, 168], "refresh_r": 139, "regardless": [162, 163, 168], "regist": 136, "regress": 130, "regular": [37, 97, 163, 168], "rel": [97, 113, 136], "rel_pos_bia": 97, "rel_pos_bucket": 136, "relat": [155, 166], "relev": [1, 37, 155, 160], "reli": 126, "reload": 168, "relu": 114, "remain": 162, "remov": [49, 120, 145, 166], "renam": [86, 154], "rename_state_dict_entri": [144, 154], "repeat": [120, 157], "repeat_label": 120, "repeatfilt": [144, 157], "replac": [100, 101, 102, 103, 104, 154], "replace_with_ident": [100, 101, 102, 103, 104], "repo": 160, "repositori": 160, "repres": [98, 107, 120, 121, 123, 124, 137, 147, 149, 150, 161, 162, 163, 166, 168], "represent": [37, 96, 97, 98, 121, 125, 126, 128, 162, 163, 166, 168], "reproduc": [149, 150, 168], "repurpos": 168, "requir": [0, 21, 27, 39, 55, 123, 132, 134, 141, 160, 161, 162, 163, 164, 165, 166, 167, 168], "requires_icecub": [144, 156], "research": [0, 163, 164, 167], "reset": 97, "reset_paramet": 97, "respect": [163, 166], "respons": [162, 163], "restrict": [134, 141, 168], "result": [98, 121, 124, 139, 141, 151, 163, 166, 168], "retriev": [100, 161, 162], "retro": 29, "return": [18, 19, 21, 31, 34, 35, 37, 49, 51, 83, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 161, 162, 163, 166, 168], "return_discard": 37, "return_el": 141, "reusabl": [0, 164, 167], "reuseabl": [163, 168], "review": 160, "rhel_7_x86_64": 165, "right": [141, 163], "rmse": 141, "rmseloss": [138, 141], "rmsevonmisesfisher3dloss": [138, 141], "rnn": [1, 93, 107, 128], "rnn_dropout": 107, "rnn_dynedg": 107, "rnn_hidden_s": 107, "rnn_layer": 107, "rnn_tito": [93, 106], "role": 168, "root": [51, 141], "roughli": 162, "row": [120, 124, 137, 162, 163, 166, 168], "run": [1, 49, 83, 85, 86, 89, 161, 163, 165, 166, 168], "run_id": 49, "runner": [101, 102, 103, 104, 145], "runtim": [140, 165], "runtimeerror": [21, 31], "ryabinin": 141, "sai": [163, 168], "same": [18, 37, 94, 98, 124, 132, 137, 139, 151, 157, 162, 163, 168], "sampl": [97, 120, 121, 123, 163, 168], "sample_puls": 123, "sampler": [3, 10], "satisfi": [0, 161, 164, 167], "save": [19, 21, 34, 39, 41, 53, 55, 125, 139, 141, 147, 148, 149, 150, 161, 163, 166], "save_config": [148, 163, 168], "save_dataset_config": [146, 149], "save_dir": [139, 163, 168], "save_fil": 161, "save_method": [161, 166], "save_model_config": [146, 150], "save_state_dict": [125, 163, 168], "scalabl": 162, "scalar": [19, 137, 141], "scale": [96, 97, 110, 113, 119, 120, 123, 124, 134, 136, 141, 162, 168], "scaled_emb": [113, 136], "scatter": [123, 124], "schedul": 126, "scheduler_class": [126, 163, 168], "scheduler_config": [126, 163, 168], "scheduler_kwarg": [126, 163, 168], "schema": 163, "scheme": [107, 109, 111, 114, 161], "scientif": [0, 1, 164, 167], "scope": 160, "script": [163, 168], "search": [155, 161], "sec": 141, "second": 119, "section": 163, "see": [96, 107, 118, 120, 126, 134, 139, 160, 162, 163, 165], "seed": [120, 121, 149, 162, 163], "seen": 96, "select": [28, 36, 123, 149, 160, 163, 166], "self": [105, 120, 126, 130, 147, 152, 161, 162, 163, 166, 168], "sell": 141, "send": 134, "sensor": [100, 120, 124, 162, 163, 166, 168], "sensor_i": 166, "sensor_id": [101, 103, 104, 166], "sensor_id_column": [101, 102, 103, 104, 166], "sensor_index_nam": 100, "sensor_mask": 120, "sensor_pos_i": [104, 162, 163, 168], "sensor_pos_x": [104, 162, 163, 168], "sensor_pos_z": [104, 162, 163, 168], "sensor_position_nam": 100, "sensor_string_id": 104, "sensor_tim": 166, "sensor_x": [162, 166], "sensor_z": 166, "separ": [34, 119, 139, 163, 165], "seper": [128, 162], "seq_length": [96, 113, 136, 137], "sequenc": [83, 86, 89, 96, 97, 124, 137, 163, 168], "seri": [22, 23, 35, 37, 88, 107, 123, 128, 162, 163, 168], "serial": [161, 162], "serialis": [33, 34, 163, 168], "serv": 162, "session": [149, 150, 162, 163, 168], "set": [3, 6, 21, 23, 31, 51, 96, 97, 113, 123, 124, 125, 134, 140, 160, 161, 163, 166, 168], "set_gcd": [21, 31], "set_index": 166, "set_number_of_input": 123, "set_output_feature_nam": 123, "set_verbose_print_recurs": 125, "setangl": 51, "setdelta": 51, "setdetpo": 51, "setdm": 51, "setisnubar": 51, "setlevel": 157, "setpath": 51, "setup": [139, 165], "setuptool": 165, "sever": [163, 168], "sh": 165, "shall": 141, "shape": [19, 119, 120, 123, 137, 141, 161, 162], "share": [105, 126, 130, 163, 168], "shared_step": [105, 126, 130], "shell": 165, "shift": 49, "should": [19, 21, 34, 84, 97, 98, 100, 101, 102, 103, 104, 107, 113, 120, 121, 128, 137, 141, 147, 149, 150, 152, 160, 161, 162, 163, 165, 166, 168], "show": [139, 163], "shown": 163, "shuffl": 162, "sigmoid": 168, "sign": [51, 141], "signal": [88, 168], "signatur": [23, 37], "signific": 162, "significantli": 162, "signup": 163, "similar": [23, 37, 123, 163, 168], "similarli": [37, 161, 162, 163, 168], "simpl": [0, 93, 105, 163, 164, 167, 168], "simplecoarsen": 94, "simplest": [163, 168], "simpli": [163, 168], "simul": [35, 55, 88, 163, 166], "sinc": [88, 141, 163], "singl": [18, 51, 98, 109, 114, 124, 140, 149, 150, 161, 162, 163, 166, 168], "single_event_as_arrai": 124, "sinusoid": [96, 113, 136], "sinusoidalposemb": [95, 96], "sipm_i": 102, "sipm_id": 102, "sipm_x": 102, "sipm_z": 102, "situat": 160, "size": [96, 97, 98, 107, 109, 110, 111, 113, 114, 137, 145, 162], "sk": 51, "skip": [36, 109, 114, 163], "skip_readout": [109, 114], "sklearn": [163, 168], "sk\u0142odowska": [0, 164, 167], "slack": 163, "slice": [97, 109, 114], "small": [141, 162, 163, 168], "smaller": 161, "smooth": 160, "snippet": [163, 168], "so": [49, 51, 141, 162, 163, 165, 166, 168], "soft": 96, "softmax": 141, "softwar": [0, 51, 141, 164, 167], "solar": 51, "solut": [96, 97, 111, 113, 160], "solv": [1, 160, 168], "some": [49, 120, 124, 162, 163], "someth": [163, 168], "somewhat": 163, "sort": [120, 124], "sort_bi": 120, "sourc": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 49, 53, 55, 83, 84, 86, 88, 89, 90, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 167], "south": 111, "space": [96, 118, 119, 134], "space_coord": 119, "spacetim": 96, "spacetimeencod": [95, 96], "sparsetensor": 97, "spatial": 124, "special": [23, 88, 128, 137], "specialis": [163, 168], "specif": [0, 1, 6, 17, 19, 22, 37, 51, 84, 87, 89, 92, 94, 98, 99, 100, 101, 102, 103, 104, 107, 112, 118, 120, 123, 127, 131, 132, 133, 134, 135, 141, 160, 161, 162, 163, 164, 166, 167, 168], "specifi": [94, 124, 126, 134, 139, 162, 163, 166, 168], "speed": [88, 119, 162], "sphere": 118, "spite": 141, "splinemp": 30, "split": [0, 36, 94, 164, 167], "sqlite": [1, 3, 10, 49, 162, 163], "sqlite3": 163, "sqlite_dataset": [10, 15, 162], "sqlite_util": [3, 70], "sqlite_writ": [3, 75], "sqlitedatas": 162, "sqlitedataset": 161, "sqlitewrit": [161, 162], "squar": 141, "src": 163, "stabl": [133, 134], "stage": 139, "standalon": 128, "standard": [0, 36, 84, 101, 102, 103, 104, 107, 120, 121, 123, 124, 126, 129, 130, 134, 145, 160, 163, 164, 166, 167, 168], "standard_argu": 145, "standard_averaged_model": [1, 93], "standard_model": [1, 93, 163], "standardaveragedmodel": [93, 129], "standardaveragemodel": 129, "standardflowtask": [131, 134], "standardis": 99, "standardlearnedtask": [131, 132, 133, 134, 168], "standardmodel": [93, 105, 129, 130], "start": [31, 160, 163, 166, 168], "state": [0, 84, 107, 128, 154, 164, 167], "state_dict": [84, 88, 90, 125, 129, 154, 163], "static": [141, 160], "statist": 124, "std": 98, "std_pool": [95, 98], "std_pool_x": [95, 98], "stdout": 139, "step": [105, 126, 129, 130, 137, 139, 163, 166, 168], "still": 149, "stochast": 97, "stop": [31, 139, 145], "store": [140, 161, 162, 163, 166, 168], "str": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 49, 53, 55, 83, 84, 86, 88, 89, 90, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 111, 113, 114, 120, 121, 123, 124, 125, 126, 129, 134, 137, 139, 140, 145, 147, 148, 149, 150, 151, 152, 154, 155, 157, 161, 166], "straightforward": 162, "strategi": [163, 168], "stream": 36, "stream_handl": 157, "streamhandl": 157, "streamlin": 1, "string": [34, 49, 98, 100, 101, 120, 125, 126, 134, 147, 163, 166, 168], "string_id": [103, 166], "string_id_column": [101, 102, 103, 104, 166], "string_index_nam": 100, "string_mask": 120, "string_select": 149, "string_selection_resolv": [3, 70], "strongli": [163, 168], "structur": [105, 151, 161, 162, 163, 168], "style": 160, "sub": 163, "subclass": [0, 93, 105, 161, 162, 163, 164, 167, 168], "subev": 36, "subeventstreami3filt": [33, 36], "subject": [113, 141], "sublicens": 141, "submit": 113, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 48, 52, 54, 56, 58, 60, 68, 70, 75, 79, 82, 85, 87, 91, 93, 95, 99, 106, 116, 117, 122, 127, 131, 135, 138, 144, 146, 151], "subpackag": [1, 3, 10, 17, 20, 40, 82, 93, 116, 144], "subsampl": 162, "subsequ": 163, "subset": [97, 107, 109, 111, 114, 128, 163], "substanti": 141, "suggest": [105, 141, 163], "suit": [0, 126, 134, 163, 164, 167], "suitabl": [1, 166], "sum": [94, 98, 105, 109, 111, 114, 124, 130, 163, 168], "sum_pool": [94, 95, 98], "sum_pool_and_distribut": [95, 98], "sum_pool_x": [94, 95, 98], "summar": [88, 90, 123, 124], "summari": [123, 124], "summaris": [163, 168], "summariz": 168, "summarization_indic": 124, "super": [161, 162, 163, 168], "supervis": [130, 134, 168], "support": [0, 37, 49, 134, 160, 161, 162, 163, 164, 167], "suppos": [124, 162, 166], "sure": [51, 160, 161], "swa": 129, "swapabl": 163, "switch": [141, 163, 168], "syntax": [105, 141, 162, 163], "system": [155, 163, 168], "t": [37, 139, 141, 161, 162, 163, 166, 168], "tabl": [18, 19, 21, 39, 41, 53, 55, 100, 120, 161, 162, 163], "table_nam": 55, "table_without_index": 166, "tackl": 168, "tag": 160, "take": [37, 51, 98, 124, 128, 160, 162], "talk": 163, "target": [105, 126, 132, 134, 141, 152, 163, 168], "target_label": [105, 126, 134, 163, 168], "target_norm": 134, "target_pr": [132, 168], "task": [0, 1, 93, 105, 130, 132, 133, 141, 160, 163, 164, 167], "team": [160, 162, 163, 165, 166, 168], "technic": [0, 164, 166, 167], "techniqu": [0, 164, 167, 168], "telescop": [0, 1, 163, 164, 166, 167, 168], "tensor": [84, 94, 96, 97, 98, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 119, 123, 124, 126, 128, 129, 130, 134, 136, 137, 141, 154, 158, 162, 163, 166, 168], "term": [97, 141, 168], "termin": 163, "test": [134, 149, 156, 160, 162, 163, 168], "test_dataset": [1, 79], "test_funct": 156, "test_select": [149, 162, 163], "than": [0, 123, 134, 157, 162, 163, 164, 167, 168], "thei": [83, 86, 89, 123, 161, 162, 163, 168], "them": [0, 1, 34, 49, 84, 93, 109, 134, 162, 163, 164, 166, 167, 168], "themselv": [1, 149, 150, 163, 168], "therebi": [1, 149, 150, 163, 168], "therefor": [34, 161, 162, 163, 166, 168], "theta": 51, "theta12": 51, "theta13": 51, "theta23": 51, "theta_12": 51, "theta_13": 51, "theta_23": 51, "thi": [0, 18, 19, 21, 23, 37, 39, 41, 51, 53, 55, 85, 88, 93, 96, 98, 105, 107, 109, 113, 114, 119, 120, 121, 123, 124, 126, 128, 130, 132, 133, 134, 137, 139, 141, 147, 149, 150, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168], "thing": 163, "thoglu": [126, 134], "those": [21, 31, 162, 163], "three": [114, 124, 141, 168], "threshold": [0, 88, 164, 167], "throng": 51, "through": [0, 51, 124, 132, 133, 134, 141, 161, 163, 164, 167, 168], "throw": 161, "thu": [150, 168], "ti": 162, "time": [0, 49, 51, 94, 96, 98, 107, 119, 123, 124, 128, 133, 137, 157, 162, 163, 164, 166, 167], "time_column": 123, "time_coord": 119, "time_lik": 119, "time_like_weight": 119, "time_series_column": [107, 128], "time_window": 94, "timereconstruct": [131, 133], "tini": 163, "tito": [97, 107, 111], "to_config": 168, "to_csv": [163, 168], "to_parquet": 166, "todo": 163, "togeth": [0, 93, 118, 141, 164, 167], "token": 136, "too": [163, 168], "tool": [0, 1, 164, 167], "top": 168, "torch": [0, 93, 97, 120, 121, 125, 126, 156, 162, 163, 164, 165, 166, 167, 168], "torch_cpu": 165, "torch_geometr": [98, 137, 162, 163, 168], "torch_lightn": 168, "tort": 141, "total": [51, 124, 137, 162, 163, 166], "total_energi": [162, 163, 168], "tqdmprogressbar": 139, "track": [0, 19, 21, 25, 39, 41, 53, 55, 133, 138, 140, 160, 161, 163, 164, 167], "tradit": [0, 164, 167], "train": [0, 1, 88, 97, 105, 113, 120, 126, 129, 130, 137, 139, 140, 141, 145, 149, 150, 152, 159, 161, 162, 163, 164, 166, 167], "train_batch": [105, 129], "train_dataload": [105, 163, 168], "train_ev": 134, "train_select": [149, 162, 163], "trainabl": 150, "trainer": [105, 139, 163, 168], "trainer_kwarg": 105, "training_config": [144, 146, 163, 168], "training_example_data_sqlit": [145, 162, 163, 168], "training_step": [105, 129], "trainingconfig": [146, 152, 163, 168], "transform": [1, 49, 93, 97, 98, 106, 111, 113, 128, 134, 136, 163, 168], "transform_infer": [134, 163, 168], "transform_prediction_and_target": [134, 163, 168], "transform_support": [134, 163, 168], "transform_target": [134, 163, 168], "transit": 154, "transpar": [149, 150, 160, 163, 168], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [146, 151], "treat": [107, 128], "tree": [23, 163], "tri": [23, 37], "triangl": 104, "trident": 104, "trident1211": [99, 104], "trigger": [23, 42, 162, 163, 168], "trivial": [37, 134], "true": [36, 51, 88, 107, 109, 111, 113, 114, 120, 123, 125, 139, 141, 155, 161, 162, 163, 168], "trust": [125, 163, 168], "truth": [22, 31, 55, 120, 134, 149, 162, 166, 168], "truth_dict": 120, "truth_label": 162, "truth_tabl": [149, 162, 163], "truthdata": 53, "try": [37, 161], "tum": [25, 32], "tupl": [35, 37, 49, 97, 107, 109, 111, 114, 124, 134, 137, 145, 154], "turn": [124, 160], "tutorial_output": [163, 168], "two": [109, 139, 141, 161, 162, 163, 166], "txt": 165, "type": [0, 20, 21, 31, 33, 34, 35, 49, 53, 55, 83, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167], "typic": [0, 34, 128, 162, 164, 166, 167], "u": [162, 166], "ultra": 162, "unaccur": 141, "unambigu": [149, 150], "unbatch_edge_index": [93, 94], "uncertainti": [133, 163, 168], "uncompress": 162, "under": [0, 163, 164, 166, 167, 168], "unfamiliar": 168, "union": [0, 23, 34, 37, 83, 84, 86, 88, 89, 90, 94, 97, 98, 105, 107, 109, 114, 120, 121, 124, 126, 130, 134, 149, 152, 155, 161, 164, 166, 167], "uniqu": [49, 123, 124, 137, 149, 163, 166, 168], "unit": [0, 119, 156, 160, 164, 167], "univers": 111, "unlik": 162, "unscal": 168, "untransform": 132, "up": [0, 51, 88, 160, 164, 167], "updat": [114, 128, 129, 137, 139, 163, 165, 168], "upgrad": [22, 101, 163, 165], "upon": [126, 168], "us": [0, 1, 2, 18, 19, 21, 26, 31, 33, 34, 39, 41, 51, 53, 55, 84, 86, 88, 90, 93, 96, 97, 98, 100, 105, 107, 109, 110, 111, 113, 114, 118, 120, 121, 123, 124, 125, 126, 128, 131, 132, 133, 134, 136, 137, 139, 140, 141, 144, 145, 146, 149, 150, 151, 156, 157, 160, 161, 164, 165, 166, 167], "usabl": [0, 164, 167], "usag": [126, 134, 145], "use_global_featur": [107, 111], "use_oscprob": 51, "use_post_processing_lay": [107, 111], "user": [0, 93, 105, 139, 162, 163, 164, 165, 167, 168], "usual": 162, "util": [1, 3, 17, 20, 34, 35, 36, 37, 40, 49, 93, 116, 138, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 165, 168], "utils_osc": [40, 48, 51], "v": 97, "v1": 165, "v4": 165, "val_batch": [105, 129], "val_dataload": 105, "valid": [37, 105, 126, 129, 130, 134, 139, 141, 145, 147, 152, 162, 163, 168], "validate_task": [105, 126, 130], "validation_step": [105, 129], "validationerror": [147, 152], "valu": [31, 34, 49, 51, 97, 98, 114, 119, 120, 121, 124, 134, 137, 140, 141, 145, 147, 168], "valueerror": [23, 125, 126], "var": 133, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 109, 123, 124, 137, 157, 161, 166, 168], "varieti": 163, "variou": [1, 85, 163], "vast": [130, 134], "vector": [49, 51, 94, 97, 98, 141, 161, 168], "verbos": [105, 130, 139], "verbose_print": 125, "veri": [162, 163, 168], "verifi": [105, 126, 130], "versa": 139, "version": [98, 124, 134, 139, 160, 163, 168], "vertex": [133, 163], "vertexreconstruct": [131, 133], "vertic": 51, "viabl": 166, "vice": 139, "virtual": 165, "visibl": 133, "visible_inelast": 133, "visible_inelasticity_pr": 133, "visibleinelasticityreconstruct": [131, 133], "visit": 166, "vmf": 133, "vmf_loss": 141, "vmfs_factor": 141, "volum": 31, "von": 141, "vonmisesfisher2dloss": [138, 141, 163, 168], "vonmisesfisher3dloss": [138, 141], "vonmisesfisherloss": [138, 141], "w": [163, 168], "w2": 51, "wa": [0, 113, 162, 163, 164, 166, 167, 168], "wai": [37, 130, 160, 163, 166, 168], "wandb": [163, 168], "wandb_dir": [163, 168], "wandb_logg": [163, 168], "wandblogg": [163, 168], "want": [162, 163, 165, 166, 168], "warn": [157, 163], "warning_onc": [157, 163], "warranti": 141, "waterdemo81": [99, 104], "wb": 161, "we": [34, 37, 124, 126, 160, 163, 165, 166, 168], "weight": [51, 88, 90, 97, 113, 120, 124, 134, 141, 150, 163, 168], "weight_events_oscprob": [40, 48], "weight_fit": [1, 138], "well": [160, 163, 168], "were": 51, "wether": 114, "what": [1, 96, 120, 160, 163, 168], "whatev": 163, "wheel": 165, "when": [0, 34, 36, 88, 97, 107, 109, 111, 114, 128, 140, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168], "whenev": 165, "where": [19, 120, 121, 123, 124, 128, 137, 140, 161, 162, 163, 166, 168], "wherea": 162, "whether": [35, 37, 96, 97, 107, 109, 111, 113, 114, 125, 136, 141, 151, 155, 156, 163], "which": [0, 19, 21, 22, 31, 35, 39, 41, 51, 53, 55, 83, 85, 86, 89, 94, 98, 109, 114, 120, 121, 124, 125, 126, 132, 134, 137, 141, 145, 161, 162, 163, 164, 167, 168], "while": [0, 23, 105, 139, 160, 162, 164, 167], "who": [154, 163, 168], "whom": 141, "whose": 88, "wide": [126, 168], "willing": [162, 166], "window": [94, 162, 163], "wise": 98, "wish": [0, 83, 160, 164, 167], "with_standard_argu": 145, "within": [31, 49, 94, 97, 98, 109, 114, 118, 163, 168], "without": [1, 118, 121, 123, 141, 162, 165], "work": [0, 35, 107, 160, 161, 162, 163, 164, 167, 168], "worker": [6, 83, 86, 89, 145, 157], "workflow": [0, 164, 167], "would": [160, 162, 163, 166, 168], "wrap": [139, 149, 150], "write": [88, 90, 161, 163, 168], "writer": [1, 3, 166], "written": [83, 161], "wrt": 134, "www": [51, 163], "x": [31, 96, 97, 98, 101, 119, 123, 124, 128, 134, 137, 141, 162, 163, 166, 168], "x8": 162, "x_i": 97, "x_j": 97, "xyz": [100, 101, 102, 103, 104, 123, 124, 162, 166], "xyz_coord": 137, "xyz_dir_to_zen_az": [48, 49], "xyzt": 137, "y": [31, 96, 101, 119, 137], "yaml": [147, 148, 163], "yet": [51, 124], "yield": [0, 109, 114, 141, 164, 167], "yml": [145, 149, 150, 162, 163, 168], "you": [83, 96, 126, 149, 150, 160, 162, 163, 165, 166, 168], "your": [121, 126, 160, 161, 162, 163, 165], "yourself": 160, "z": [31, 51, 96, 101, 119, 123, 124, 137], "z_name": 123, "z_offset": [123, 124], "z_scale": [123, 124], "zenith": [49, 51, 133, 140, 163, 168], "zenith_kappa": 133, "zenith_kei": 140, "zenith_pr": 133, "zenithreconstruct": [131, 133], "zenithreconstructionwithkappa": [131, 133, 163, 168], "zero": [49, 51], "zineb": 51, "zip": 51, "\u00f8rs\u00f8e": [0, 164, 167]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "km3net", "km3netextractor", "km3netpulseextractor", "km3netrootextractor", "km3netrootpulseextractor", "km3netroottriggpulseextractor", "km3netroottruthextractor", "km3nettruthextractor", "utilities", "km3net_utilities", "utils_osc", "weight_events_oscprob", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "km3netreader", "km3netrootreader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "orca", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "particlenet", "transformer", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 166, "2": 166, "In": [162, 168], "The": [163, 168], "To": 160, "acknowledg": 0, "ad": [162, 163, 166, 168], "advanc": 163, "api": 1, "appendix": 163, "appli": 166, "argpars": 145, "backbon": 168, "base_config": 147, "befor": 166, "callback": 139, "checkpoint": 168, "choos": 162, "class": [163, 166, 168], "classif": 132, "cleaning_modul": 88, "coarsen": 94, "code": 160, "collect": 34, "combin": [162, 163], "combine_extractor": 18, "compon": 95, "config": 146, "configur": 148, "constant": [2, 4], "content": 163, "contribut": 160, "convent": 160, "convers": 161, "convnet": 108, "creat": 163, "curated_datamodul": 5, "custom": [162, 163], "cvmf": 165, "data": [3, 161, 166], "dataclass": 6, "dataconfig": 163, "dataconvert": [7, 59, 161], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 79, 162, 163], "dataset_config": 149, "datasetconfig": 163, "decor": 153, "deploy": [82, 83], "deployment_modul": 84, "deprecated_method": [57, 69, 86], "deprecation_tool": 154, "detector": [99, 100, 166], "dynedg": 109, "dynedge_jinst": 110, "dynedge_kaggle_tito": 111, "easy_model": 105, "edg": [117, 118], "embed": 96, "energi": 168, "event": 162, "exampl": [163, 166, 168], "except": [91, 92], "experi": [166, 168], "extractor": [17, 19, 161, 166], "filesi": 155, "frame": 35, "function": 163, "geometri": 166, "github": 160, "gnn": [106, 112], "graph": [116, 121], "graph_definit": 120, "graphdefinit": 168, "graphnet": 163, "graphnet_file_read": 61, "graphnet_writ": 76, "graphnetfileread": 166, "graphnetgraphnet": [160, 161, 162, 164, 166, 167, 168], "h5_extractor": 53, "i3_filt": 36, "i3deploy": 89, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 85, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 62, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 87, 101, 165], "icemix": 113, "implement": [162, 166], "import": 156, "index": 166, "inference_modul": 90, "instal": 165, "instanti": 168, "integr": 166, "intern": 38, "internal_parquet_read": 63, "introduct": 163, "iseecub": 136, "issu": 160, "km3net": 40, "km3net_util": 49, "km3netextractor": 41, "km3netpulseextractor": 42, "km3netread": 64, "km3netrootextractor": 43, "km3netrootpulseextractor": 44, "km3netrootread": 65, "km3netroottriggpulseextractor": 45, "km3netroottruthextractor": 46, "km3nettruthextractor": 47, "label": [140, 162, 163], "layer": 97, "liquido": [52, 102], "liquido_read": 66, "load": 168, "log": 157, "loss_funct": 141, "math": 158, "minkowski": 119, "model": [93, 125, 163, 168], "model_config": 150, "modelconfig": [163, 168], "multi": 166, "multipl": [162, 163], "new": [162, 166], "node": [122, 123], "node_rnn": 128, "normalizing_flow": 126, "orca": 103, "overview": 163, "own": [166, 168], "parquet": [12, 56], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 71, "parquet_writ": 77, "parquetdataset": 162, "pars": 151, "particlenet": 114, "pool": 98, "pre_configur": 58, "prometheu": [54, 104], "prometheus_dataset": 80, "prometheus_extractor": 55, "prometheus_read": 67, "pull": 160, "qualiti": 160, "quick": 165, "random": 72, "reader": [60, 161], "reconstruct": [133, 168], "reproduc": 163, "request": 160, "rnn": 127, "rnn_tito": 107, "sampler": 14, "save": 168, "select": 162, "sqlite": [15, 68], "sqlite_dataset": 16, "sqlite_util": 73, "sqlite_writ": 78, "sqlitedataset": [162, 163], "src": 159, "standard_averaged_model": 129, "standard_model": 130, "standardmodel": [163, 168], "start": 165, "state_dict": 168, "string_selection_resolv": 74, "subset": 162, "support": 166, "syntax": 168, "tabl": 166, "task": [131, 134, 168], "test_dataset": 81, "track": 168, "train": [138, 168], "training_config": 152, "transform": [115, 135], "truth": 163, "tutori": 163, "type": 37, "us": [162, 163, 168], "usag": 0, "util": [33, 48, 70, 124, 137, 142, 144], "utils_osc": 50, "v": 162, "weight_events_oscprob": 51, "weight_fit": 143, "write": 166, "writer": [75, 161], "your": [166, 168]}})