Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[158, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[158, "implementing-a-detector-class"]], "API": [[1, null]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[160, "adding-your-own-model"]], "Adding custom Labels": [[154, "adding-custom-labels"]], "Adding custom truth labels": [[155, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[155, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[155, "appendix"]], "Choosing a subset of events using selection": [[154, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[152, "code-quality"]], "Combining Multiple Datasets": [[154, "combining-multiple-datasets"], [155, "combining-multiple-datasets"]], "Contents": [[155, "contents"]], "Contributing To GraphNeTgraphnet": [[152, null]], "Conventions": [[152, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[155, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[155, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[153, null]], "DataConverter": [[153, "dataconverter"]], "Dataset": [[154, "dataset"]], "Datasets In GraphNeTgraphnet": [[154, null]], "Example DataConfig": [[155, "example-dataconfig"]], "Example ModelConfig": [[155, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[158, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[160, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[160, "experiment-tracking"]], "Extractors": [[153, "extractors"]], "GitHub issues": [[152, "github-issues"]], "GraphDefinition, backbone & Task": [[160, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[155, null]], "GraphNeTgraphnet": [[156, null], [159, null]], "Implementing a new Dataset": [[154, "implementing-a-new-dataset"]], "Installation": [[157, null]], "Installation in CVMFS (IceCube)": [[157, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[160, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[158, null]], "Introduction": [[155, "introduction"]], "Model.save": [[160, "model-save"]], "ModelConfig and state_dict": [[160, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[160, null]], "Overview of GraphNeT": [[155, "overview-of-graphnet"]], "Pull requests": [[152, "pull-requests"]], "Quick Start": [[157, "quick-start"]], "RNN_tito": [[100, null]], "Readers": [[153, "readers"]], "SQLiteDataset & ParquetDataset": [[154, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[154, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[160, "saving-loading-and-checkpointing-models"]], "The Model class": [[155, "the-model-class"], [160, "the-model-class"]], "The StandardModel class": [[155, "the-standardmodel-class"], [160, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[160, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[160, "using-checkpoints"]], "Writers": [[153, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[158, "writing-your-own-extractor-and-graphnetfilereader"]], "argparse": [[137, null]], "base_config": [[139, null]], "callbacks": [[131, null]], "classification": [[124, null]], "cleaning_module": [[81, null]], "coarsening": [[87, null]], "collections": [[34, null]], "combine_extractors": [[18, null]], "components": [[88, null]], "config": [[138, null]], "configurable": [[140, null]], "constants": [[2, null], [4, null]], "convnet": [[101, null]], "curated_datamodule": [[5, null]], "data": [[3, null]], "dataclasses": [[6, null]], "dataconverter": [[7, null]], "dataconverters": [[53, null]], "dataloader": [[8, null]], "datamodule": [[9, null]], "dataset": [[10, null], [11, null]], "dataset_config": [[141, null]], "datasets": [[72, null]], "decorators": [[145, null]], "deployer": [[76, null]], "deployment": [[75, null]], "deployment_module": [[77, null]], "deprecated_methods": [[51, null], [62, null], [79, null]], "deprecation_tools": [[146, null]], "detector": [[92, null], [93, null]], "dynedge": [[102, null]], "dynedge_jinst": [[103, null]], "dynedge_kaggle_tito": [[104, null]], "easy_model": [[98, null]], "edges": [[109, null], [110, null]], "embedding": [[89, null]], "exceptions": [[84, null], [85, null]], "extractor": [[19, null]], "extractors": [[17, null]], "filesys": [[147, null]], "frames": [[35, null]], "gnn": [[99, null], [105, null]], "graph_definition": [[112, null]], "graphnet_file_reader": [[55, null]], "graphnet_writer": [[69, null]], "graphs": [[108, null], [113, null]], "h5_extractor": [[47, null]], "i3_filters": [[36, null]], "i3deployer": [[82, null]], "i3extractor": [[21, null]], "i3featureextractor": [[22, null]], "i3genericextractor": [[23, null]], "i3hybridrecoextractor": [[24, null]], "i3modules": [[78, null]], "i3ntmuonlabelsextractor": [[25, null]], "i3particleextractor": [[26, null]], "i3pisaextractor": [[27, null]], "i3quesoextractor": [[28, null]], "i3reader": [[56, null]], "i3retroextractor": [[29, null]], "i3splinempeextractor": [[30, null]], "i3truthextractor": [[31, null]], "i3tumextractor": [[32, null]], "icecube": [[20, null], [80, null], [94, null]], "icemix": [[106, null]], "imports": [[148, null]], "inference_module": [[83, null]], "internal": [[38, null]], "internal_parquet_reader": [[57, null]], "iseecube": [[128, null]], "km3net": [[40, null]], "km3net_utilities": [[45, null]], "km3netextractor": [[41, null]], "km3netpulseextractor": [[42, null]], "km3netreader": [[58, null]], "km3nettruthextractor": [[43, null]], "labels": [[132, null]], "layers": [[90, null]], "liquido": [[46, null], [95, null]], "liquido_reader": [[59, null]], "logging": [[149, null]], "loss_functions": [[133, null]], "maths": [[150, null]], "minkowski": [[111, null]], "model": [[117, null]], "model_config": [[142, null]], "models": [[86, null]], "node_rnn": [[120, null]], "nodes": [[114, null], [115, null]], "normalizing_flow": [[118, null]], "orca": [[96, null]], "parquet": [[12, null], [50, null]], "parquet_dataset": [[13, null]], "parquet_extractor": [[39, null]], "parquet_to_sqlite": [[64, null]], "parquet_writer": [[70, null]], "parsing": [[143, null]], "particlenet": [[107, null]], "pool": [[91, null]], "pre_configured": [[52, null]], "prometheus": [[48, null], [97, null]], "prometheus_datasets": [[73, null]], "prometheus_extractor": [[49, null]], "prometheus_reader": [[60, null]], "random": [[65, null]], "readers": [[54, null]], "reconstruction": [[125, null]], "rnn": [[119, null]], "samplers": [[14, null]], "sqlite": [[15, null], [61, null]], "sqlite_dataset": [[16, null]], "sqlite_utilities": [[66, null]], "sqlite_writer": [[71, null]], "src": [[151, null]], "standard_averaged_model": [[121, null]], "standard_model": [[122, null]], "string_selection_resolver": [[67, null]], "task": [[123, null], [126, null]], "test_dataset": [[74, null]], "training": [[130, null]], "training_config": [[144, null]], "transformer": [[127, null]], "types": [[37, null]], "utilities": [[33, null], [44, null], [63, null], [136, null]], "utils": [[116, null], [129, null], [134, null]], "weight_fitting": [[135, null]], "writers": [[68, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.samplers", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.km3net", "api/graphnet.data.extractors.km3net.km3netextractor", "api/graphnet.data.extractors.km3net.km3netpulseextractor", "api/graphnet.data.extractors.km3net.km3nettruthextractor", "api/graphnet.data.extractors.km3net.utilities", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.km3netreader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.orca", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.normalizing_flow", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.samplers.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.km3net.rst", "api/graphnet.data.extractors.km3net.km3netextractor.rst", "api/graphnet.data.extractors.km3net.km3netpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3nettruthextractor.rst", "api/graphnet.data.extractors.km3net.utilities.rst", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.km3netreader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.orca.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.normalizing_flow.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"add_charge_threshold_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_charge_threshold_summary", false]], "add_counts() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_counts", false]], "add_mean() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_mean", false]], "add_percentile_summary() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_percentile_summary", false]], "add_std() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_std", false]], "add_sum_charge() (graphnet.models.graphs.utils.cluster_and_pad method)": [[116, "graphnet.models.graphs.utils.cluster_and_pad.add_sum_charge", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[137, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[142, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "assert_no_uint_values() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.assert_no_uint_values", false]], "attention_rel (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.AttributeCoarsening", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[133, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[139, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "block (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_and_pad (class in graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.cluster_and_pad", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.Coarsening", false]], "columnmissingexception": [[85, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[18, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[126, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[126, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[111, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[140, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[140, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[137, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[101, "graphnet.models.gnn.convnet.ConvNet", false]], "create_unique_id_filetype() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.create_unique_id_filetype", false]], "creating_time_zero() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.creating_time_zero", false]], "critical() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.debug", false]], "deepice (class in graphnet.models.gnn.icemix)": [[106, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.standardflowtask property)": [[126, "graphnet.models.task.task.StandardFlowTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[76, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[77, "graphnet.deployment.deployment_module.DeploymentModule", false]], "detector (class in graphnet.models.detector.detector)": [[93, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[102, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[103, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[104, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[98, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[110, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[113, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[150, "graphnet.utilities.maths.eps_like", false]], "error() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[110, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[90, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.extra_repr_recursive", false]], "extractor (class in graphnet.data.extractors.extractor)": [[19, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[93, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[94, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[94, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.orca.ivanorca115 method)": [[96, "graphnet.models.detector.orca.IVANORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca115 method)": [[96, "graphnet.models.detector.orca.ORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca6 method)": [[96, "graphnet.models.detector.orca.ORCA6.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[97, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[97, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[97, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[97, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[149, "graphnet.utilities.logging.RepeatFilter.filter", false]], "filter_none_nan() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.filter_None_NaN", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[87, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[89, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[89, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[89, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[90, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[90, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[90, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[90, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[90, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[90, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[90, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[93, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[101, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[102, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[103, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[104, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[105, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[106, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[107, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[100, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[110, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[112, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[115, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[126, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[126, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[128, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[133, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[133, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.models.model.model class method)": [[117, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable method)": [[140, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.orca.ivanorca115 attribute)": [[96, "graphnet.models.detector.orca.IVANORCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[139, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_fields() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.get_fields", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[131, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[35, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "gnn (class in graphnet.models.gnn.gnn)": [[105, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[112, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.extractors": [[17, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[18, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[19, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[20, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[21, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[33, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[34, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[35, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[37, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[38, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[39, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.km3net.km3netextractor": [[41, "module-graphnet.data.extractors.km3net.km3netextractor", false]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false]], "graphnet.data.extractors.km3net.utilities": [[44, "module-graphnet.data.extractors.km3net.utilities", false]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[45, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false]], "graphnet.data.extractors.liquido": [[46, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[47, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[48, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[49, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.deployment.deployer": [[76, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[77, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.i3modules": [[78, "module-graphnet.deployment.i3modules", false]], "graphnet.deployment.i3modules.deprecated_methods": [[79, "module-graphnet.deployment.i3modules.deprecated_methods", false]], "graphnet.deployment.icecube": [[80, "module-graphnet.deployment.icecube", false]], "graphnet.deployment.icecube.cleaning_module": [[81, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.i3deployer": [[82, "module-graphnet.deployment.icecube.i3deployer", false]], "graphnet.deployment.icecube.inference_module": [[83, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[84, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[85, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[86, "module-graphnet.models", false]], "graphnet.models.coarsening": [[87, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[88, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[89, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[90, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[91, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[92, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[93, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[94, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[95, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.orca": [[96, "module-graphnet.models.detector.orca", false]], "graphnet.models.detector.prometheus": [[97, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[98, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn.convnet": [[101, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[102, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[103, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[104, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[105, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[106, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[107, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[100, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[108, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[109, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[110, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[111, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[112, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[113, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[114, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[115, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[116, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[117, "module-graphnet.models.model", false]], "graphnet.models.normalizing_flow": [[118, "module-graphnet.models.normalizing_flow", false]], "graphnet.models.rnn": [[119, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[120, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[121, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[122, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[123, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[124, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[125, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[126, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[127, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[128, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[129, "module-graphnet.models.utils", false]], "graphnet.training": [[130, "module-graphnet.training", false]], "graphnet.training.callbacks": [[131, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[132, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[133, "module-graphnet.training.loss_functions", false]], "graphnet.utilities": [[136, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[137, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[138, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[139, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[140, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[141, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[142, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[143, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[144, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[145, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[146, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[147, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[148, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[149, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[150, "module-graphnet.utilities.maths", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphneti3deployer (class in graphnet.deployment.i3modules.deprecated_methods)": [[79, "graphnet.deployment.i3modules.deprecated_methods.GraphNeTI3Deployer", false]], "group_by() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[47, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_icecube_package", false]], "has_jammy_flows_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_jammy_flows_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3deployer (class in graphnet.deployment.icecube.i3deployer)": [[82, "graphnet.deployment.icecube.i3deployer.I3Deployer", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[24, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[23, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[83, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[25, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[26, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[27, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[81, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[22, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[28, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[29, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[30, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[32, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[115, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[126, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.info", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[147, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[37, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[128, "graphnet.models.transformer.iseecube.ISeeCube", false]], "ivanorca115 (class in graphnet.models.detector.orca)": [[96, "graphnet.models.detector.orca.IVANORCA115", false]], "key (graphnet.training.labels.label property)": [[132, "graphnet.training.labels.Label.key", false]], "km3netextractor (class in graphnet.data.extractors.km3net.km3netextractor)": [[41, "graphnet.data.extractors.km3net.km3netextractor.KM3NeTExtractor", false]], "km3netfullpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTFullPulseExtractor", false]], "km3netpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTPulseExtractor", false]], "km3nettriggpulseextractor (class in graphnet.data.extractors.km3net.km3netpulseextractor)": [[42, "graphnet.data.extractors.km3net.km3netpulseextractor.KM3NeTTriggPulseExtractor", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[129, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[110, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[113, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[116, "graphnet.models.graphs.utils.lex_sort", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[95, "graphnet.models.detector.liquido.LiquidO_v1", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[117, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[139, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_state_dict() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[149, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.LossFunction", false]], "maeloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.MAELoss", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[111, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[90, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[117, "graphnet.models.model.Model", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[139, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[142, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [6, "module-graphnet.data.dataclasses", false], [17, "module-graphnet.data.extractors", false], [18, "module-graphnet.data.extractors.combine_extractors", false], [19, "module-graphnet.data.extractors.extractor", false], [20, "module-graphnet.data.extractors.icecube", false], [21, "module-graphnet.data.extractors.icecube.i3extractor", false], [22, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [23, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [24, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [25, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [26, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [27, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [28, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [29, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [30, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [31, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [32, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [33, "module-graphnet.data.extractors.icecube.utilities", false], [34, "module-graphnet.data.extractors.icecube.utilities.collections", false], [35, "module-graphnet.data.extractors.icecube.utilities.frames", false], [36, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [37, "module-graphnet.data.extractors.icecube.utilities.types", false], [38, "module-graphnet.data.extractors.internal", false], [39, "module-graphnet.data.extractors.internal.parquet_extractor", false], [41, "module-graphnet.data.extractors.km3net.km3netextractor", false], [42, "module-graphnet.data.extractors.km3net.km3netpulseextractor", false], [44, "module-graphnet.data.extractors.km3net.utilities", false], [45, "module-graphnet.data.extractors.km3net.utilities.km3net_utilities", false], [46, "module-graphnet.data.extractors.liquido", false], [47, "module-graphnet.data.extractors.liquido.h5_extractor", false], [48, "module-graphnet.data.extractors.prometheus", false], [49, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [76, "module-graphnet.deployment.deployer", false], [77, "module-graphnet.deployment.deployment_module", false], [78, "module-graphnet.deployment.i3modules", false], [79, "module-graphnet.deployment.i3modules.deprecated_methods", false], [80, "module-graphnet.deployment.icecube", false], [81, "module-graphnet.deployment.icecube.cleaning_module", false], [82, "module-graphnet.deployment.icecube.i3deployer", false], [83, "module-graphnet.deployment.icecube.inference_module", false], [84, "module-graphnet.exceptions", false], [85, "module-graphnet.exceptions.exceptions", false], [86, "module-graphnet.models", false], [87, "module-graphnet.models.coarsening", false], [88, "module-graphnet.models.components", false], [89, "module-graphnet.models.components.embedding", false], [90, "module-graphnet.models.components.layers", false], [91, "module-graphnet.models.components.pool", false], [92, "module-graphnet.models.detector", false], [93, "module-graphnet.models.detector.detector", false], [94, "module-graphnet.models.detector.icecube", false], [95, "module-graphnet.models.detector.liquido", false], [96, "module-graphnet.models.detector.orca", false], [97, "module-graphnet.models.detector.prometheus", false], [98, "module-graphnet.models.easy_model", false], [100, "module-graphnet.models.gnn.RNN_tito", false], [101, "module-graphnet.models.gnn.convnet", false], [102, "module-graphnet.models.gnn.dynedge", false], [103, "module-graphnet.models.gnn.dynedge_jinst", false], [104, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [105, "module-graphnet.models.gnn.gnn", false], [106, "module-graphnet.models.gnn.icemix", false], [107, "module-graphnet.models.gnn.particlenet", false], [108, "module-graphnet.models.graphs", false], [109, "module-graphnet.models.graphs.edges", false], [110, "module-graphnet.models.graphs.edges.edges", false], [111, "module-graphnet.models.graphs.edges.minkowski", false], [112, "module-graphnet.models.graphs.graph_definition", false], [113, "module-graphnet.models.graphs.graphs", false], [114, "module-graphnet.models.graphs.nodes", false], [115, "module-graphnet.models.graphs.nodes.nodes", false], [116, "module-graphnet.models.graphs.utils", false], [117, "module-graphnet.models.model", false], [118, "module-graphnet.models.normalizing_flow", false], [119, "module-graphnet.models.rnn", false], [120, "module-graphnet.models.rnn.node_rnn", false], [121, "module-graphnet.models.standard_averaged_model", false], [122, "module-graphnet.models.standard_model", false], [123, "module-graphnet.models.task", false], [124, "module-graphnet.models.task.classification", false], [125, "module-graphnet.models.task.reconstruction", false], [126, "module-graphnet.models.task.task", false], [127, "module-graphnet.models.transformer", false], [128, "module-graphnet.models.transformer.iseecube", false], [129, "module-graphnet.models.utils", false], [130, "module-graphnet.training", false], [131, "module-graphnet.training.callbacks", false], [132, "module-graphnet.training.labels", false], [133, "module-graphnet.training.loss_functions", false], [136, "module-graphnet.utilities", false], [137, "module-graphnet.utilities.argparse", false], [138, "module-graphnet.utilities.config", false], [139, "module-graphnet.utilities.config.base_config", false], [140, "module-graphnet.utilities.config.configurable", false], [141, "module-graphnet.utilities.config.dataset_config", false], [142, "module-graphnet.utilities.config.model_config", false], [143, "module-graphnet.utilities.config.parsing", false], [144, "module-graphnet.utilities.config.training_config", false], [145, "module-graphnet.utilities.decorators", false], [146, "module-graphnet.utilities.deprecation_tools", false], [147, "module-graphnet.utilities.filesys", false], [148, "module-graphnet.utilities.imports", false], [149, "module-graphnet.utilities.logging", false], [150, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[124, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[19, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[105, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[124, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[125, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.visibleinelasticityreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[126, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[126, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[126, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[126, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[126, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[105, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[115, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[149, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[106, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[120, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[115, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[115, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[115, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "normalizingflow (class in graphnet.models.normalizing_flow)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[131, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[137, "graphnet.utilities.argparse.Options", false]], "orca115 (class in graphnet.models.detector.orca)": [[96, "graphnet.models.detector.orca.ORCA115", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "orca6 (class in graphnet.models.detector.orca)": [[96, "graphnet.models.detector.orca.ORCA6", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[39, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[107, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[115, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[137, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[98, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "progressbar (class in graphnet.training.callbacks)": [[131, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[49, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[110, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[87, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[146, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[149, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[148, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[90, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "rmseloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[100, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[76, "graphnet.deployment.deployer.Deployer.run", false]], "save() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[140, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[141, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[142, "graphnet.utilities.config.model_config.save_model_config", false]], "save_state_dict() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.save_state_dict", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[96, "graphnet.models.detector.orca.IVANORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[21, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_gcd() (graphnet.data.extractors.icecube.i3truthextractor.i3truthextractor method)": [[31, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[115, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[115, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[117, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[131, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[89, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[137, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[122, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[149, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.ivanorca115 attribute)": [[96, "graphnet.models.detector.orca.IVANORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[93, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "subeventstreami3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[36, "graphnet.data.extractors.icecube.utilities.i3_filters.SubEventStreamI3Filter", false]], "sum_pool() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[91, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[144, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[98, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[126, "graphnet.models.task.task.Task", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[132, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.train", false]], "train_eval() (graphnet.models.task.task.task method)": [[126, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[144, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[34, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[143, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[141, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[87, "graphnet.models.coarsening.unbatch_edge_index", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.normalizing_flow.normalizingflow method)": [[118, "graphnet.models.normalizing_flow.NormalizingFlow.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[122, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[98, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[121, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[117, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "visibleinelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[133, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[149, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[97, "graphnet.models.detector.prometheus.WaterDemo81", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[137, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[94, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[94, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[94, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[95, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.orca.ivanorca115 attribute)": [[96, "graphnet.models.detector.orca.IVANORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca115 attribute)": [[96, "graphnet.models.detector.orca.ORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca6 attribute)": [[96, "graphnet.models.detector.orca.ORCA6.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[97, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[97, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[97, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[97, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[97, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[97, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[97, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[97, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[97, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "xyz_dir_to_zen_az() (in module graphnet.data.extractors.km3net.utilities.km3net_utilities)": [[45, "graphnet.data.extractors.km3net.utilities.km3net_utilities.xyz_dir_to_zen_az", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[125, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [84, 0, 0, "-", "exceptions"], [86, 0, 0, "-", "models"], [130, 0, 0, "-", "training"], [136, 0, 0, "-", "utilities"]], "graphnet.data": [[6, 0, 0, "-", "dataclasses"], [17, 0, 0, "-", "extractors"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.extractors": [[18, 0, 0, "-", "combine_extractors"], [19, 0, 0, "-", "extractor"], [20, 0, 0, "-", "icecube"], [38, 0, 0, "-", "internal"], [46, 0, 0, "-", "liquido"], [48, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[18, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[19, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[19, 3, 1, "", "name"]], "graphnet.data.extractors.icecube": [[21, 0, 0, "-", "i3extractor"], [22, 0, 0, "-", "i3featureextractor"], [23, 0, 0, "-", "i3genericextractor"], [24, 0, 0, "-", "i3hybridrecoextractor"], [25, 0, 0, "-", "i3ntmuonlabelsextractor"], [26, 0, 0, "-", "i3particleextractor"], [27, 0, 0, "-", "i3pisaextractor"], [28, 0, 0, "-", "i3quesoextractor"], [29, 0, 0, "-", "i3retroextractor"], [30, 0, 0, "-", "i3splinempeextractor"], [31, 0, 0, "-", "i3truthextractor"], [32, 0, 0, "-", "i3tumextractor"], [33, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[21, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[21, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[22, 1, 1, "", "I3FeatureExtractor"], [22, 1, 1, "", "I3FeatureExtractorIceCube86"], [22, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [22, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [22, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[23, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[24, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[25, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[26, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[27, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[28, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[29, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[30, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[31, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor": [[31, 4, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3tumextractor": [[32, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[34, 0, 0, "-", "collections"], [35, 0, 0, "-", "frames"], [36, 0, 0, "-", "i3_filters"], [37, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[34, 5, 1, "", "flatten_nested_dictionary"], [34, 5, 1, "", "serialise"], [34, 5, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[35, 5, 1, "", "frame_is_montecarlo"], [35, 5, 1, "", "frame_is_noise"], [35, 5, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[36, 1, 1, "", "I3Filter"], [36, 1, 1, "", "I3FilterMask"], [36, 1, 1, "", "NullSplitI3Filter"], [36, 1, 1, "", "SubEventStreamI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[37, 5, 1, "", "break_cyclic_recursion"], [37, 5, 1, "", "cast_object_to_pure_python"], [37, 5, 1, "", "cast_pulse_series_to_pure_python"], [37, 5, 1, "", "get_member_variables"], [37, 5, 1, "", "is_boost_class"], [37, 5, 1, "", "is_boost_enum"], [37, 5, 1, "", "is_icecube_class"], [37, 5, 1, "", "is_method"], [37, 5, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[39, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[39, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.km3net": [[41, 0, 0, "-", "km3netextractor"], [42, 0, 0, "-", "km3netpulseextractor"], [44, 0, 0, "-", "utilities"]], "graphnet.data.extractors.km3net.km3netextractor": [[41, 1, 1, "", "KM3NeTExtractor"]], "graphnet.data.extractors.km3net.km3netpulseextractor": [[42, 1, 1, "", "KM3NeTFullPulseExtractor"], [42, 1, 1, "", "KM3NeTPulseExtractor"], [42, 1, 1, "", "KM3NeTTriggPulseExtractor"]], "graphnet.data.extractors.km3net.utilities": [[45, 0, 0, "-", "km3net_utilities"]], "graphnet.data.extractors.km3net.utilities.km3net_utilities": [[45, 5, 1, "", "assert_no_uint_values"], [45, 5, 1, "", "create_unique_id_filetype"], [45, 5, 1, "", "creating_time_zero"], [45, 5, 1, "", "filter_None_NaN"], [45, 5, 1, "", "xyz_dir_to_zen_az"]], "graphnet.data.extractors.liquido": [[47, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[47, 1, 1, "", "H5Extractor"], [47, 1, 1, "", "H5HitExtractor"], [47, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[49, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[49, 1, 1, "", "PrometheusExtractor"], [49, 1, 1, "", "PrometheusFeatureExtractor"], [49, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.deployment": [[76, 0, 0, "-", "deployer"], [77, 0, 0, "-", "deployment_module"], [78, 0, 0, "-", "i3modules"], [80, 0, 0, "-", "icecube"]], "graphnet.deployment.deployer": [[76, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[76, 4, 1, "", "run"]], "graphnet.deployment.deployment_module": [[77, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.i3modules": [[79, 0, 0, "-", "deprecated_methods"]], "graphnet.deployment.i3modules.deprecated_methods": [[79, 1, 1, "", "GraphNeTI3Deployer"]], "graphnet.deployment.icecube": [[81, 0, 0, "-", "cleaning_module"], [82, 0, 0, "-", "i3deployer"], [83, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[81, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.i3deployer": [[82, 1, 1, "", "I3Deployer"]], "graphnet.deployment.icecube.inference_module": [[83, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[85, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[85, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[87, 0, 0, "-", "coarsening"], [88, 0, 0, "-", "components"], [92, 0, 0, "-", "detector"], [98, 0, 0, "-", "easy_model"], [108, 0, 0, "-", "graphs"], [117, 0, 0, "-", "model"], [118, 0, 0, "-", "normalizing_flow"], [119, 0, 0, "-", "rnn"], [121, 0, 0, "-", "standard_averaged_model"], [122, 0, 0, "-", "standard_model"], [123, 0, 0, "-", "task"], [127, 0, 0, "-", "transformer"], [129, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[87, 1, 1, "", "AttributeCoarsening"], [87, 1, 1, "", "Coarsening"], [87, 1, 1, "", "CustomDOMCoarsening"], [87, 1, 1, "", "DOMAndTimeWindowCoarsening"], [87, 1, 1, "", "DOMCoarsening"], [87, 5, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[87, 4, 1, "", "forward"], [87, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[89, 0, 0, "-", "embedding"], [90, 0, 0, "-", "layers"], [91, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[89, 1, 1, "", "FourierEncoder"], [89, 1, 1, "", "SinusoidalPosEmb"], [89, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[89, 4, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[89, 4, 1, "", "forward"]], "graphnet.models.components.layers": [[90, 1, 1, "", "Attention_rel"], [90, 1, 1, "", "Block"], [90, 1, 1, "", "Block_rel"], [90, 1, 1, "", "DropPath"], [90, 1, 1, "", "DynEdgeConv"], [90, 1, 1, "", "DynTrans"], [90, 1, 1, "", "EdgeConvTito"], [90, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[90, 4, 1, "", "extra_repr"], [90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[90, 4, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[90, 4, 1, "", "forward"], [90, 4, 1, "", "message"], [90, 4, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[90, 4, 1, "", "forward"]], "graphnet.models.components.pool": [[91, 5, 1, "", "group_by"], [91, 5, 1, "", "group_pulses_to_dom"], [91, 5, 1, "", "group_pulses_to_pmt"], [91, 5, 1, "", "min_pool"], [91, 5, 1, "", "min_pool_x"], [91, 5, 1, "", "std_pool"], [91, 5, 1, "", "std_pool_x"], [91, 5, 1, "", "sum_pool"], [91, 5, 1, "", "sum_pool_and_distribute"], [91, 5, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[93, 0, 0, "-", "detector"], [94, 0, 0, "-", "icecube"], [95, 0, 0, "-", "liquido"], [96, 0, 0, "-", "orca"], [97, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[93, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[93, 4, 1, "", "feature_map"], [93, 4, 1, "", "forward"], [93, 3, 1, "", "geometry_table"], [93, 3, 1, "", "sensor_index_name"], [93, 3, 1, "", "sensor_position_names"], [93, 3, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[94, 1, 1, "", "IceCube86"], [94, 1, 1, "", "IceCubeDeepCore"], [94, 1, 1, "", "IceCubeKaggle"], [94, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[94, 4, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[94, 4, 1, "", "feature_map"], [94, 2, 1, "", "geometry_table_path"], [94, 2, 1, "", "sensor_id_column"], [94, 2, 1, "", "string_id_column"], [94, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[95, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[95, 4, 1, "", "feature_map"], [95, 2, 1, "", "geometry_table_path"], [95, 2, 1, "", "sensor_id_column"], [95, 2, 1, "", "string_id_column"], [95, 2, 1, "", "xyz"]], "graphnet.models.detector.orca": [[96, 1, 1, "", "IVANORCA115"], [96, 1, 1, "", "ORCA115"], [96, 1, 1, "", "ORCA6"]], "graphnet.models.detector.orca.IVANORCA115": [[96, 4, 1, "", "feature_map"], [96, 2, 1, "", "geometry_table_path"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA115": [[96, 4, 1, "", "feature_map"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA6": [[96, 4, 1, "", "feature_map"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[97, 1, 1, "", "ARCA115"], [97, 1, 1, "", "BaikalGVD8"], [97, 1, 1, "", "IceCube86Prometheus"], [97, 1, 1, "", "IceCubeDeepCore8"], [97, 1, 1, "", "IceCubeGen2"], [97, 1, 1, "", "IceCubeUpgrade7"], [97, 1, 1, "", "IceDemo81"], [97, 1, 1, "", "ORCA150"], [97, 1, 1, "", "ORCA150SuperDense"], [97, 1, 1, "", "PONETriangle"], [97, 1, 1, "", "Prometheus"], [97, 1, 1, "", "TRIDENT1211"], [97, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[97, 4, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[98, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[98, 4, 1, "", "compute_loss"], [98, 4, 1, "", "configure_optimizers"], [98, 4, 1, "", "fit"], [98, 4, 1, "", "forward"], [98, 4, 1, "", "inference"], [98, 4, 1, "", "predict"], [98, 4, 1, "", "predict_as_dataframe"], [98, 3, 1, "", "prediction_labels"], [98, 4, 1, "", "shared_step"], [98, 3, 1, "", "target_labels"], [98, 4, 1, "", "train"], [98, 4, 1, "", "training_step"], [98, 4, 1, "", "validate_tasks"], [98, 4, 1, "", "validation_step"]], "graphnet.models.gnn": [[100, 0, 0, "-", "RNN_tito"], [101, 0, 0, "-", "convnet"], [102, 0, 0, "-", "dynedge"], [103, 0, 0, "-", "dynedge_jinst"], [104, 0, 0, "-", "dynedge_kaggle_tito"], [105, 0, 0, "-", "gnn"], [106, 0, 0, "-", "icemix"], [107, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[100, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[100, 4, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[101, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[101, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[102, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[102, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[103, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[103, 4, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[104, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[104, 4, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[105, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[105, 4, 1, "", "forward"], [105, 3, 1, "", "nb_inputs"], [105, 3, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[106, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[106, 4, 1, "", "forward"], [106, 4, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[107, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[107, 4, 1, "", "forward"]], "graphnet.models.graphs": [[109, 0, 0, "-", "edges"], [112, 0, 0, "-", "graph_definition"], [113, 0, 0, "-", "graphs"], [114, 0, 0, "-", "nodes"], [116, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[110, 0, 0, "-", "edges"], [111, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[110, 1, 1, "", "EdgeDefinition"], [110, 1, 1, "", "EuclideanEdges"], [110, 1, 1, "", "KNNEdges"], [110, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[110, 4, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[111, 1, 1, "", "MinkowskiKNNEdges"], [111, 5, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[112, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[112, 4, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[113, 1, 1, "", "EdgelessGraph"], [113, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[115, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[115, 1, 1, "", "IceMixNodes"], [115, 1, 1, "", "NodeAsDOMTimeSeries"], [115, 1, 1, "", "NodeDefinition"], [115, 1, 1, "", "NodesAsPulses"], [115, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[115, 4, 1, "", "forward"], [115, 3, 1, "", "nb_outputs"], [115, 4, 1, "", "set_number_of_inputs"], [115, 4, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[116, 1, 1, "", "cluster_and_pad"], [116, 5, 1, "", "cluster_summarize_with_percentiles"], [116, 5, 1, "", "gather_cluster_sequence"], [116, 5, 1, "", "ice_transparency"], [116, 5, 1, "", "identify_indices"], [116, 5, 1, "", "lex_sort"]], "graphnet.models.graphs.utils.cluster_and_pad": [[116, 4, 1, "", "add_charge_threshold_summary"], [116, 4, 1, "", "add_counts"], [116, 4, 1, "", "add_mean"], [116, 4, 1, "", "add_percentile_summary"], [116, 4, 1, "", "add_std"], [116, 4, 1, "", "add_sum_charge"]], "graphnet.models.model": [[117, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[117, 4, 1, "", "extra_repr"], [117, 4, 1, "", "extra_repr_recursive"], [117, 4, 1, "", "from_config"], [117, 4, 1, "", "load"], [117, 4, 1, "", "load_state_dict"], [117, 4, 1, "", "save"], [117, 4, 1, "", "save_state_dict"], [117, 4, 1, "", "set_verbose_print_recursively"], [117, 2, 1, "", "verbose_print"]], "graphnet.models.normalizing_flow": [[118, 1, 1, "", "NormalizingFlow"]], "graphnet.models.normalizing_flow.NormalizingFlow": [[118, 4, 1, "", "forward"], [118, 4, 1, "", "shared_step"], [118, 4, 1, "", "validate_tasks"]], "graphnet.models.rnn": [[120, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[120, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[120, 4, 1, "", "clean_up_data_object"], [120, 4, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[121, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[121, 4, 1, "", "load_state_dict"], [121, 4, 1, "", "on_train_end"], [121, 4, 1, "", "optimizer_step"], [121, 4, 1, "", "training_step"], [121, 4, 1, "", "validation_step"]], "graphnet.models.standard_model": [[122, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[122, 4, 1, "", "compute_loss"], [122, 4, 1, "", "forward"], [122, 4, 1, "", "shared_step"], [122, 4, 1, "", "validate_tasks"]], "graphnet.models.task": [[124, 0, 0, "-", "classification"], [125, 0, 0, "-", "reconstruction"], [126, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[124, 1, 1, "", "BinaryClassificationTask"], [124, 1, 1, "", "BinaryClassificationTaskLogits"], [124, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[124, 2, 1, "", "default_prediction_labels"], [124, 2, 1, "", "default_target_labels"], [124, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[124, 2, 1, "", "default_prediction_labels"], [124, 2, 1, "", "default_target_labels"], [124, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[125, 1, 1, "", "AzimuthReconstruction"], [125, 1, 1, "", "AzimuthReconstructionWithKappa"], [125, 1, 1, "", "DirectionReconstructionWithKappa"], [125, 1, 1, "", "EnergyReconstruction"], [125, 1, 1, "", "EnergyReconstructionWithPower"], [125, 1, 1, "", "EnergyReconstructionWithUncertainty"], [125, 1, 1, "", "EnergyTCReconstruction"], [125, 1, 1, "", "InelasticityReconstruction"], [125, 1, 1, "", "PositionReconstruction"], [125, 1, 1, "", "TimeReconstruction"], [125, 1, 1, "", "VertexReconstruction"], [125, 1, 1, "", "VisibleInelasticityReconstruction"], [125, 1, 1, "", "ZenithReconstruction"], [125, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VisibleInelasticityReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[126, 1, 1, "", "IdentityTask"], [126, 1, 1, "", "LearnedTask"], [126, 1, 1, "", "StandardFlowTask"], [126, 1, 1, "", "StandardLearnedTask"], [126, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[126, 3, 1, "", "default_prediction_labels"], [126, 3, 1, "", "default_target_labels"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[126, 4, 1, "", "compute_loss"], [126, 4, 1, "", "forward"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[126, 3, 1, "", "default_prediction_labels"], [126, 4, 1, "", "forward"], [126, 4, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[126, 4, 1, "", "compute_loss"], [126, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[126, 3, 1, "", "default_prediction_labels"], [126, 3, 1, "", "default_target_labels"], [126, 4, 1, "", "inference"], [126, 3, 1, "", "nb_inputs"], [126, 4, 1, "", "train_eval"]], "graphnet.models.transformer": [[128, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[128, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[128, 4, 1, "", "forward"]], "graphnet.models.utils": [[129, 5, 1, "", "array_to_sequence"], [129, 5, 1, "", "calculate_distance_matrix"], [129, 5, 1, "", "calculate_xyzt_homophily"], [129, 5, 1, "", "get_fields"], [129, 5, 1, "", "knn_graph_batch"]], "graphnet.training": [[131, 0, 0, "-", "callbacks"], [132, 0, 0, "-", "labels"], [133, 0, 0, "-", "loss_functions"]], "graphnet.training.callbacks": [[131, 1, 1, "", "GraphnetEarlyStopping"], [131, 1, 1, "", "PiecewiseLinearLR"], [131, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[131, 4, 1, "", "on_fit_end"], [131, 4, 1, "", "on_train_epoch_end"], [131, 4, 1, "", "on_validation_end"], [131, 4, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[131, 4, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[131, 4, 1, "", "get_metrics"], [131, 4, 1, "", "init_predict_tqdm"], [131, 4, 1, "", "init_test_tqdm"], [131, 4, 1, "", "init_train_tqdm"], [131, 4, 1, "", "init_validation_tqdm"], [131, 4, 1, "", "on_train_epoch_end"], [131, 4, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[132, 1, 1, "", "Direction"], [132, 1, 1, "", "Label"], [132, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[132, 3, 1, "", "key"]], "graphnet.training.loss_functions": [[133, 1, 1, "", "BinaryCrossEntropyLoss"], [133, 1, 1, "", "CrossEntropyLoss"], [133, 1, 1, "", "EnsembleLoss"], [133, 1, 1, "", "EuclideanDistanceLoss"], [133, 1, 1, "", "LogCMK"], [133, 1, 1, "", "LogCoshLoss"], [133, 1, 1, "", "LossFunction"], [133, 1, 1, "", "MAELoss"], [133, 1, 1, "", "MSELoss"], [133, 1, 1, "", "RMSELoss"], [133, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [133, 1, 1, "", "VonMisesFisher2DLoss"], [133, 1, 1, "", "VonMisesFisher3DLoss"], [133, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[133, 4, 1, "", "backward"], [133, 4, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[133, 4, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[133, 4, 1, "", "log_cmk"], [133, 4, 1, "", "log_cmk_approx"], [133, 4, 1, "", "log_cmk_exact"]], "graphnet.utilities": [[137, 0, 0, "-", "argparse"], [138, 0, 0, "-", "config"], [145, 0, 0, "-", "decorators"], [146, 0, 0, "-", "deprecation_tools"], [147, 0, 0, "-", "filesys"], [148, 0, 0, "-", "imports"], [149, 0, 0, "-", "logging"], [150, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[137, 1, 1, "", "ArgumentParser"], [137, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[137, 2, 1, "", "standard_arguments"], [137, 4, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[137, 4, 1, "", "contains"], [137, 4, 1, "", "pop_default"]], "graphnet.utilities.config": [[139, 0, 0, "-", "base_config"], [140, 0, 0, "-", "configurable"], [141, 0, 0, "-", "dataset_config"], [142, 0, 0, "-", "model_config"], [143, 0, 0, "-", "parsing"], [144, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[139, 1, 1, "", "BaseConfig"], [139, 5, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[139, 4, 1, "", "as_dict"], [139, 4, 1, "", "dump"], [139, 4, 1, "", "load"], [139, 2, 1, "", "model_config"]], "graphnet.utilities.config.configurable": [[140, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[140, 3, 1, "", "config"], [140, 4, 1, "", "from_config"], [140, 4, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[141, 1, 1, "", "DatasetConfig"], [141, 1, 1, "", "DatasetConfigSaverABCMeta"], [141, 1, 1, "", "DatasetConfigSaverMeta"], [141, 5, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[141, 4, 1, "", "as_dict"], [141, 2, 1, "", "features"], [141, 2, 1, "", "graph_definition"], [141, 2, 1, "", "index_column"], [141, 2, 1, "", "labels"], [141, 2, 1, "", "loss_weight_column"], [141, 2, 1, "", "loss_weight_default_value"], [141, 2, 1, "", "loss_weight_table"], [141, 2, 1, "", "model_config"], [141, 2, 1, "", "node_truth"], [141, 2, 1, "", "node_truth_table"], [141, 2, 1, "", "path"], [141, 2, 1, "", "pulsemaps"], [141, 2, 1, "", "seed"], [141, 2, 1, "", "selection"], [141, 2, 1, "", "string_selection"], [141, 2, 1, "", "truth"], [141, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[142, 1, 1, "", "ModelConfig"], [142, 1, 1, "", "ModelConfigSaverABC"], [142, 1, 1, "", "ModelConfigSaverMeta"], [142, 5, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[142, 2, 1, "", "arguments"], [142, 4, 1, "", "as_dict"], [142, 2, 1, "", "class_name"], [142, 2, 1, "", "model_config"]], "graphnet.utilities.config.parsing": [[143, 5, 1, "", "get_all_grapnet_classes"], [143, 5, 1, "", "get_graphnet_classes"], [143, 5, 1, "", "is_graphnet_class"], [143, 5, 1, "", "is_graphnet_module"], [143, 5, 1, "", "list_all_submodules"], [143, 5, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[144, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[144, 2, 1, "", "dataloader"], [144, 2, 1, "", "early_stopping_patience"], [144, 2, 1, "", "fit"], [144, 2, 1, "", "model_config"], [144, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[146, 5, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[147, 5, 1, "", "find_i3_files"], [147, 5, 1, "", "has_extension"], [147, 5, 1, "", "is_gcd_file"], [147, 5, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[148, 5, 1, "", "has_icecube_package"], [148, 5, 1, "", "has_jammy_flows_package"], [148, 5, 1, "", "has_torch_package"], [148, 5, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[149, 1, 1, "", "Logger"], [149, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[149, 4, 1, "", "critical"], [149, 4, 1, "", "debug"], [149, 4, 1, "", "error"], [149, 3, 1, "", "file_handlers"], [149, 3, 1, "", "handlers"], [149, 4, 1, "", "info"], [149, 4, 1, "", "setLevel"], [149, 3, 1, "", "stream_handlers"], [149, 4, 1, "", "warning"], [149, 4, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[149, 4, 1, "", "filter"], [149, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[150, 5, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "terms": {"": [0, 34, 76, 89, 93, 98, 101, 102, 107, 112, 118, 126, 129, 131, 137, 141, 142, 149, 150, 153, 154, 155, 156, 158, 159, 160], "0": [31, 45, 81, 87, 90, 91, 100, 101, 102, 104, 107, 110, 111, 113, 116, 120, 126, 129, 132, 133, 141, 154, 155, 157, 158, 160], "000": 154, "001": [155, 160], "01": [155, 160], "0221": 155, "02_data": 155, "03042": 103, "03762": 89, "04616": 133, "04_ensemble_dataset": 155, "05": 133, "06": 152, "06166": 110, "08570": 107, "0e04": 158, "0e4": 158, "1": [0, 19, 34, 45, 76, 79, 82, 87, 90, 91, 100, 102, 104, 106, 107, 110, 111, 113, 116, 120, 124, 125, 126, 129, 131, 132, 133, 141, 153, 154, 155, 156, 157, 159, 160], "10": [94, 95, 96, 97, 115, 116, 137, 154, 155, 158, 160], "100": 154, "1000": [126, 154, 155], "10000": 89, "1088": 155, "10th": 116, "11": [155, 157], "115": 96, "12": [106, 128, 141, 154, 155], "120": 155, "128": [89, 101, 102, 104, 107, 137, 154, 155, 160], "14": [141, 154, 155], "1536": 128, "15674": 89, "16": [89, 100, 107, 128, 141, 154, 155, 160], "17": 155, "1706": 89, "1748": 155, "1809": 110, "1812": 133, "1902": 107, "192": 106, "196": 128, "1e6": 126, "2": [34, 90, 91, 100, 102, 104, 107, 110, 113, 116, 120, 125, 129, 133, 141, 154, 155, 157, 160], "20": [149, 155, 157, 158, 160], "200": [154, 158], "2018": 152, "2019": 133, "2020": [0, 156, 159], "21": [152, 154, 155], "2209": 103, "2310": 89, "256": [102, 104, 107, 128], "26": 154, "2d": 133, "2nd": [89, 106], "3": [91, 100, 101, 104, 111, 116, 120, 125, 128, 129, 133, 152, 155, 157, 158], "30": 158, "300": [154, 158], "32": [89, 106, 128], "336": [102, 104], "384": [89, 106, 128], "39": [0, 156, 159], "3d": [125, 133], "4": [90, 103, 106, 116, 125, 155, 158, 160], "40": 158, "5": [100, 116, 120, 133, 137, 153, 154, 155, 157, 158, 160], "50": [115, 116, 137, 158], "500": [116, 158], "50000": [141, 154, 155], "5001": 154, "50th": 116, "59": 157, "6": [89, 91, 96, 106, 128], "64": [100, 107], "7": [81, 91], "700": 133, "768": 115, "8": [90, 91, 100, 102, 104, 113, 120, 133, 152, 154, 155, 157, 160], "80": [155, 160], "86": [22, 94], "890778": [0, 156, 159], "90": [115, 116], "90th": 116, "A": [36, 45, 76, 77, 81, 82, 91, 93, 94, 95, 96, 97, 98, 112, 113, 116, 117, 118, 122, 124, 126, 129, 133, 153, 154, 155, 158, 160], "AND": 133, "AS": 133, "As": [102, 107, 160], "BE": 133, "BUT": 133, "But": 160, "By": [0, 126, 154, 155, 156, 159, 160], "FOR": 133, "For": [37, 115, 131, 154, 155, 160], "IN": 133, "If": [21, 23, 31, 36, 89, 90, 102, 106, 107, 112, 115, 116, 117, 126, 131, 133, 152, 153, 155, 160], "In": [141, 142, 153, 155, 157], "It": [1, 34, 81, 89, 116, 124, 126, 152, 154, 155, 160], "NO": 133, "NOT": [133, 155], "No": [0, 155, 156, 159], "OF": 133, "OR": 133, "One": 155, "Or": 154, "THE": 133, "TO": 133, "That": [102, 107, 125, 132, 155, 160], "The": [0, 18, 34, 37, 76, 77, 79, 81, 82, 83, 87, 89, 90, 91, 100, 102, 104, 106, 107, 110, 112, 116, 118, 120, 124, 125, 126, 128, 129, 131, 132, 133, 146, 153, 154, 156, 158, 159], "Then": 152, "There": [155, 160], "These": [0, 112, 152, 154, 155, 156, 158, 159, 160], "To": [154, 155, 157, 158, 160], "WITH": 133, "Will": [76, 79, 81, 82, 83, 110, 153], "With": [155, 158, 160], "_": 155, "__": [34, 37, 155], "_____________________": 133, "__call__": [19, 21, 77, 153, 154, 155, 158], "__init__": [141, 142, 153, 154, 155, 160], "_accepted_extractor": [153, 158], "_accepted_file_extens": [153, 158], "_and_": [102, 107], "_charge_sum": 116, "_charge_weight": 116, "_cluster_nam": 116, "_column_nam": 153, "_construct_edg": 110, "_count": 116, "_definition_": 155, "_extractor": [153, 158], "_extractor_nam": [153, 158], "_file_extens": 153, "_forward": 160, "_layer": 160, "_lrschedul": 131, "_merge_datafram": 153, "_padded_x": 116, "_pred": 126, "_save_fil": 153, "_sensor_tim": 158, "_sensor_xyz": 158, "_tabl": 153, "_task": [98, 118, 122], "_verify_column": 153, "_x_": 155, "a__b": 34, "ab": [107, 133, 141, 154, 155], "abc": [19, 76, 117, 132, 140, 141, 142], "abcmeta": [141, 142], "abil": 154, "abl": [34, 115, 118, 153, 155, 157, 158, 160], "about": [117, 154, 155, 158], "abov": [133, 154, 155, 158, 160], "absolut": 133, "absopt": 115, "absorpt": 116, "abstract": [1, 93, 105, 112, 126, 140, 155], "abstractmethod": 154, "acceler": 1, "accept": [152, 160], "accepted_extractor": 153, "accepted_file_extens": 153, "access": [132, 154], "accompani": 155, "accord": [87, 91, 110, 112, 113, 116, 133], "achiev": 157, "achitectur": 160, "across": [1, 2, 37, 76, 79, 82, 91, 98, 122, 133, 136, 137, 138, 149, 158], "act": [126, 133, 155, 160], "action": 133, "activ": [90, 98, 100, 102, 107, 115, 120, 126, 152], "activation_lay": [102, 107], "actual": [155, 160], "ad": [22, 89, 102, 106, 115, 116], "adam": [118, 155, 160], "adapt": [155, 160], "add": [90, 102, 107, 116, 137, 146, 152, 155, 158], "add_batchnorm_lay": 107, "add_charge_threshold_summari": 116, "add_count": [115, 116], "add_global_variables_after_pool": [102, 155, 160], "add_ice_properti": 115, "add_inactive_sensor": 112, "add_label": [154, 155], "add_mean": 116, "add_norm_lay": 102, "add_percentile_summari": 116, "add_std": 116, "add_sum_charg": 116, "addit": [87, 90, 98, 116, 133, 153, 155, 160], "additional_attribut": [98, 155, 160], "address": 160, "adher": [152, 160], "adjac": 93, "adjust": 160, "advanc": [1, 91], "after": [90, 100, 102, 104, 107, 131, 137, 141, 154, 155, 160], "again": [155, 160], "aggr": 90, "aggreg": [90, 91, 116], "agnost": [0, 156, 159, 160], "agreement": [0, 152, 156, 159], "ai": 155, "aim": [0, 1, 152, 155, 156, 159], "algorithm": 26, "all": [1, 18, 19, 21, 23, 36, 41, 42, 81, 89, 90, 91, 93, 102, 105, 107, 111, 112, 116, 117, 126, 133, 139, 140, 141, 142, 143, 144, 149, 152, 153, 154, 155, 158, 160], "allow": [0, 39, 78, 86, 91, 131, 139, 144, 154, 155, 156, 159, 160], "along": [116, 155, 160], "alongsid": [155, 160], "also": [100, 141, 153, 154, 155, 158, 160], "alter": [112, 116], "altern": [102, 133, 152], "amount": 100, "an": [0, 19, 37, 78, 82, 112, 113, 120, 121, 133, 147, 149, 152, 153, 155, 156, 157, 158, 159, 160], "anaconda": 157, "analys": 155, "analysi": [76, 82], "angl": [45, 125, 132, 155, 160], "ani": [6, 34, 35, 36, 37, 81, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 137, 139, 140, 141, 142, 143, 144, 149, 154, 155, 160], "anoth": [141, 142, 154, 155], "anyth": 152, "api": [151, 153, 155], "appear": [76, 79, 82, 154, 155], "append": 112, "appli": [76, 79, 82, 90, 91, 98, 100, 101, 102, 103, 104, 105, 106, 107, 116, 118, 120, 122, 124, 126, 128, 133, 143, 153, 154, 155], "applic": [34, 154, 155, 160], "appropri": [126, 155], "approx": 133, "ar": [0, 1, 21, 23, 31, 36, 37, 76, 81, 82, 90, 91, 100, 102, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 120, 124, 133, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "arbitrari": [0, 156, 159], "arca": 97, "arca115": [92, 97], "architectur": [1, 101, 102, 103, 104, 107, 118, 120, 128, 155, 160], "area": 1, "arg": [18, 36, 87, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 120, 121, 122, 124, 125, 126, 128, 133, 137, 139, 149, 153, 158], "argpars": [1, 136], "argument": [106, 118, 131, 137, 139, 141, 142, 144, 154, 155, 158, 160], "argumentpars": [136, 137], "aris": 133, "arrai": [19, 31, 34, 115, 116, 129, 153, 154, 155, 158], "array_to_sequ": [86, 129], "arriv": 154, "art": [0, 156, 159], "articl": 155, "artifact": [155, 160], "arxiv": [89, 107, 110, 133], "as_dict": [139, 141, 142, 155, 160], "assert": [45, 153, 154], "assert_no_uint_valu": [44, 45], "assertionerror": 153, "assign": [87, 91, 113, 152, 153], "associ": [81, 83, 112, 116, 125, 133, 153, 154, 155, 158, 160], "assort": 150, "assum": [81, 89, 93, 112, 116, 126, 129], "atmospher": 154, "attempt": [21, 31, 155], "attent": [89, 90, 106, 128], "attention_rel": [88, 90], "attn_drop": 90, "attn_head_dim": 90, "attn_mask": 90, "attribut": [87, 126, 154, 155, 160], "attributecoarsen": [86, 87], "author": [101, 103, 133], "auto": 126, "autom": 152, "automat": [23, 89, 112, 116, 133, 152, 153, 155, 158], "auxiliari": [89, 155, 160], "avail": [23, 124, 125, 126, 148, 153, 154, 155, 157, 158, 160], "available_t": 153, "averag": [91, 121, 133], "avg": 87, "avg_pool": 87, "avg_pool_x": 87, "avoid": [149, 152], "awai": [1, 155], "azimiuth": 132, "azimuth": [45, 125, 132], "azimuth_kappa": 125, "azimuth_kei": 132, "azimuth_pr": 125, "azimuthreconstruct": [123, 125], "azimuthreconstructionwithkappa": [123, 125], "b": [34, 87, 91, 129, 155, 158, 160], "backbon": [118, 155], "backend": 158, "backward": [116, 133], "baikalgvd8": [92, 97], "bar": 131, "base": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 137, 139, 140, 141, 142, 144, 148, 149, 153, 154, 155, 156, 159, 160], "base_config": [136, 138], "baseclass": [76, 82], "baseconfig": [138, 139, 140, 141, 142, 144], "basemodel": [139, 141, 142], "basi": 160, "basic": [1, 155], "batch": [0, 87, 90, 91, 98, 107, 118, 120, 122, 129, 137, 154, 156, 159], "batch_idx": [98, 118, 121, 122, 129], "batch_siz": [129, 154, 155, 160], "becaus": [155, 160], "been": [79, 81, 133, 152, 160], "befor": [102, 111, 120, 126, 131], "behavior": 153, "behaviour": 131, "behind": [155, 160], "being": [21, 31, 81, 89, 124, 126, 154, 155, 160], "beitv2": 90, "belong": 129, "below": [115, 152, 153, 155, 156, 158, 159, 160], "besid": 154, "bessel": 133, "best": [0, 131, 152, 156, 159], "better": 152, "between": [39, 89, 98, 108, 109, 110, 111, 114, 118, 122, 126, 129, 131, 133, 141, 142, 155, 160], "bia": [90, 128], "bias": [155, 160], "big": [155, 160], "biject": 153, "binari": [122, 124, 133, 160], "binaryclassificationtask": [123, 124, 155, 160], "binaryclassificationtasklogit": [123, 124], "binarycrossentropyloss": [130, 133], "black": 152, "blob": [133, 155], "block": [0, 1, 88, 90, 107, 155, 156, 159], "block_rel": [88, 90], "boilerpl": 160, "bool": [35, 36, 37, 42, 81, 89, 90, 98, 100, 102, 104, 106, 107, 112, 115, 116, 117, 122, 128, 131, 133, 137, 143, 146, 147, 148, 149], "boost": 37, "border": 31, "both": [0, 23, 118, 122, 126, 155, 156, 158, 159, 160], "boundari": 31, "box": [153, 155, 160], "branch": 152, "break_cyclic_recurs": [33, 37], "bucket": 128, "bug": [152, 155], "build": [0, 1, 86, 93, 110, 111, 115, 116, 117, 118, 139, 141, 142, 155, 156, 159, 160], "built": [0, 86, 112, 118, 154, 155, 156, 158, 159, 160], "c": [21, 31, 34, 91, 111, 133, 155], "c_": 133, "calcul": [81, 89, 98, 110, 113, 115, 116, 118, 122, 129, 132, 133, 154, 155, 160], "calculate_distance_matrix": [86, 129], "calculate_xyzt_homophili": [86, 129], "calibr": [35, 37], "call": [23, 37, 89, 91, 126, 131, 149, 153, 155, 158, 160], "callabl": [37, 90, 91, 93, 94, 95, 96, 97, 112, 121, 126, 139, 141, 142, 143, 148, 158], "callback": [1, 98, 130, 155, 160], "can": [0, 1, 19, 23, 26, 81, 89, 91, 112, 118, 137, 139, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "cannot": [37, 120, 139, 144], "capabl": [0, 122, 156, 159], "captur": [155, 160], "care": 154, "carlo": 35, "cascad": 125, "case": [23, 81, 91, 116, 126, 153, 154, 155, 157, 160], "cast": [23, 37], "cast_object_to_pure_python": [33, 37], "cast_pulse_series_to_pure_python": [33, 37], "caus": 155, "caveat": [155, 160], "cc": [45, 132], "cd": 157, "center": 110, "centr": 110, "central": [155, 157], "certain": 155, "cframe": [21, 31], "chain": [0, 1, 78, 86, 98, 118, 122, 133, 156, 157, 159], "chang": [133, 152, 155, 160], "charg": [45, 89, 100, 115, 116, 120, 133, 154, 155, 160], "charge_column": 115, "charge_index": 116, "check": [35, 36, 37, 115, 137, 147, 148, 152, 158], "checkpoint": 155, "checkpointing_bas": 155, "chenli2049": 128, "cherenkov": [115, 116, 155, 158, 160], "choic": [154, 155, 160], "choos": [155, 160], "chosen": [110, 116, 149, 154], "chunk": 153, "ckpt": [155, 160], "ckpt_path": 98, "claim": 133, "clash": 149, "class": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 39, 41, 42, 47, 49, 76, 77, 79, 81, 82, 83, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 149, 152, 153, 154], "class_nam": [36, 142, 149, 154, 155, 160], "classif": [1, 86, 122, 123, 126, 133, 155, 160], "classifi": [124, 154, 155, 160], "classmethod": [117, 133, 139, 155, 160], "classvar": [139, 141, 142, 144], "clean": [81, 152, 157], "clean_up_data_object": 120, "cleaning_modul": [75, 80], "clear": [149, 154], "cli": 137, "clone": 157, "closest": 131, "cloud": [155, 160], "cls_tocken": 106, "cluster": [87, 90, 91, 100, 102, 104, 107, 115, 116, 120], "cluster_and_pad": [108, 116], "cluster_class": 116, "cluster_column": 116, "cluster_index": 91, "cluster_indic": 116, "cluster_on": [115, 116], "cluster_summarize_with_percentil": [108, 116], "clustered_x": 116, "cnn": [155, 160], "coarsen": [1, 86, 91], "code": [0, 31, 44, 45, 112, 141, 142, 153, 154, 155, 156, 158, 159, 160], "coincid": 115, "collabor": [1, 155, 160], "collect": [20, 33, 78, 133, 150, 155, 160], "column": [19, 47, 49, 77, 83, 85, 89, 93, 98, 100, 110, 112, 113, 115, 116, 120, 124, 125, 126, 129, 133, 153, 154, 155, 158, 160], "column_nam": [47, 153], "column_offset": 116, "columnmissingexcept": [84, 85], "com": [106, 118, 128, 133, 155, 157], "combin": [18, 34, 100, 122, 133, 141, 160], "combine_extractor": [3, 17], "combinedextractor": [17, 18], "come": [98, 126, 153, 154, 155, 160], "command": 137, "commit": 152, "common": [0, 1, 133, 141, 142, 145, 148, 154, 155, 156, 159], "compar": [155, 160], "comparison": [26, 133], "compat": [98, 118, 122, 126, 153, 154, 155, 160], "competit": [89, 90, 94, 104, 106], "complet": [0, 86, 155, 156, 157, 159, 160], "complex": [0, 86, 155, 156, 159], "compon": [0, 1, 86, 89, 90, 91, 98, 117, 118, 122, 155, 156, 159, 160], "compos": [155, 160], "composit": 149, "comprehens": 155, "compress": 154, "compris": [0, 156, 159], "comput": [77, 90, 98, 111, 116, 122, 126, 129, 133, 154, 155], "compute_loss": [98, 122, 126], "compute_minkowski_distance_mat": [109, 111], "con": [155, 160], "concaten": [34, 102], "concept": 152, "conceptu": [153, 155], "concret": 155, "condit": [118, 126, 133], "condition_on": 118, "confid": 155, "config": [1, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 154, 155, 160], "config_dir": [155, 160], "configdict": [139, 141, 142, 144], "configur": [0, 1, 77, 78, 86, 98, 117, 136, 138, 139, 141, 142, 144, 149, 153, 155, 156, 159, 160], "configure_optim": 98, "conflict": 155, "conform": [139, 141, 142, 144], "conjunct": [19, 126], "conn": 155, "connect": [0, 110, 111, 112, 115, 133, 154, 155, 156, 159], "consequ": 117, "consid": [81, 100, 154, 155, 158], "consist": [89, 137, 149, 152, 155, 160], "consortium": [0, 156, 159], "constant": [1, 3, 126, 151, 154, 155, 160], "constitut": 154, "constraint": [98, 155], "construct": [18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 39, 47, 49, 77, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 120, 121, 122, 124, 125, 126, 128, 131, 132, 133, 137, 140, 141, 142, 149, 153, 154, 155, 160], "constructor": [153, 154, 155], "consult": 160, "consum": 155, "consumpt": 154, "contain": [0, 6, 17, 18, 21, 34, 35, 38, 39, 46, 49, 76, 77, 78, 79, 81, 82, 83, 85, 98, 102, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 126, 129, 133, 137, 153, 154, 155, 156, 158, 159, 160], "containeris": 1, "content": [153, 160], "continu": [0, 133, 155, 156, 159], "contract": 133, "contribut": [0, 133, 155, 156, 159], "contributor": 152, "conveni": [1, 152, 155, 160], "convers": [38, 39, 49, 115, 154, 155, 158], "convert": [0, 1, 21, 31, 34, 36, 45, 129, 153, 154, 155, 156, 157, 158, 159], "convex": 31, "convnet": [86, 99, 155], "convolut": [90, 101, 102, 103, 104, 107], "coo": 154, "coordin": [31, 93, 111, 115, 116, 129, 155], "copi": [133, 154], "copyright": 133, "core": 105, "correct": 133, "correspond": [34, 37, 102, 107, 112, 116, 147, 154, 155, 158, 160], "cosh": 133, "could": [152, 155, 160], "count": 116, "counterpart": 154, "cpu": 77, "creat": [45, 112, 113, 115, 116, 139, 140, 144, 152, 154, 160], "create_unique_id_filetyp": [44, 45], "creating_time_zero": [44, 45], "critic": [149, 155, 158], "cross": 133, "crossentropyloss": [130, 133], "csv": [141, 154, 155, 158, 160], "ctx": 133, "cuda": 157, "cumul": 116, "curated_datamodul": [1, 3], "curi": [0, 156, 159], "current": [45, 120, 131, 152, 155], "custom": [84, 112, 131, 160], "custom_label_funct": 112, "customdomcoarsen": [86, 87], "customis": 131, "d": [34, 111, 112, 115, 129, 152, 158], "damag": 133, "data": [0, 1, 6, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 47, 48, 49, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 115, 116, 118, 120, 121, 122, 126, 128, 129, 132, 137, 139, 141, 144, 148, 151, 154, 155, 156, 159, 160], "data_path": 112, "databas": [154, 155], "dataclass": [1, 3, 35], "dataconfig": [141, 154], "dataconvert": [1, 3, 52, 155, 158], "datafram": [45, 93, 98, 153, 155, 158, 160], "dataload": [1, 3, 98, 112, 144, 154, 155, 160], "datamodul": [1, 3], "datarepresent": 118, "dataset": [1, 3, 25, 85, 100, 112, 120, 137, 141, 151, 158, 160], "dataset_1": [154, 155], "dataset_2": [154, 155], "dataset_3": [154, 155], "dataset_config": [136, 138, 155, 160], "dataset_config_path": [155, 160], "datasetconfig": [138, 141, 154, 160], "datasetconfigsav": 141, "datasetconfigsaverabcmeta": [138, 141], "datasetconfigsavermeta": [138, 141], "db": [154, 155], "ddp": [155, 160], "de": 34, "deactiv": [98, 126], "deal": 133, "debug": [149, 155], "decai": 106, "decor": [1, 136, 148], "dedic": 152, "deem": 37, "deep": [0, 90, 104, 106, 153, 155, 156, 157, 158, 159, 160], "deepcopi": 146, "deepcor": [22, 94], "deepic": [99, 106], "def": [153, 154, 155, 158, 160], "default": [21, 23, 31, 34, 49, 76, 77, 79, 81, 82, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 126, 128, 129, 131, 132, 133, 137, 139, 147, 154, 155], "default_prediction_label": [124, 125, 126, 160], "default_target_label": [124, 125, 126, 160], "defin": [31, 77, 81, 83, 91, 108, 109, 110, 112, 114, 116, 118, 141, 154, 155, 158, 160], "definit": [110, 112, 113, 115, 117, 126, 152, 155, 160], "deleg": 149, "deliv": 98, "demo_ic": 97, "demo_wat": 97, "denot": [19, 131, 132, 153, 158], "dens": 91, "depend": [0, 89, 153, 154, 155, 156, 159, 160], "deploi": [0, 1, 77, 155, 156, 157, 159], "deploy": [0, 1, 77, 79, 80, 81, 82, 83, 112, 151, 155, 156, 158, 159, 160], "deployment_modul": [1, 75], "deploymentmodul": [75, 76, 77, 79, 82, 83], "deprec": [79, 146], "deprecated_method": [3, 50, 61, 75, 78], "deprecation_tool": [1, 136], "depth": [90, 106, 116, 128], "depth_rel": 106, "describ": [152, 155], "descript": [117, 137], "design": [1, 155, 158], "desir": 147, "detail": [1, 100, 117, 118, 126, 131, 154, 155, 157, 158, 160], "detector": [0, 1, 31, 78, 86, 94, 95, 96, 97, 112, 113, 115, 154, 155, 156, 159, 160], "detector_respons": 155, "determin": [76, 79, 82, 100], "develop": [0, 1, 152, 154, 155, 156, 157, 158, 159, 160], "deviat": [112, 113, 116], "devic": 77, "df": [45, 153], "dfg": [0, 156, 159], "dict": [23, 34, 37, 77, 93, 94, 95, 96, 97, 98, 106, 112, 113, 115, 117, 118, 121, 131, 137, 139, 141, 142, 143, 144, 146, 153, 154, 155, 158], "dictionari": [19, 34, 35, 37, 112, 113, 117, 139, 141, 142, 144, 153, 158], "differ": [0, 19, 21, 39, 41, 46, 47, 49, 78, 113, 152, 153, 154, 155, 156, 158, 159, 160], "difficult": 154, "diffier": [155, 160], "digit": 89, "dim": [89, 90], "dimenion": [102, 104, 107], "dimens": [89, 90, 94, 95, 96, 97, 100, 101, 102, 104, 106, 107, 116, 120, 126, 128, 129, 133, 158, 160], "dimension": [89, 90, 154, 160], "dir": 147, "dir_i": 45, "dir_with_fil": [153, 158], "dir_x": 45, "dir_x_pr": 125, "dir_y_pr": 125, "dir_z": 45, "dir_z_pr": 125, "direct": [45, 104, 116, 124, 125, 126, 130, 132, 154, 158], "direction_kappa": 125, "directionreconstructionwithkappa": [123, 125, 155, 160], "directli": [0, 102, 107, 153, 155, 156, 158, 159, 160], "directori": [131, 147, 153, 155, 160], "dirti": 155, "discard_empty_ev": 81, "disconnect": 154, "discuss": 152, "disk": [153, 154, 155], "distanc": [31, 110, 111, 113, 129], "distribut": [91, 102, 118, 125, 133, 157, 160], "distribution_strategi": 98, "ditto": 133, "diverg": 133, "divid": [76, 79, 82, 116, 126], "dl": [155, 160], "dnn": [25, 32], "do": [0, 77, 81, 133, 141, 142, 152, 154, 155, 156, 159, 160], "doc": 155, "docformatt": 152, "docker": 1, "docstr": 152, "document": [118, 133, 158, 160], "doe": [37, 124, 126, 142, 153, 154, 155, 160], "dom": [87, 91, 100, 115, 116, 120, 155, 160], "dom_i": [94, 115], "dom_tim": 115, "dom_x": [94, 115], "dom_z": [94, 115], "domain": [0, 1, 155, 156, 159], "domandtimewindowcoarsen": [86, 87], "domcoarsen": [86, 87], "don": [131, 153], "done": [23, 91, 149, 152, 153, 155, 158], "dot": 90, "download": 157, "downsid": 154, "drawn": [108, 109, 113, 114, 155, 160], "drhb": 106, "drop": [90, 101], "drop_path": 90, "drop_prob": 90, "dropout": [90, 100, 107, 120], "dropout_prob": 90, "dropout_ratio": 101, "dropout_readout": 107, "droppath": [88, 90], "dtype": [112, 113, 150, 154, 155, 160], "due": [154, 155, 160], "dummy_pid": [154, 155], "dump": [139, 141, 142, 153, 154, 155], "duplciat": 131, "duplic": 115, "dure": [90, 106, 112, 126, 131, 158], "dynam": [23, 90, 102, 103, 104, 107, 155, 160], "dynedg": [81, 83, 86, 99, 103, 104, 106, 107, 155, 160], "dynedge_arg": 106, "dynedge_jinst": [86, 99], "dynedge_kaggle_tito": [86, 99], "dynedge_layer_s": [102, 107, 155, 160], "dynedgeconv": [88, 90, 102, 107], "dynedgejinst": [99, 103], "dynedgetito": [99, 100, 104], "dyntran": [88, 90, 100, 104], "dyntrans1": 90, "dyntrans_layer_s": [100, 104], "e": [1, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 37, 39, 49, 77, 81, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 101, 105, 110, 112, 113, 115, 116, 117, 118, 121, 122, 124, 125, 126, 129, 131, 132, 133, 139, 149, 152, 153, 154, 155, 157, 160], "each": [23, 34, 37, 45, 76, 77, 79, 82, 87, 89, 90, 91, 94, 95, 96, 97, 100, 102, 104, 107, 110, 112, 113, 115, 116, 120, 124, 126, 129, 131, 133, 147, 153, 154, 155, 158, 160], "earli": [131, 137], "early_stopping_pati": [98, 144], "earlystop": 131, "easi": [0, 153, 154, 155, 156, 159, 160], "easili": [1, 155, 160], "easy_model": [1, 86], "easysyntax": [86, 98, 118, 122], "ed": 133, "edg": [86, 90, 91, 102, 103, 104, 107, 108, 111, 112, 113, 114, 115, 129, 154, 155, 160], "edge_attr": [154, 155], "edge_definit": 112, "edge_index": [87, 90, 129, 154, 155], "edgeconv": 90, "edgeconvtito": [88, 90], "edgedefinit": [108, 109, 110, 111, 112, 113, 114, 155, 160], "edgelessgraph": [108, 113], "effect": [131, 152, 155, 160], "effort": [152, 154, 158], "either": [0, 21, 31, 133, 153, 155, 156, 159], "element": [19, 34, 37, 98, 118, 122, 129, 143, 153, 155, 158], "elementwis": 133, "elimin": 81, "els": [81, 132, 153, 158], "ema": 121, "embed": [86, 88, 100, 106, 120, 124, 126, 128], "embedding_dim": [100, 120], "empti": 81, "en": 155, "enabl": [0, 98, 115, 156, 159], "encod": [89, 132], "encount": 155, "encourag": [152, 155], "end": [0, 1, 116, 131, 155, 156, 159], "energi": [45, 125, 126, 154, 155, 158], "energy_cascad": 125, "energy_cascade_pr": 125, "energy_pr": 125, "energy_reco": 83, "energy_sigma": 125, "energy_track": 125, "energy_track_pr": 125, "energyreconstruct": [123, 125, 155, 160], "energyreconstructionwithpow": [123, 125], "energyreconstructionwithuncertainti": [123, 125, 155], "energytcreconstruct": [123, 125], "engin": [0, 156, 159], "enough": 117, "ensemble_dataset": [154, 155], "ensembledataset": [141, 154, 155], "ensembleloss": [130, 133], "ensur": [37, 133, 149, 152, 160], "entir": [117, 153, 155, 160], "entiti": [155, 160], "entri": [81, 83, 102, 107, 129, 137, 158], "entropi": 133, "enum": 37, "env": 157, "environ": 157, "ep": [150, 155, 160], "epoch": [121, 131, 137], "eps_lik": [136, 150], "equival": [37, 155, 160], "error": [133, 149, 152, 153, 155], "especi": 81, "establish": 160, "etc": [0, 133, 149, 154, 155, 156, 158, 159], "euclidean": [110, 152], "euclideandistanceloss": [130, 133], "euclideanedg": [109, 110], "european": [0, 156, 159], "eval": [117, 157], "evalu": [118, 126], "event": [0, 1, 18, 28, 31, 45, 49, 81, 89, 91, 100, 112, 115, 116, 122, 126, 128, 129, 132, 133, 141, 153, 155, 156, 158, 159, 160], "event_no": [141, 154, 155, 160], "everi": [107, 118, 153, 155, 158], "everyth": [155, 160], "everytim": 152, "evt_id": 45, "exact": [103, 133, 160], "exactli": [133, 149, 154], "exampl": [34, 87, 91, 116, 118, 129, 133, 141, 142, 153, 154, 157], "example_energy_reconstruction_model": [137, 155, 160], "except": [1, 151, 153], "exclud": 23, "exclude_kei": 23, "excluding_valu": 129, "exist": [0, 86, 118, 132, 141, 154, 155, 156, 159, 160], "exist_ok": [155, 160], "expand": [0, 155, 156, 159], "expans": 106, "expect": [81, 83, 112, 115, 154, 155, 160], "experi": [0, 1, 6, 77, 130, 153, 155, 156, 159], "experiment": 160, "expert": 1, "explain": 155, "explicitli": [139, 144], "exponenti": 133, "export": [153, 154, 155, 158, 160], "expos": 1, "express": [117, 133], "extend": [0, 1, 31, 153, 154, 156, 159], "extend_boundari": 31, "extens": [1, 147], "extern": [154, 155], "extra": [90, 160], "extra_repr": [90, 117], "extra_repr_recurs": 117, "extract": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 39, 42, 45, 47, 48, 49, 81, 83, 126, 129, 153, 155, 158], "extractor": [1, 3, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 81, 83], "extractor_nam": [18, 19, 21, 23, 26, 39, 41, 47, 49, 153, 158], "f": [91, 153, 155, 160], "f1": 91, "f2": 91, "f_absorpt": 116, "f_scatter": 116, "factor": [90, 116, 131, 133, 155, 160], "fail": 18, "fals": [36, 81, 89, 90, 102, 106, 107, 112, 115, 117, 128, 131, 133, 155, 160], "fanci": 155, "fashion": 1, "fast": [0, 154, 155, 156, 159], "faster": [0, 153, 154, 156, 159], "favorit": 157, "favourit": 155, "fc": 91, "featur": [1, 22, 81, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 120, 124, 128, 129, 141, 152, 154, 155, 158, 160], "feature_idx": 116, "feature_map": [93, 94, 95, 96, 97, 158], "feature_nam": 116, "features_subset": [90, 100, 102, 104, 107, 120, 155, 160], "feedforward": 90, "feel": 155, "fetch": 137, "few": [0, 86, 152, 153, 154, 155, 156, 159, 160], "fiber_id": 95, "field": [118, 129, 132, 139, 144, 146, 153, 154, 155, 158], "figur": 0, "file": [0, 1, 19, 21, 31, 34, 36, 39, 42, 45, 46, 47, 48, 49, 76, 77, 79, 81, 82, 83, 112, 117, 131, 133, 137, 138, 139, 140, 141, 142, 147, 149, 153, 154, 155, 156, 157, 158, 159, 160], "file_handl": 149, "file_path": [153, 158], "file_read": [153, 158], "file_typ": 45, "filehandl": 149, "filenam": 147, "fileread": 19, "filesi": [1, 136], "filter": [36, 42, 149, 158], "filter_ani": 36, "filter_nam": 36, "filter_none_nan": [44, 45], "filter_triggered_puls": 42, "filtermask": 36, "final": [0, 91, 131, 141, 154, 155, 156, 159], "find": [21, 31, 111, 147, 154, 155, 158, 160], "find_fil": 153, "find_i3_fil": [136, 147], "first": [45, 89, 100, 111, 115, 120, 131, 152, 155, 158], "fisher": 133, "fit": [98, 133, 144, 155, 160], "five": 154, "fix": 155, "flag": [22, 45, 81], "flake8": 152, "flatten": 34, "flatten_nested_dictionari": [33, 34], "flexibil": 160, "float": [31, 45, 81, 90, 98, 100, 101, 107, 110, 111, 112, 113, 115, 116, 120, 126, 131, 133, 141, 154], "float32": [112, 113], "float64": 133, "flow": [118, 126, 160], "flow_lay": [118, 126], "flowchart": [0, 156, 159], "fly": [154, 155], "fn": [37, 139, 143], "fn_kwarg": 143, "folder": [76, 153], "folk": 155, "follow": [98, 102, 107, 118, 122, 133, 152, 153, 154, 155], "fork": 152, "form": [0, 19, 86, 124, 139, 144, 153, 154, 156, 159, 160], "format": [0, 1, 34, 38, 39, 45, 89, 117, 120, 141, 152, 153, 154, 155, 156, 157, 158, 159, 160], "forward": [87, 89, 90, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 115, 118, 120, 122, 126, 128, 133, 160], "found": [37, 116, 133, 154, 155], "four": 89, "fourier": 89, "fourierencod": [88, 89, 106, 128], "fraction": [101, 120], "frame": [20, 21, 23, 31, 33, 36, 37, 83], "frame_is_montecarlo": [33, 35], "frame_is_nois": [33, 35], "framework": [0, 155, 156, 159], "free": [0, 133, 155, 156, 159], "freeli": 155, "frequenc": 89, "friendli": [0, 153, 155, 156, 157, 159], "from": [0, 1, 19, 20, 21, 23, 25, 26, 28, 31, 34, 35, 36, 37, 39, 42, 47, 48, 49, 89, 91, 93, 94, 95, 96, 97, 104, 106, 110, 112, 115, 116, 117, 118, 121, 124, 125, 126, 129, 131, 132, 133, 139, 140, 142, 144, 149, 152, 153, 154, 155, 156, 158, 159, 160], "from_config": [117, 140, 141, 142, 154, 155, 160], "from_dataset_config": [155, 160], "full": [155, 160], "fulli": [153, 155, 160], "func": 155, "function": [0, 21, 37, 39, 45, 49, 81, 83, 87, 90, 91, 93, 94, 95, 96, 97, 102, 107, 112, 116, 117, 118, 126, 129, 133, 136, 141, 142, 143, 146, 147, 148, 150, 154, 156, 158, 159, 160], "fund": [0, 156, 159], "furnish": 133, "further": [81, 116], "furthermor": 120, "g": [1, 18, 19, 21, 31, 34, 37, 81, 83, 91, 112, 115, 116, 126, 129, 133, 149, 152, 154, 155, 157, 160], "galatict": 24, "gamma_1": 90, "gamma_2": 90, "gather": 116, "gather_cluster_sequ": [108, 116], "gcd": [21, 31, 35, 79, 81, 82, 83, 147], "gcd_dict": [35, 37], "gcd_file": [6, 21, 31, 79, 81, 82, 83], "gcd_list": 147, "gcd_rescu": 147, "gelu": 90, "gener": [0, 23, 36, 76, 81, 82, 83, 89, 108, 109, 112, 113, 114, 116, 124, 133, 154, 155, 156, 158, 159, 160], "geometr": 155, "geometri": [93, 112, 160], "geometry_t": [93, 94, 95, 96, 97, 158], "geometry_table_path": [94, 95, 96, 97, 158], "germani": [0, 156, 159], "get": [19, 35, 93, 116, 131, 155, 160], "get_all_argument_valu": [138, 139], "get_all_grapnet_class": [138, 143], "get_field": [86, 129], "get_graphnet_class": [138, 143], "get_lr": 131, "get_member_vari": [33, 37], "get_metr": 131, "get_om_keys_and_pulseseri": [33, 35], "gev": 45, "gframe": [21, 31], "gggt": [118, 126], "git": 157, "github": [106, 118, 126, 128, 133, 155, 157], "given": [21, 31, 89, 91, 110, 126, 133, 137, 154, 158], "glob": 153, "global": [2, 100, 102, 104, 107, 117, 155], "global_pooling_schem": [100, 102, 104, 107, 155, 160], "gnn": [1, 78, 86, 100, 101, 102, 103, 104, 106, 107, 112, 118, 120, 128, 155, 160], "go": [152, 155], "googl": 152, "got": 153, "gpu": [98, 137, 155, 157, 160], "grab": 126, "grad_output": 133, "gradient_clip_v": 98, "grant": [0, 133, 156, 159], "graph": [0, 1, 86, 90, 91, 93, 109, 110, 111, 112, 114, 115, 116, 120, 129, 132, 152, 154, 155, 156, 159, 160], "graph_definit": [86, 108, 118, 141, 154, 155, 160], "graph_definiton": 154, "graphdefinit": [108, 109, 112, 113, 114, 118, 152, 154, 155], "graphnet": [0, 1, 2, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160], "graphnet_file_read": [3, 54, 153, 158], "graphnet_model": 131, "graphnet_modul": 79, "graphnet_writ": [3, 68], "graphnetearlystop": [130, 131], "graphnetfileread": 153, "graphneti3deploy": [78, 79], "graphnetwrit": 153, "grapnet": [143, 155], "greatli": [155, 160], "group": [0, 91, 155, 156, 159], "group_bi": [88, 91], "group_pulses_to_dom": [88, 91], "group_pulses_to_pmt": [88, 91], "groupbi": 91, "guarante": [155, 160], "guid": 152, "guidelin": 152, "gvd": 97, "h5": [47, 153], "h5_extractor": [17, 46], "h5extractor": [46, 47, 153], "h5hitextractor": [46, 47, 153], "h5py": 153, "h5truthextractor": [46, 47, 153], "ha": [0, 37, 45, 79, 81, 101, 116, 133, 147, 153, 154, 155, 156, 157, 158, 159, 160], "had": 158, "hadron": 125, "hand": [23, 154, 155], "handl": [23, 133, 137, 146, 149, 153, 154, 155], "handler": 149, "happen": [116, 154, 158], "hard": [31, 115], "has_extens": [136, 147], "has_icecube_packag": [136, 148], "has_jammy_flows_packag": [136, 148], "has_torch_packag": [136, 148], "have": [1, 23, 91, 106, 112, 116, 126, 152, 154, 155, 158, 160], "head": [90, 100, 104, 106, 126, 128, 160], "head_dim": 90, "head_siz": 106, "heavi": 153, "help": [81, 83, 137, 152, 154, 155, 158, 160], "here": [112, 152, 154, 155, 157, 158, 160], "herebi": 133, "hidden": [89, 90, 100, 102, 103, 107, 120], "hidden_dim": [106, 128], "hidden_featur": 90, "hidden_s": [120, 124, 125, 126, 155, 160], "high": [0, 155, 156, 159], "higher": 154, "highest_protocol": 153, "hint": 152, "hit": [45, 154, 155, 158], "hitdata": 47, "hlc": 115, "hlc_name": 115, "hnl": 45, "hold": [112, 116, 153, 158, 160], "holder": 133, "home": [94, 95, 96, 97, 137, 153, 158], "homophili": 129, "hook": 152, "horizon": [0, 156, 159], "host": 158, "how": [108, 109, 114, 153, 155, 160], "howev": [154, 155], "html": [118, 126, 155], "http": [106, 107, 110, 118, 126, 128, 133, 152, 155, 157], "hull": 31, "human": 155, "hybrid": 24, "hyperparamet": [142, 155, 160], "i": [0, 1, 18, 19, 21, 23, 31, 34, 35, 36, 37, 39, 41, 45, 47, 49, 76, 79, 81, 82, 83, 87, 89, 90, 91, 101, 102, 106, 107, 110, 112, 113, 115, 116, 118, 120, 122, 125, 126, 129, 131, 132, 133, 137, 139, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "i3": [1, 21, 31, 35, 36, 37, 76, 81, 83, 147, 155, 157], "i3_fil": [6, 21, 31], "i3_filt": [20, 33], "i3_list": 147, "i3calibr": 35, "i3deploy": [6, 75, 79, 80], "i3extractor": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "i3featureextractor": [17, 20, 81, 83], "i3featureextractoricecube86": [20, 22], "i3featureextractoricecubedeepcor": [20, 22], "i3featureextractoricecubeupgrad": [20, 22], "i3fileset": [3, 6], "i3filt": [33, 36], "i3filtermask": [33, 36], "i3fram": [20, 23, 35, 37, 81, 83], "i3galacticplanehybridrecoextractor": [20, 24], "i3genericextractor": [17, 20], "i3hybridrecoextractor": [17, 20], "i3inferencemodul": [79, 80, 81, 82, 83], "i3mctre": 31, "i3modul": [1, 75, 77, 79], "i3ntmuonlabelextractor": [20, 25], "i3ntmuonlabelsextractor": [17, 20], "i3particl": 26, "i3particleextractor": [17, 20], "i3pisaextractor": [17, 20], "i3pulsecleanermodul": [80, 81], "i3pulsenoisetruthflagicecubeupgrad": [20, 22], "i3quesoextractor": [17, 20], "i3read": [3, 54], "i3retroextractor": [17, 20], "i3splinempeextractor": [17, 20], "i3splinempeicextractor": [20, 30], "i3truthextractor": [17, 20], "i3tumextractor": [17, 20], "ic": [104, 106, 115], "ice_arg": 115, "ice_transpar": [108, 116], "icecub": [1, 3, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 75, 78, 81, 82, 83, 86, 90, 92, 96, 104, 106, 115, 116, 148, 155, 160], "icecube86": [92, 94, 96, 97], "icecube86prometheu": [92, 97], "icecube_deepcor": 97, "icecube_gen2": 97, "icecube_upgrad": [94, 97], "icecubedeepcor": [92, 94], "icecubedeepcore8": [92, 97], "icecubegen2": [92, 97], "icecubekaggl": [92, 94], "icecubeupgrad": [92, 94], "icecubeupgrade7": [92, 97], "icedemo81": [92, 97], "icemix": [86, 99], "icemixnod": [114, 115], "icetrai": [35, 37, 77, 78, 148, 157], "id": [45, 93, 112, 153, 154, 155, 158], "id_column": 115, "ideal": 160, "ident": [91, 93, 94, 95, 96, 97, 126], "identifi": [31, 115, 116, 129, 141, 142, 158], "identify_indic": [108, 116], "identitytask": [123, 124, 126], "ie": 100, "ignor": 37, "illustr": [0, 152, 153, 156, 159], "imag": [0, 1, 152, 155, 156, 159, 160], "impact": 106, "implement": [1, 19, 21, 77, 82, 90, 100, 101, 102, 103, 104, 106, 107, 110, 120, 128, 133, 152, 153, 155, 160], "impli": 133, "import": [0, 1, 86, 136, 153, 154, 155, 156, 158, 159, 160], "impos": 98, "improv": [0, 1, 137, 155, 156, 159, 160], "in_featur": 90, "inaccur": 116, "inact": 112, "includ": [1, 90, 98, 115, 133, 139, 152, 154, 155, 158, 160], "include_dynedg": 106, "incompat": 155, "incorpor": 89, "increas": [0, 131, 156, 159], "indent": 117, "independ": [76, 79, 82, 153], "index": [1, 37, 91, 93, 100, 111, 116, 120, 131, 154, 155, 160], "index_column": [141, 154, 155], "indic": [45, 85, 91, 100, 111, 116, 120, 126, 131, 133, 137, 152, 155, 160], "indicesfor": 35, "indici": 35, "individu": [0, 91, 102, 129, 154, 156, 159, 160], "industri": [0, 156, 159], "inelast": 125, "inelasticity_pr": 125, "inelasticityreconstruct": [123, 125], "inf": 129, "infer": [0, 1, 77, 78, 81, 83, 98, 126, 155, 156, 159], "inference_modul": [75, 80], "info": [149, 155], "inform": [18, 19, 21, 23, 31, 39, 42, 47, 49, 112, 115, 116, 117, 153, 154, 155, 158, 160], "ingest": [0, 1, 92, 156, 159], "inherit": [19, 21, 37, 93, 115, 133, 149, 153, 154, 155, 160], "init_fn": [141, 142], "init_predict_tqdm": 131, "init_test_tqdm": 131, "init_train_tqdm": 131, "init_validation_tqdm": 131, "init_valu": 90, "initail": 41, "initi": [36, 42, 44, 76, 79, 82, 90, 100, 106, 111, 116], "initial_st": 49, "initialis": [142, 155, 160], "injection_azimuth": [154, 155], "injection_bjorkeni": [154, 155], "injection_bjorkenx": [154, 155], "injection_column_depth": [154, 155], "injection_energi": [154, 155], "injection_interaction_typ": [154, 155], "injection_position_i": [154, 155], "injection_position_x": [154, 155], "injection_position_z": [154, 155], "injection_typ": [154, 155], "injection_zenith": [154, 155, 160], "innov": [0, 156, 159], "inptut": 116, "input": [76, 79, 81, 82, 83, 89, 90, 94, 96, 100, 101, 102, 103, 104, 105, 106, 107, 112, 113, 115, 116, 118, 120, 124, 126, 128, 129, 139, 144, 146, 153, 154, 155, 158, 160], "input_dim": [90, 160], "input_dir": [153, 158], "input_featur": [93, 112], "input_feature_nam": [93, 112, 113, 115], "input_fil": 76, "input_nam": 116, "ins": 93, "insert": 116, "insid": 154, "inspect": [155, 160], "inspir": 107, "instal": [152, 155], "instanc": [19, 21, 31, 37, 39, 41, 47, 49, 112, 117, 132, 140, 142, 153, 154, 155, 160], "instanti": [142, 153, 154, 158], "instead": [21, 31, 79, 118, 133, 155, 160], "int": [25, 28, 36, 45, 76, 79, 82, 89, 90, 91, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 137, 141, 144, 149, 153, 160], "integ": [100, 102, 103, 107, 133, 154, 155], "integr": 160, "intend": [100, 120, 155], "interact": [45, 125, 132, 154, 155], "interaction_kei": 132, "interaction_tim": 125, "interaction_time_pr": 125, "interaction_typ": 132, "interchang": [155, 160], "interfac": [0, 141, 142, 155, 156, 157, 158, 159], "interim": 153, "intermedi": [0, 1, 101, 155, 156, 159], "intern": [3, 17, 39], "internal_parquet_read": [3, 54], "interpol": [116, 131], "interpret": 124, "interv": [89, 155, 160], "intract": 154, "introduc": 155, "introduct": [118, 126], "intuit": [149, 160], "invers": 126, "invert": 126, "io": [118, 126, 152, 155], "iop": 155, "iopscienc": 155, "is_boost_class": [33, 37], "is_boost_enum": [33, 37], "is_cc_flag": 45, "is_gcd_fil": [136, 147], "is_graphnet_class": [138, 143], "is_graphnet_modul": [138, 143], "is_i3_fil": [136, 147], "is_icecube_class": [33, 37], "is_method": [33, 37], "is_typ": [33, 37], "iseecub": [86, 127], "isinst": 153, "isn": 37, "isol": 113, "issu": [155, 160], "its": [37, 45, 120, 154, 155, 160], "itself": [37, 126, 153, 155, 160], "iv": 133, "ivanorca115": [92, 96], "jammy_flow": [118, 126, 148], "job": 158, "join": [153, 155], "json": [34, 141, 154, 155], "just": [91, 153, 154, 155, 160], "k": [90, 100, 102, 104, 107, 110, 113, 120, 129, 133], "kaggl": [89, 90, 94, 104, 106], "kappa": [125, 133], "kappa_switch": 133, "karg": [117, 121], "keep": [19, 21, 36, 39, 41, 47, 49, 115, 153], "kei": [23, 34, 35, 37, 90, 91, 115, 132, 141, 142, 153, 154, 155, 158], "kept": 36, "key_padding_mask": 90, "keyword": [131, 139, 144], "kind": [133, 158], "km3net": [3, 17, 41, 42, 44, 45, 155, 160], "km3net_util": [40, 44], "km3netextractor": [17, 40, 42], "km3netfullpulseextractor": [40, 42], "km3netpulseextractor": [17, 40], "km3netread": [3, 54], "km3netroot": 41, "km3nettextractor": 41, "km3nettriggpulseextractor": [40, 42], "km3nettruthextractor": [17, 40], "knn_graph_batch": [86, 129], "knnedg": [109, 110], "knngraph": [108, 113, 154, 155, 160], "know": 158, "known": 91, "kv": 90, "kwarg": [36, 87, 90, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 120, 121, 122, 124, 125, 126, 128, 131, 133, 139, 141, 142, 149], "l": [116, 129], "label": [1, 25, 28, 98, 101, 112, 122, 126, 130, 141], "lai": 155, "lambda": [117, 155, 160], "land": 155, "larg": [0, 100, 133, 154, 156, 159], "larger": 153, "largest": 116, "last": [102, 107, 120, 124, 125, 126, 131, 160], "last_epoch": 131, "lastli": 158, "latent": [89, 100, 102, 104, 106, 107, 118, 120, 124, 125, 126, 128, 160], "latest": 155, "layer": [0, 86, 88, 91, 100, 101, 102, 103, 104, 106, 107, 118, 120, 124, 125, 126, 156, 159], "layer_s": 90, "layer_size_scal": 103, "layernorm": 90, "ldot": [87, 91], "lead": [154, 155], "learn": [0, 1, 81, 83, 118, 122, 124, 126, 131, 153, 155, 156, 157, 158, 159, 160], "learnabl": [90, 100, 101, 102, 103, 104, 105, 106, 107, 120, 126, 128, 160], "learnedtask": [123, 126], "least": [152, 154, 155], "leav": 131, "len": [116, 153, 154], "length": [37, 115, 116, 129, 131], "less": [155, 160], "let": [155, 158, 160], "level": [0, 18, 31, 36, 49, 87, 91, 106, 122, 149, 154, 155, 156, 158, 159], "leverag": 1, "lex_sort": [108, 116], "liabil": 133, "liabl": 133, "lib": [94, 95, 96, 97, 137], "licens": 133, "lift": 153, "light": 111, "lightn": [131, 155, 160], "lightningmodul": [89, 90, 117, 131, 149, 155, 160], "like": [19, 37, 91, 111, 118, 126, 129, 133, 150, 152, 154, 155, 157, 160], "limit": [115, 133], "line": [131, 137, 153, 154, 158], "linear": [102, 107, 116, 160], "linearli": 131, "liquid": 95, "liquido": [3, 17, 47, 86, 92, 153], "liquido_read": [3, 54], "liquido_v1": [92, 95], "liquidoread": 153, "list": [6, 18, 23, 31, 34, 36, 37, 45, 47, 49, 76, 77, 79, 81, 82, 83, 87, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 129, 131, 133, 141, 143, 144, 147, 149, 153, 154, 158], "list_all_submodul": [138, 143], "ljvmiranda921": 152, "load": [0, 77, 117, 121, 139, 141, 154, 155, 156, 158, 159], "load_from_checkpoint": [155, 160], "load_modul": 117, "load_state_dict": [117, 121, 155, 160], "loaded_model": [155, 160], "local": [87, 94, 95, 96, 97, 115, 137, 155, 157, 160], "locat": 116, "log": [0, 1, 125, 130, 131, 133, 136, 154, 155, 156, 159, 160], "log10": [126, 155, 160], "log_cmk": 133, "log_cmk_approx": 133, "log_cmk_exact": 133, "log_every_n_step": [98, 155, 160], "log_fold": [36, 149], "log_model": [155, 160], "logcmk": [130, 133], "logcoshloss": [130, 133, 155, 160], "logger": [19, 36, 76, 77, 98, 110, 117, 132, 136, 149, 155, 160], "loggeradapt": 149, "logic": 154, "logit": [124, 133, 160], "logrecord": 149, "long": 154, "longer": 115, "longev": [0, 156, 159], "longtensor": [87, 91, 129], "look": [23, 154, 155], "lookup": 143, "loop": [155, 160], "loss": [98, 112, 118, 122, 126, 131, 133, 137, 155, 160], "loss_factor": 133, "loss_funct": [1, 126, 130, 155, 160], "loss_weight": [112, 126, 155, 160], "loss_weight_column": [112, 141], "loss_weight_default_valu": [112, 141], "loss_weight_t": 141, "lossfunct": [126, 130, 133, 155], "lot": 152, "lower": [0, 155, 156, 159], "lr": [155, 160], "m": [111, 116, 133], "machin": 1, "made": [155, 160], "maeloss": [130, 133], "magnitud": [0, 156, 159], "mai": [77, 115, 126, 154, 155, 157, 160], "main": [1, 152, 155], "mainli": 37, "major": [122, 126], "make": [0, 115, 141, 142, 152, 153, 154, 155, 156, 158, 159, 160], "makedir": [155, 160], "manag": [0, 130, 153, 155, 156, 159], "mandatori": 89, "mangl": 37, "mani": [153, 155, 160], "manipul": [34, 108, 109, 114], "map": [22, 23, 94, 95, 96, 97, 112, 113, 126, 155, 158, 160], "mari": [0, 156, 159], "martin": 101, "mask": [112, 129], "masked_entri": 129, "master": 133, "match": [112, 147, 150, 153], "math": [1, 90, 136], "mathbb": 91, "mathbf": [87, 91], "matic": 126, "matric": 90, "matrix": [91, 110, 111, 116, 129, 133, 154], "max": [87, 90, 102, 104, 107, 133, 137, 155, 160], "max_activ": 115, "max_epoch": [98, 155, 160], "max_length": 115, "max_pool": [87, 91], "max_pool_x": [87, 91], "max_puls": 115, "max_rel_po": 128, "maximum": [91, 115, 116, 126, 128, 137], "mc": 23, "mc_truth": [19, 49, 154, 155], "mctree": [31, 35], "md": 155, "mean": [0, 86, 102, 104, 107, 116, 133, 142, 153, 154, 155, 156, 159, 160], "meaning": 89, "meant": [153, 155, 160], "measur": [115, 116, 129, 155, 158], "mechan": 90, "meet": 126, "member": [21, 23, 31, 37, 115, 141, 142, 149, 153, 158], "memori": 154, "mention": 155, "merchant": 133, "merg": [133, 153, 154, 158], "merge_fil": [153, 158], "messag": [90, 131, 149, 155], "messagepass": 90, "metaclass": [141, 142], "metaproject": 157, "meter": 155, "meth": 155, "method": [19, 21, 31, 33, 34, 35, 37, 77, 79, 90, 91, 93, 106, 116, 125, 133, 153, 155, 160], "metric": [100, 102, 104, 107, 111, 120, 131, 155, 160], "might": [154, 155, 160], "mileston": [131, 155, 160], "min": [87, 91, 102, 104, 107, 155, 160], "min_pool": [87, 88, 91], "min_pool_x": [87, 88, 91], "mind": 155, "minh": 101, "minim": [98, 118, 154, 155, 158, 160], "minimum": [115, 126], "minkowski": [108, 109], "minkowskiknnedg": [109, 111], "minu": 133, "mise": 133, "miss": 85, "mit": 133, "mix": 18, "ml": [0, 1, 156, 159], "mlp": [88, 89, 90, 102, 106, 107, 128, 160], "mlp_dim": [89, 128], "mlp_ratio": [90, 106], "mode": [98, 126], "model": [0, 1, 45, 77, 78, 81, 83, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 133, 137, 139, 141, 142, 144, 151, 153, 154, 156, 157, 158, 159], "model_config": [77, 81, 83, 136, 138, 139, 141, 144, 155, 160], "model_config_path": [155, 160], "model_hnl": 45, "model_nam": [81, 83], "modelconfig": [77, 81, 83, 117, 138, 141, 142], "modelconfigsav": 142, "modelconfigsaverabc": [138, 142], "modelconfigsavermeta": [138, 142], "modif": [155, 160], "modifi": [133, 155, 160], "modul": [0, 6, 17, 18, 37, 38, 42, 46, 76, 78, 79, 80, 81, 82, 85, 86, 89, 90, 92, 108, 109, 111, 112, 113, 114, 117, 119, 123, 127, 130, 136, 138, 141, 142, 143, 144, 148, 153, 155, 156, 159, 160], "modular": [0, 86, 153, 155, 156, 159, 160], "moduletyp": 143, "mont": 35, "more": [1, 100, 117, 141, 142, 149, 154, 155, 160], "most": [0, 1, 111, 126, 153, 156, 158, 159, 160], "mryab": 133, "mseloss": [130, 133], "msg": 149, "mulitpli": 133, "multi": [90, 102, 107, 122], "multiclassclassificationtask": [123, 124, 155], "multiheadattent": 90, "multiindex": 158, "multipl": [18, 89, 116, 131, 133, 141, 149, 160], "multipli": [90, 131], "multiprocess": 153, "muon": [25, 45, 154, 160], "must": [18, 87, 131, 133, 152, 153, 154, 155, 158], "my": [154, 155, 158], "my_custom_label": [154, 155], "my_fil": [153, 158], "my_geometry_t": 158, "my_outdir": [153, 158], "my_tabl": 158, "mycustomlabel": [154, 155], "mydetector": 158, "myexperi": 158, "myextractor": 158, "mygraphnetmodel": 160, "mymodel": 160, "mypi": 152, "mypicklewrit": 153, "myread": 158, "n": [19, 87, 91, 111, 129, 133, 154, 155, 158], "n_1": 91, "n_b": 91, "n_cluster": 116, "n_event": [153, 158], "n_featur": [89, 106, 128], "n_freq": 89, "n_head": [90, 100, 104], "n_pmt": 116, "n_puls": [115, 158], "n_rel": 106, "n_worker": [76, 79, 82], "name": [18, 19, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 42, 45, 47, 49, 77, 81, 83, 93, 94, 95, 96, 97, 112, 113, 115, 116, 118, 120, 126, 129, 132, 137, 139, 141, 142, 143, 144, 149, 152, 153, 154, 155, 158, 160], "namespac": [117, 141, 142], "nan": [45, 116], "narg": 137, "nb_dom": 129, "nb_input": [100, 101, 102, 103, 104, 105, 107, 120, 124, 125, 126, 155, 160], "nb_intermedi": 101, "nb_nearest_neighbour": [110, 111, 113, 154, 155, 160], "nb_neighbor": 90, "nb_neighbour": [100, 102, 104, 107, 120, 155, 160], "nb_output": [101, 103, 105, 115, 124, 125, 126, 155, 160], "nb_repeats_allow": 149, "nc": 45, "ndarrai": [31, 45, 112, 116, 153], "nearest": [100, 102, 104, 107, 110, 111, 113, 120, 129, 155, 160], "nearli": 160, "necessari": [0, 34, 152, 156, 159], "need": [0, 34, 86, 89, 117, 120, 133, 146, 153, 154, 155, 156, 157, 158, 159, 160], "negat": 91, "neighbour": [90, 100, 102, 104, 107, 110, 111, 113, 120, 129, 155, 160], "nest": 34, "nester": 34, "network": [1, 90, 101, 119, 160], "neural": [1, 119, 160], "neutral": 45, "neutrino": [0, 1, 21, 45, 49, 90, 104, 106, 116, 128, 154, 155, 156, 158, 159, 160], "new": [0, 1, 18, 90, 115, 139, 144, 152, 153, 155, 156, 159, 160], "new_features_nam": 115, "new_phras": 146, "nfdi": [0, 156, 159], "nn": [0, 86, 90, 110, 113, 156, 159, 160], "no_weight_decai": 106, "node": [86, 87, 91, 100, 101, 102, 104, 107, 108, 109, 110, 112, 113, 120, 129, 154, 155, 160], "node_definit": [112, 113, 154, 155, 160], "node_feature_nam": [115, 154, 155, 160], "node_rnn": [86, 100, 119], "node_truth": 141, "node_truth_t": [141, 155], "nodeasdomtimeseri": [114, 115], "nodedefinit": [112, 113, 114, 115, 155, 160], "nodesaspuls": [112, 114, 115, 154, 155, 160], "nodetimernn": 120, "nois": [22, 35, 45, 81, 155], "non": [34, 37, 100, 126, 133, 155], "none": [21, 23, 31, 35, 36, 37, 45, 76, 77, 83, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 107, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 126, 131, 133, 137, 139, 140, 141, 143, 147, 149, 153, 154, 155, 158, 160], "noninfring": 133, "norm_lay": 90, "normal": [90, 102, 107, 116, 118, 126, 158], "normalizing_flow": [1, 86], "normalizingflow": [86, 118, 126], "northeren": 25, "note": [116, 142, 155], "notebook": 152, "notic": [129, 133], "notimplementederror": 153, "now": [155, 158, 160], "np": 153, "null": [36, 154, 155, 160], "nullspliti3filt": [33, 36], "num": 137, "num_class": 133, "num_edg": 154, "num_edge_featur": 154, "num_featur": 154, "num_head": [90, 128], "num_lay": [120, 128], "num_nod": 154, "num_puls": 115, "num_register_token": 128, "num_row": [112, 154], "num_work": [153, 154, 155, 158, 160], "number": [0, 19, 76, 79, 82, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 120, 124, 125, 126, 128, 129, 131, 137, 153, 154, 155, 156, 158, 159], "numer": [126, 158], "numpi": 116, "numu": 132, "numucc": 132, "o": [0, 95, 126, 153, 155, 156, 157, 159, 160], "obj": [34, 37, 143], "object": [6, 23, 34, 37, 87, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 133, 137, 149, 154, 155, 160], "observ": 158, "observatori": 21, "obtain": [91, 133], "oerso": 103, "offer": 154, "offset": [115, 116], "ofintern": 38, "often": 154, "old_phras": 146, "om": [35, 37], "omit": 160, "on_fit_end": 131, "on_train_end": 121, "on_train_epoch_end": 131, "on_train_epoch_start": 131, "on_validation_end": 131, "onc": [149, 155, 157], "one": [21, 31, 81, 91, 141, 142, 147, 152, 153, 154, 155, 158, 160], "ones": [116, 121], "onli": [0, 1, 36, 86, 91, 100, 115, 116, 126, 139, 142, 144, 148, 153, 154, 155, 156, 158, 159, 160], "open": [0, 152, 153, 154, 155, 156, 157, 158, 159], "opensciencegrid": 157, "oper": [87, 90, 102], "oppos": 154, "optic": [37, 116], "optim": [98, 118, 121, 131, 155, 160], "optimis": [0, 1, 155, 156, 159, 160], "optimizer_class": [118, 155, 160], "optimizer_closur": 121, "optimizer_kwarg": [118, 155, 160], "optimizer_step": 121, "optimzi": 118, "option": [21, 31, 42, 77, 83, 89, 90, 91, 93, 94, 95, 96, 97, 100, 102, 104, 106, 107, 111, 112, 113, 115, 116, 117, 118, 120, 126, 131, 133, 136, 137, 139, 141, 147, 153, 154, 155, 158, 160], "orca": [86, 92, 97], "orca115": [92, 96], "orca150": [92, 97, 160], "orca150superdens": [92, 97], "orca6": [92, 96], "orca_150": 97, "order": [0, 34, 76, 79, 82, 87, 115, 129, 133, 155, 156, 159], "ordinari": 160, "ordinarili": 158, "org": [107, 110, 133, 155, 157], "orient": [0, 86, 156, 159], "origin": [106, 154, 160], "ot": 133, "other": [26, 110, 133, 152, 154, 155, 160], "otherwis": [37, 133], "our": [155, 158], "out": [102, 123, 133, 149, 152, 153, 154, 155, 158, 160], "out_featur": 90, "outdir": [153, 155, 158, 160], "outer": 34, "outlin": [158, 160], "output": [19, 76, 77, 89, 90, 98, 100, 101, 102, 103, 105, 107, 112, 115, 116, 120, 124, 125, 126, 141, 142, 153, 158, 160], "output_dim": [89, 160], "output_dir": 153, "output_file_path": 153, "output_fold": [6, 76], "outsid": 152, "over": [111, 115, 153, 154], "overal": 133, "overhead": 158, "overrid": 131, "overridden": 115, "overview": [0, 156, 159], "overwrit": [77, 131], "overwritten": [137, 139], "own": [152, 155], "ownership": 152, "p": [35, 133, 153], "p11003": 155, "packag": [0, 1, 126, 143, 147, 148, 152, 155, 156, 159, 160], "pad": [45, 112, 116, 129], "padding_valu": [25, 28, 45, 129], "pair": [21, 31, 89], "pairwis": [111, 129], "panda": [153, 155, 158, 160], "paper": 133, "paradigm": [155, 160], "parallel": [153, 158], "param": [39, 41, 47, 49], "paramet": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150], "parent": [34, 155], "parent_kei": 34, "parquet": [1, 3, 10, 39, 48, 49, 94, 95, 96, 97, 153, 154, 155, 158], "parquet_dataset": [10, 12, 154], "parquet_extractor": [17, 38], "parquet_to_sqlit": [3, 63], "parquet_writ": [3, 68], "parquetdataset": [153, 155], "parquetextractor": [38, 39, 47], "parquetwrit": [39, 153, 154, 158], "pars": [23, 136, 137, 138, 139, 144, 153], "part": [78, 153, 155, 157, 158], "particl": [31, 45, 132, 154, 155, 158], "particlenet": [86, 99], "particular": [133, 152], "particularli": [154, 155, 160], "partli": [0, 156, 159], "pass": [89, 90, 98, 100, 101, 102, 103, 104, 105, 106, 107, 112, 118, 120, 122, 126, 128, 131, 133, 152, 153, 154, 155, 158, 160], "path": [21, 31, 76, 79, 81, 82, 83, 90, 112, 117, 121, 131, 137, 139, 140, 141, 147, 153, 154, 155, 158, 160], "path_to_arrai": 158, "path_to_geometry_t": 158, "patienc": 137, "pd": [153, 155, 158], "pdf": [110, 118], "pdg": [45, 132], "pdg_id": 45, "penal": 133, "peopl": [155, 160], "pep257": 152, "pep8": 152, "per": [23, 90, 91, 100, 120, 126, 133, 154, 155], "percentil": [115, 116], "percentileclust": [114, 115], "perceptron": [90, 102, 107], "perform": [0, 87, 89, 90, 91, 98, 100, 102, 104, 107, 115, 118, 120, 121, 122, 124, 126, 155, 156, 159, 160], "permiss": 133, "permit": 133, "person": 133, "perturb": [112, 113], "perturbation_dict": [112, 113], "philosophi": [155, 160], "photon": [49, 154, 155], "phrase": 146, "phyic": 1, "physic": [0, 1, 21, 35, 37, 81, 83, 86, 123, 126, 154, 155, 156, 159, 160], "physicist": [0, 1, 155, 156, 159], "physicst": 1, "pick": 154, "pickl": [153, 155, 158, 160], "pid": [132, 141, 154], "pid_kei": 132, "piecewiselinearlr": [130, 131, 155, 160], "pip": [152, 157], "pisa": 27, "place": [89, 106, 146, 152], "plai": 1, "plane": [24, 133], "pleas": [79, 153, 154, 155, 158], "plot": 154, "plug": 1, "pmt": [91, 116, 154, 155], "point": [30, 118, 132, 133, 155, 158, 160], "pole": 104, "pone": 97, "pone_triangl": 97, "ponetriangl": [92, 97], "pool": [86, 87, 88, 100, 102, 104, 107], "pop_default": 137, "popular": 160, "port": 155, "portabl": [0, 155, 156, 159, 160], "portion": 133, "pos_i": 96, "pos_x": [96, 155], "pos_z": 96, "posit": [81, 89, 90, 91, 106, 116, 125, 128, 139, 144, 154, 158], "position_x_pr": 125, "position_y_pr": 125, "position_z_pr": 125, "positionreconstruct": [123, 125], "possibl": [0, 34, 152, 156, 158, 159], "post": [100, 102, 104, 107], "post_processing_layer_s": [100, 102, 104, 155, 160], "posterior": 118, "pow": [155, 160], "power": [153, 155, 160], "pr": 120, "practic": [0, 152, 156, 159], "pre": [0, 93, 112, 132, 152, 154, 155, 156, 159, 160], "pre_configur": [1, 3], "precis": 133, "precommit": 152, "pred": [98, 122, 126], "predict": [0, 26, 30, 32, 81, 83, 98, 101, 106, 118, 122, 124, 126, 133, 155, 156, 159, 160], "predict_as_datafram": [98, 155, 160], "prediction_column": [77, 83, 98], "prediction_kei": 133, "prediction_label": [98, 126, 155, 160], "prefer": 111, "prepar": [0, 133, 154, 156, 159], "preprocess": 155, "present": [21, 31, 36, 129, 137, 147, 148, 154, 160], "previou": [131, 155, 160], "primari": [154, 155], "primary_hadron_1_direction_phi": [154, 155], "primary_hadron_1_direction_theta": [154, 155], "primary_hadron_1_energi": [154, 155], "primary_hadron_1_position_i": [154, 155], "primary_hadron_1_position_x": [154, 155], "primary_hadron_1_position_z": [154, 155], "primary_hadron_1_typ": [154, 155], "primary_lepton_1_direction_phi": [154, 155], "primary_lepton_1_direction_theta": [154, 155], "primary_lepton_1_energi": [154, 155], "primary_lepton_1_position_i": [154, 155], "primary_lepton_1_position_x": [154, 155], "primary_lepton_1_position_z": [154, 155], "primary_lepton_1_typ": [154, 155], "principl": [1, 155], "print": [117, 131, 149], "prior": 154, "prioriti": 152, "pro": [155, 160], "probabl": [90, 133, 160], "problem": [0, 110, 152, 154, 155, 156, 159, 160], "process": [1, 81, 89, 93, 100, 102, 104, 107, 152, 153, 155, 160], "process_posit": 131, "produc": [89, 118, 122, 132, 154, 155], "product": 90, "programm": [0, 156, 159], "progress": 131, "progressbar": [130, 131, 155, 160], "proj_drop": 90, "project": [0, 90, 152, 155, 156, 159, 160], "prometheu": [3, 17, 49, 86, 92, 154, 155, 160], "prometheus_dataset": [1, 72], "prometheus_extractor": [17, 48], "prometheus_read": [3, 54], "prometheusextractor": [48, 49], "prometheusfeatureextractor": [48, 49], "prometheustruthextractor": [48, 49], "prompt": 155, "prone": 155, "proof": [155, 160], "properti": [19, 26, 37, 91, 93, 98, 105, 115, 116, 126, 132, 140, 149, 153], "protocol": 153, "prototyp": 95, "proven": [19, 21, 39, 41, 47, 49, 153], "provid": [0, 1, 81, 86, 106, 112, 117, 118, 133, 152, 153, 154, 155, 156, 159, 160], "pth": [155, 160], "public": 93, "publish": [133, 155, 160], "puls": [18, 22, 23, 35, 37, 42, 49, 81, 87, 91, 106, 112, 115, 116, 122, 128, 129, 154, 155, 158, 160], "pulsemap": [22, 81, 83, 141, 154, 155], "pulsemap_extractor": [81, 83], "pulseseri": 35, "pulsmap": [81, 83], "punch4nfdi": [0, 156, 159], "pure": [19, 20, 23, 37], "purpos": [0, 86, 133, 156, 158, 159], "put": [155, 160], "py": [133, 155], "py3": 157, "pydant": [139, 141, 142, 144], "pydantic_cor": [139, 144], "pydocstyl": 152, "pyg": [154, 155, 160], "pylint": 152, "python": [0, 1, 19, 20, 23, 34, 37, 152, 155, 156, 157, 159, 160], "python3": [94, 95, 96, 97, 137], "pytorch": [131, 155, 157, 160], "pytorch_lightn": [98, 131, 149, 155, 160], "pytorchlightn": 155, "q": 90, "qk_scale": 90, "qkv_bia": 90, "qualiti": [0, 155, 156, 159], "quantiti": [27, 126, 129, 155], "queri": [90, 154, 155], "query_t": 154, "queso": 28, "question": 155, "quick": [116, 155], "r": [91, 110, 153, 155, 157, 158], "radial": 110, "radialedg": [109, 110], "radiat": [115, 116, 155, 160], "radiu": [110, 155], "rais": [21, 23, 31, 117, 118, 139, 144, 153], "random": [3, 63, 115, 141, 154, 155], "randomli": [112, 113, 142, 155, 160], "rang": [126, 156, 158, 159, 160], "rare": 153, "rasmu": [0, 103, 156, 159], "rate": [118, 131], "rather": [126, 149, 155, 160], "ratio": [90, 106], "raw": [0, 115, 116, 154, 155, 156, 158, 159, 160], "re": [140, 154, 155, 158, 160], "reach": [154, 158], "read": [0, 34, 93, 102, 123, 153, 154, 155, 156, 158, 159], "read_csv": 158, "read_sql": 155, "readabl": 155, "reader": [1, 3, 158], "readi": [158, 160], "readm": 155, "readout": [100, 102, 104, 107], "readout_layer_s": [100, 102, 104, 107, 155, 160], "readthedoc": 155, "receiv": [0, 156, 159, 160], "reciev": [153, 158, 160], "recommend": [155, 157, 158, 160], "reconstruct": [0, 1, 22, 24, 25, 29, 30, 32, 78, 86, 104, 120, 123, 126, 154, 155, 156, 159], "record": 149, "recov": 126, "recreat": [154, 155, 160], "recurr": 119, "recurs": [23, 37, 117, 143, 147], "reduc": [155, 160], "reduce_opt": 87, "refer": [97, 118, 141, 154, 155, 158, 160], "refresh_r": 131, "regardless": [154, 155, 160], "regist": 128, "regress": 122, "regular": [37, 90, 155, 160], "rel": [90, 106, 128], "rel_pos_bia": 90, "rel_pos_bucket": 128, "relat": [147, 158], "relev": [1, 37, 147, 152], "reli": 118, "reload": 160, "relu": 107, "remain": 154, "remov": [45, 112, 137, 158], "renam": [79, 146], "rename_state_dict_entri": [136, 146], "repeat": [112, 149], "repeat_label": 112, "repeatfilt": [136, 149], "replac": [93, 94, 95, 96, 97, 146], "replace_with_ident": [93, 94, 95, 96, 97], "repo": 152, "repositori": 152, "repres": [91, 100, 112, 113, 115, 116, 129, 139, 141, 142, 153, 154, 155, 158, 160], "represent": [37, 89, 90, 91, 113, 117, 118, 120, 154, 155, 158, 160], "reproduc": [141, 142, 160], "repurpos": 160, "requir": [0, 21, 27, 39, 49, 115, 124, 126, 133, 152, 153, 154, 155, 156, 157, 158, 159, 160], "requires_icecub": [136, 148], "research": [0, 155, 156, 159], "reset": 90, "reset_paramet": 90, "respect": [155, 158], "respons": [154, 155], "restrict": [126, 133, 160], "result": [91, 113, 116, 131, 133, 143, 155, 158, 160], "retriev": [93, 153, 154], "retro": 29, "return": [18, 19, 21, 31, 34, 35, 37, 45, 76, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 153, 154, 155, 158, 160], "return_discard": 37, "return_el": 133, "reusabl": [0, 156, 159], "reuseabl": [155, 160], "review": 152, "rhel_7_x86_64": 157, "right": [133, 155], "rmse": 133, "rmseloss": [130, 133], "rmsevonmisesfisher3dloss": [130, 133], "rnn": [1, 86, 100, 120], "rnn_dropout": 100, "rnn_dynedg": 100, "rnn_hidden_s": 100, "rnn_layer": 100, "rnn_tito": [86, 99], "role": 160, "root": 133, "roughli": 154, "row": [112, 116, 129, 154, 155, 158, 160], "run": [1, 45, 76, 78, 79, 82, 153, 155, 157, 158, 160], "run_id": 45, "runner": [94, 95, 96, 97, 137], "runtim": [132, 157], "runtimeerror": [21, 31], "ryabinin": 133, "sai": [155, 160], "same": [18, 37, 87, 91, 116, 124, 129, 131, 143, 149, 154, 155, 160], "sampl": [90, 112, 113, 115, 155, 160], "sample_puls": 115, "sampler": [3, 10], "satisfi": [0, 153, 156, 159], "save": [19, 21, 34, 39, 41, 47, 49, 117, 131, 133, 139, 140, 141, 142, 153, 155, 158], "save_config": [140, 155, 160], "save_dataset_config": [138, 141], "save_dir": [131, 155, 160], "save_fil": 153, "save_method": [153, 158], "save_model_config": [138, 142], "save_state_dict": [117, 155, 160], "scalabl": 154, "scalar": [19, 129, 133], "scale": [89, 90, 103, 106, 111, 112, 115, 116, 126, 128, 133, 154, 160], "scaled_emb": [106, 128], "scatter": [115, 116], "schedul": 118, "scheduler_class": [118, 155, 160], "scheduler_config": [118, 155, 160], "scheduler_kwarg": [118, 155, 160], "schema": 155, "scheme": [100, 102, 104, 107, 153], "scientif": [0, 1, 156, 159], "scope": 152, "script": [155, 160], "search": [147, 153], "sec": 133, "second": 111, "section": 155, "see": [89, 100, 110, 112, 118, 126, 131, 152, 154, 155, 157], "seed": [112, 113, 141, 154, 155], "seen": 89, "select": [28, 36, 115, 141, 152, 155, 158], "self": [98, 112, 118, 122, 139, 144, 153, 154, 155, 158, 160], "sell": 133, "send": 126, "sensor": [93, 112, 116, 154, 155, 158, 160], "sensor_i": 158, "sensor_id": [94, 96, 97, 158], "sensor_id_column": [94, 95, 96, 97, 158], "sensor_index_nam": 93, "sensor_mask": 112, "sensor_pos_i": [97, 154, 155, 160], "sensor_pos_x": [97, 154, 155, 160], "sensor_pos_z": [97, 154, 155, 160], "sensor_position_nam": 93, "sensor_string_id": 97, "sensor_tim": 158, "sensor_x": [154, 158], "sensor_z": 158, "separ": [34, 111, 131, 155, 157], "seper": [120, 154], "seq_length": [89, 106, 128, 129], "sequenc": [76, 79, 82, 89, 90, 116, 129, 155, 160], "seri": [22, 23, 35, 37, 81, 100, 115, 120, 154, 155, 160], "serial": [153, 154], "serialis": [33, 34, 155, 160], "serv": 154, "session": [141, 142, 154, 155, 160], "set": [3, 6, 21, 23, 31, 89, 90, 106, 115, 116, 117, 126, 132, 152, 153, 155, 158, 160], "set_gcd": [21, 31], "set_index": 158, "set_number_of_input": 115, "set_output_feature_nam": 115, "set_verbose_print_recurs": 117, "setlevel": 149, "setup": [131, 157], "setuptool": 157, "sever": [155, 160], "sh": 157, "shall": 133, "shape": [19, 111, 112, 115, 129, 133, 153, 154], "share": [98, 118, 122, 155, 160], "shared_step": [98, 118, 122], "shell": 157, "shift": 45, "should": [19, 21, 34, 77, 90, 91, 93, 94, 95, 96, 97, 100, 106, 112, 113, 120, 129, 133, 139, 141, 142, 144, 152, 153, 154, 155, 157, 158, 160], "show": [131, 155], "shown": 155, "shuffl": 154, "sigmoid": 160, "sign": 133, "signal": [81, 160], "signatur": [23, 37], "signific": 154, "significantli": 154, "signup": 155, "similar": [23, 37, 115, 155, 160], "similarli": [37, 153, 154, 155, 160], "simpl": [0, 86, 98, 155, 156, 159, 160], "simplecoarsen": 87, "simplest": [155, 160], "simpli": [155, 160], "simul": [35, 49, 81, 155, 158], "sinc": [81, 133, 155], "singl": [18, 91, 102, 107, 116, 132, 141, 142, 153, 154, 155, 158, 160], "single_event_as_arrai": 116, "sinusoid": [89, 106, 128], "sinusoidalposemb": [88, 89], "sipm_i": 95, "sipm_id": 95, "sipm_x": 95, "sipm_z": 95, "situat": 152, "size": [89, 90, 91, 100, 102, 103, 104, 106, 107, 129, 137, 154], "skip": [36, 102, 107, 155], "skip_readout": [102, 107], "sklearn": [155, 160], "sk\u0142odowska": [0, 156, 159], "slack": 155, "slice": [90, 102, 107], "small": [133, 154, 155, 160], "smaller": 153, "smooth": 152, "snippet": [155, 160], "so": [45, 133, 154, 155, 157, 158, 160], "soft": 89, "softmax": 133, "softwar": [0, 133, 156, 159], "solut": [89, 90, 104, 106, 152], "solv": [1, 152, 160], "some": [45, 112, 116, 154, 155], "someth": [155, 160], "somewhat": 155, "sort": [112, 116], "sort_bi": 112, "sourc": [0, 6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154, 155, 156, 159], "south": 104, "space": [89, 110, 111, 126], "space_coord": 111, "spacetim": 89, "spacetimeencod": [88, 89], "sparsetensor": 90, "spatial": 116, "special": [23, 81, 120, 129], "specialis": [155, 160], "specif": [0, 1, 6, 17, 19, 22, 37, 77, 80, 82, 85, 87, 91, 92, 93, 94, 95, 96, 97, 100, 105, 110, 112, 115, 119, 123, 124, 125, 126, 127, 133, 152, 153, 154, 155, 156, 158, 159, 160], "specifi": [87, 116, 118, 126, 131, 154, 155, 158, 160], "speed": [81, 111, 154], "sphere": 110, "spite": 133, "splinemp": 30, "split": [0, 36, 87, 156, 159], "sqlite": [1, 3, 10, 45, 154, 155], "sqlite3": 155, "sqlite_dataset": [10, 15, 154], "sqlite_util": [3, 63], "sqlite_writ": [3, 68], "sqlitedatas": 154, "sqlitedataset": 153, "sqlitewrit": [153, 154], "squar": 133, "src": 155, "stabl": [125, 126], "stage": 131, "standalon": 120, "standard": [0, 36, 77, 94, 95, 96, 97, 100, 112, 113, 115, 116, 118, 121, 122, 126, 137, 152, 155, 156, 158, 159, 160], "standard_argu": 137, "standard_averaged_model": [1, 86], "standard_model": [1, 86, 155], "standardaveragedmodel": [86, 121], "standardaveragemodel": 121, "standardflowtask": [123, 126], "standardis": 92, "standardlearnedtask": [123, 124, 125, 126, 160], "standardmodel": [86, 98, 121, 122], "start": [31, 152, 155, 158, 160], "state": [0, 77, 100, 120, 146, 156, 159], "state_dict": [77, 81, 83, 117, 121, 146, 155], "static": [133, 152], "statist": 116, "std": 91, "std_pool": [88, 91], "std_pool_x": [88, 91], "stdout": 131, "step": [98, 118, 121, 122, 129, 131, 155, 158, 160], "still": 141, "stochast": 90, "stop": [31, 131, 137], "store": [132, 153, 154, 155, 158, 160], "str": [6, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 39, 41, 42, 45, 47, 49, 76, 77, 79, 81, 82, 83, 90, 91, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 107, 112, 113, 115, 116, 117, 118, 121, 126, 129, 131, 132, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 153, 158], "straightforward": 154, "strategi": [155, 160], "stream": 36, "stream_handl": 149, "streamhandl": 149, "streamlin": 1, "string": [34, 45, 91, 93, 94, 112, 117, 118, 126, 139, 155, 158, 160], "string_id": [96, 158], "string_id_column": [94, 95, 96, 97, 158], "string_index_nam": 93, "string_mask": 112, "string_select": 141, "string_selection_resolv": [3, 63], "strongli": [155, 160], "structur": [98, 143, 153, 154, 155, 160], "style": 152, "sub": 155, "subclass": [0, 86, 98, 153, 154, 155, 156, 159, 160], "subev": 36, "subeventstreami3filt": [33, 36], "subject": [106, 133], "sublicens": 133, "submit": 106, "submodul": [1, 3, 10, 12, 15, 17, 20, 33, 38, 40, 44, 46, 48, 50, 52, 54, 61, 63, 68, 72, 75, 78, 80, 84, 86, 88, 92, 99, 108, 109, 114, 119, 123, 127, 130, 136, 138, 143], "subpackag": [1, 3, 10, 17, 20, 40, 75, 86, 108, 136], "subsampl": 154, "subsequ": 155, "subset": [90, 100, 102, 104, 107, 120, 155], "substanti": 133, "suggest": [98, 133, 155], "suit": [0, 118, 126, 155, 156, 159], "suitabl": [1, 158], "sum": [87, 91, 98, 102, 104, 107, 116, 122, 155, 160], "sum_pool": [87, 88, 91], "sum_pool_and_distribut": [88, 91], "sum_pool_x": [87, 88, 91], "summar": [81, 83, 115, 116], "summari": [115, 116], "summaris": [155, 160], "summariz": 160, "summarization_indic": 116, "super": [153, 154, 155, 160], "supervis": [122, 126, 160], "support": [0, 37, 45, 126, 152, 153, 154, 155, 156, 159], "suppos": [116, 154, 158], "sure": [152, 153], "swa": 121, "swapabl": 155, "switch": [133, 155, 160], "syntax": [98, 133, 154, 155], "system": [147, 155, 160], "t": [37, 131, 133, 153, 154, 155, 158, 160], "tabl": [18, 19, 21, 39, 41, 47, 49, 93, 112, 153, 154, 155], "table_nam": 49, "table_without_index": 158, "tackl": 160, "tag": 152, "take": [37, 91, 116, 120, 152, 154], "talk": 155, "target": [98, 118, 124, 126, 133, 144, 155, 160], "target_label": [98, 118, 126, 155, 160], "target_norm": 126, "target_pr": [124, 160], "task": [0, 1, 86, 98, 122, 124, 125, 133, 152, 155, 156, 159], "team": [152, 154, 155, 157, 158, 160], "technic": [0, 156, 158, 159], "techniqu": [0, 156, 159, 160], "telescop": [0, 1, 155, 156, 158, 159, 160], "tensor": [77, 87, 89, 90, 91, 93, 98, 100, 101, 102, 103, 104, 105, 106, 107, 111, 115, 116, 118, 120, 121, 122, 126, 128, 129, 133, 146, 150, 154, 155, 158, 160], "term": [90, 133, 160], "termin": 155, "test": [126, 141, 148, 152, 154, 155, 160], "test_dataset": [1, 72], "test_funct": 148, "test_select": [141, 154, 155], "than": [0, 115, 126, 149, 154, 155, 156, 159, 160], "thei": [76, 79, 82, 115, 153, 154, 155, 160], "them": [0, 1, 34, 45, 77, 86, 102, 126, 154, 155, 156, 158, 159, 160], "themselv": [1, 141, 142, 155, 160], "therebi": [1, 141, 142, 155, 160], "therefor": [34, 153, 154, 155, 158, 160], "thi": [0, 18, 19, 21, 23, 37, 39, 41, 47, 49, 78, 81, 86, 89, 91, 98, 100, 102, 106, 107, 111, 112, 113, 115, 116, 118, 120, 122, 124, 125, 126, 129, 131, 133, 139, 141, 142, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "thing": 155, "thoglu": [118, 126], "those": [21, 31, 154, 155], "three": [107, 116, 133, 160], "threshold": [0, 81, 156, 159], "through": [0, 116, 124, 125, 126, 133, 153, 155, 156, 159, 160], "throw": 153, "thu": [142, 160], "ti": 154, "time": [0, 45, 87, 89, 91, 100, 111, 115, 116, 120, 125, 129, 149, 154, 155, 156, 158, 159], "time_column": 115, "time_coord": 111, "time_lik": 111, "time_like_weight": 111, "time_series_column": [100, 120], "time_window": 87, "timereconstruct": [123, 125], "tini": 155, "tito": [90, 100, 104], "to_config": 160, "to_csv": [155, 160], "to_parquet": 158, "todo": 155, "togeth": [0, 86, 110, 133, 156, 159], "token": 128, "too": [155, 160], "tool": [0, 1, 156, 159], "top": 160, "torch": [0, 86, 90, 112, 113, 117, 118, 148, 154, 155, 156, 157, 158, 159, 160], "torch_cpu": 157, "torch_geometr": [91, 129, 154, 155, 160], "torch_lightn": 160, "tort": 133, "total": [116, 129, 154, 155, 158], "total_energi": [154, 155, 160], "tqdmprogressbar": 131, "track": [0, 19, 21, 25, 39, 41, 47, 49, 125, 130, 132, 152, 153, 155, 156, 159], "tradit": [0, 156, 159], "train": [0, 1, 81, 90, 98, 106, 112, 118, 121, 122, 129, 131, 132, 133, 137, 141, 142, 144, 151, 153, 154, 155, 156, 158, 159], "train_batch": [98, 121], "train_dataload": [98, 155, 160], "train_ev": 126, "train_select": [141, 154, 155], "trainabl": 142, "trainer": [98, 131, 155, 160], "trainer_kwarg": 98, "training_config": [136, 138, 155, 160], "training_example_data_sqlit": [137, 154, 155, 160], "training_step": [98, 121], "trainingconfig": [138, 144, 155, 160], "transform": [1, 45, 86, 90, 91, 104, 106, 120, 126, 128, 155, 160], "transform_infer": [126, 155, 160], "transform_prediction_and_target": [126, 155, 160], "transform_support": [126, 155, 160], "transform_target": [126, 155, 160], "transit": 146, "transpar": [141, 142, 152, 155, 160], "transpos": 34, "transpose_list_of_dict": [33, 34], "traverse_and_appli": [138, 143], "treat": [100, 120], "tree": [23, 155], "tri": [23, 37], "triangl": 97, "trident": 97, "trident1211": [92, 97], "trigger": [23, 42, 154, 155, 160], "trivial": [37, 126], "true": [36, 81, 100, 102, 104, 106, 107, 112, 115, 117, 131, 133, 147, 153, 154, 155, 160], "trust": [117, 155, 160], "truth": [22, 31, 49, 112, 126, 141, 154, 158, 160], "truth_dict": 112, "truth_label": 154, "truth_tabl": [141, 154, 155], "truthdata": 47, "try": [37, 153], "tum": [25, 32], "tupl": [35, 37, 45, 90, 100, 102, 104, 107, 116, 126, 129, 137, 146], "turn": [116, 152], "tutorial_output": [155, 160], "two": [102, 131, 133, 153, 154, 155, 158], "txt": 157, "type": [0, 20, 21, 31, 33, 34, 35, 45, 47, 49, 76, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 133, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159], "typic": [0, 34, 120, 154, 156, 158, 159], "u": [154, 158], "ultra": 154, "unaccur": 133, "unambigu": [141, 142], "unbatch_edge_index": [86, 87], "uncertainti": [125, 155, 160], "uncompress": 154, "under": [0, 155, 156, 158, 159, 160], "unfamiliar": 160, "union": [0, 23, 34, 37, 76, 77, 79, 81, 82, 83, 87, 90, 91, 98, 100, 102, 107, 112, 113, 116, 118, 122, 126, 141, 144, 147, 153, 156, 158, 159], "uniqu": [45, 115, 116, 129, 141, 155, 158, 160], "unit": [0, 111, 148, 152, 156, 159], "univers": 104, "unlik": 154, "unscal": 160, "untransform": 124, "up": [0, 81, 152, 156, 159], "updat": [107, 120, 121, 129, 131, 155, 157, 160], "upgrad": [22, 94, 155, 157], "upon": [118, 160], "us": [0, 1, 2, 18, 19, 21, 26, 31, 33, 34, 39, 41, 47, 49, 77, 79, 81, 83, 86, 89, 90, 91, 93, 98, 100, 102, 103, 104, 106, 107, 110, 112, 113, 115, 116, 117, 118, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 136, 137, 138, 141, 142, 143, 148, 149, 152, 153, 156, 157, 158, 159], "usabl": [0, 156, 159], "usag": [118, 126, 137], "use_global_featur": [100, 104], "use_post_processing_lay": [100, 104], "user": [0, 86, 98, 131, 154, 155, 156, 157, 159, 160], "usual": 154, "util": [1, 3, 17, 20, 34, 35, 36, 37, 40, 45, 86, 108, 130, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 157, 160], "v": 90, "v1": 157, "v4": 157, "val_batch": [98, 121], "val_dataload": 98, "valid": [37, 98, 118, 121, 122, 126, 131, 133, 137, 139, 144, 154, 155, 160], "validate_task": [98, 118, 122], "validation_step": [98, 121], "validationerror": [139, 144], "valu": [31, 34, 45, 90, 91, 107, 111, 112, 113, 116, 126, 129, 132, 133, 137, 139, 160], "valueerror": [23, 117, 118], "var": 125, "var1": 19, "var_n": 19, "variabl": [19, 21, 23, 31, 37, 102, 115, 116, 129, 149, 153, 158, 160], "varieti": 155, "variou": [1, 78, 155], "vast": [122, 126], "vector": [45, 87, 90, 91, 133, 153, 160], "verbos": [98, 122, 131], "verbose_print": 117, "veri": [154, 155, 160], "verifi": [98, 118, 122], "versa": 131, "version": [91, 116, 126, 131, 152, 155, 160], "vertex": [125, 155], "vertexreconstruct": [123, 125], "viabl": 158, "vice": 131, "virtual": 157, "visibl": 125, "visible_inelast": 125, "visible_inelasticity_pr": 125, "visibleinelasticityreconstruct": [123, 125], "visit": 158, "vmf": 125, "vmf_loss": 133, "vmfs_factor": 133, "volum": 31, "von": 133, "vonmisesfisher2dloss": [130, 133, 155, 160], "vonmisesfisher3dloss": [130, 133], "vonmisesfisherloss": [130, 133], "w": [155, 160], "wa": [0, 106, 154, 155, 156, 158, 159, 160], "wai": [37, 122, 152, 155, 158, 160], "wandb": [155, 160], "wandb_dir": [155, 160], "wandb_logg": [155, 160], "wandblogg": [155, 160], "want": [154, 155, 157, 158, 160], "warn": [149, 155], "warning_onc": [149, 155], "warranti": 133, "waterdemo81": [92, 97], "wb": 153, "we": [34, 37, 116, 118, 152, 155, 157, 158, 160], "weight": [81, 83, 90, 106, 112, 116, 126, 133, 142, 155, 160], "weight_fit": [1, 130], "well": [152, 155, 160], "wether": 107, "what": [1, 89, 112, 152, 155, 160], "whatev": 155, "wheel": 157, "when": [0, 34, 36, 81, 90, 100, 102, 104, 107, 120, 132, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160], "whenev": 157, "where": [19, 112, 113, 115, 116, 120, 129, 132, 153, 154, 155, 158, 160], "wherea": 154, "whether": [35, 37, 89, 90, 100, 102, 104, 106, 107, 117, 128, 133, 143, 147, 148, 155], "which": [0, 19, 21, 22, 31, 35, 39, 41, 47, 49, 76, 78, 79, 82, 87, 91, 102, 107, 112, 113, 116, 117, 118, 124, 126, 129, 133, 137, 153, 154, 155, 156, 159, 160], "while": [0, 23, 98, 131, 152, 154, 156, 159], "who": [146, 155, 160], "whom": 133, "whose": 81, "wide": [118, 160], "willing": [154, 158], "window": [87, 154, 155], "wise": 91, "wish": [0, 76, 152, 156, 159], "with_standard_argu": 137, "within": [31, 45, 87, 90, 91, 102, 107, 110, 155, 160], "without": [1, 110, 113, 115, 133, 154, 157], "work": [0, 35, 100, 152, 153, 154, 155, 156, 159, 160], "worker": [6, 76, 79, 82, 137, 149], "workflow": [0, 156, 159], "would": [152, 154, 155, 158, 160], "wrap": [131, 141, 142], "write": [81, 83, 153, 155, 160], "writer": [1, 3, 158], "written": [76, 153], "wrt": 126, "www": 155, "x": [31, 89, 90, 91, 94, 111, 115, 116, 120, 126, 129, 133, 154, 155, 158, 160], "x8": 154, "x_i": 90, "x_j": 90, "xyz": [93, 94, 95, 96, 97, 115, 116, 154, 158], "xyz_coord": 129, "xyz_dir_to_zen_az": [44, 45], "xyzt": 129, "y": [31, 89, 94, 111, 129], "yaml": [139, 140, 155], "yet": 116, "yield": [0, 102, 107, 133, 156, 159], "yml": [137, 141, 142, 154, 155, 160], "you": [76, 89, 118, 141, 142, 152, 154, 155, 157, 158, 160], "your": [113, 118, 152, 153, 154, 155, 157], "yourself": 152, "z": [31, 89, 94, 111, 115, 116, 129], "z_name": 115, "z_offset": [115, 116], "z_scale": [115, 116], "zenith": [45, 125, 132, 155, 160], "zenith_kappa": 125, "zenith_kei": 132, "zenith_pr": 125, "zenithreconstruct": [123, 125], "zenithreconstructionwithkappa": [123, 125, 155, 160], "zero": 45, "\u00f8rs\u00f8e": [0, 156, 159]}, "titles": ["Usage", "API", "constants", "data", "constants", "curated_datamodule", "dataclasses", "dataconverter", "dataloader", "datamodule", "dataset", "dataset", "parquet", "parquet_dataset", "samplers", "sqlite", "sqlite_dataset", "extractors", "combine_extractors", "extractor", "icecube", "i3extractor", "i3featureextractor", "i3genericextractor", "i3hybridrecoextractor", "i3ntmuonlabelsextractor", "i3particleextractor", "i3pisaextractor", "i3quesoextractor", "i3retroextractor", "i3splinempeextractor", "i3truthextractor", "i3tumextractor", "utilities", "collections", "frames", "i3_filters", "types", "internal", "parquet_extractor", "km3net", "km3netextractor", "km3netpulseextractor", "km3nettruthextractor", "utilities", "km3net_utilities", "liquido", "h5_extractor", "prometheus", "prometheus_extractor", "parquet", "deprecated_methods", "pre_configured", "dataconverters", "readers", "graphnet_file_reader", "i3reader", "internal_parquet_reader", "km3netreader", "liquido_reader", "prometheus_reader", "sqlite", "deprecated_methods", "utilities", "parquet_to_sqlite", "random", "sqlite_utilities", "string_selection_resolver", "writers", "graphnet_writer", "parquet_writer", "sqlite_writer", "datasets", "prometheus_datasets", "test_dataset", "deployment", "deployer", "deployment_module", "i3modules", "deprecated_methods", "icecube", "cleaning_module", "i3deployer", "inference_module", "exceptions", "exceptions", "models", "coarsening", "components", "embedding", "layers", "pool", "detector", "detector", "icecube", "liquido", "orca", "prometheus", "easy_model", "gnn", "RNN_tito", "convnet", "dynedge", "dynedge_jinst", "dynedge_kaggle_tito", "gnn", "icemix", "particlenet", "graphs", "edges", "edges", "minkowski", "graph_definition", "graphs", "nodes", "nodes", "utils", "model", "normalizing_flow", "rnn", "node_rnn", "standard_averaged_model", "standard_model", "task", "classification", "reconstruction", "task", "transformer", "iseecube", "utils", "training", "callbacks", "labels", "loss_functions", "utils", "weight_fitting", "utilities", "argparse", "config", "base_config", "configurable", "dataset_config", "model_config", "parsing", "training_config", "decorators", "deprecation_tools", "filesys", "imports", "logging", "maths", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 158, "2": 158, "In": [154, 160], "The": [155, 160], "To": 152, "acknowledg": 0, "ad": [154, 155, 158, 160], "advanc": 155, "api": 1, "appendix": 155, "appli": 158, "argpars": 137, "backbon": 160, "base_config": 139, "befor": 158, "callback": 131, "checkpoint": 160, "choos": 154, "class": [155, 158, 160], "classif": 124, "cleaning_modul": 81, "coarsen": 87, "code": 152, "collect": 34, "combin": [154, 155], "combine_extractor": 18, "compon": 88, "config": 138, "configur": 140, "constant": [2, 4], "content": 155, "contribut": 152, "convent": 152, "convers": 153, "convnet": 101, "creat": 155, "curated_datamodul": 5, "custom": [154, 155], "cvmf": 157, "data": [3, 153, 158], "dataclass": 6, "dataconfig": 155, "dataconvert": [7, 53, 153], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 72, 154, 155], "dataset_config": 141, "datasetconfig": 155, "decor": 145, "deploy": [75, 76], "deployment_modul": 77, "deprecated_method": [51, 62, 79], "deprecation_tool": 146, "detector": [92, 93, 158], "dynedg": 102, "dynedge_jinst": 103, "dynedge_kaggle_tito": 104, "easy_model": 98, "edg": [109, 110], "embed": 89, "energi": 160, "event": 154, "exampl": [155, 158, 160], "except": [84, 85], "experi": [158, 160], "extractor": [17, 19, 153, 158], "filesi": 147, "frame": 35, "function": 155, "geometri": 158, "github": 152, "gnn": [99, 105], "graph": [108, 113], "graph_definit": 112, "graphdefinit": 160, "graphnet": 155, "graphnet_file_read": 55, "graphnet_writ": 69, "graphnetfileread": 158, "graphnetgraphnet": [152, 153, 154, 156, 158, 159, 160], "h5_extractor": 47, "i3_filt": 36, "i3deploy": 82, "i3extractor": 21, "i3featureextractor": 22, "i3genericextractor": 23, "i3hybridrecoextractor": 24, "i3modul": 78, "i3ntmuonlabelsextractor": 25, "i3particleextractor": 26, "i3pisaextractor": 27, "i3quesoextractor": 28, "i3read": 56, "i3retroextractor": 29, "i3splinempeextractor": 30, "i3truthextractor": 31, "i3tumextractor": 32, "icecub": [20, 80, 94, 157], "icemix": 106, "implement": [154, 158], "import": 148, "index": 158, "inference_modul": 83, "instal": 157, "instanti": 160, "integr": 158, "intern": 38, "internal_parquet_read": 57, "introduct": 155, "iseecub": 128, "issu": 152, "km3net": 40, "km3net_util": 45, "km3netextractor": 41, "km3netpulseextractor": 42, "km3netread": 58, "km3nettruthextractor": 43, "label": [132, 154, 155], "layer": 90, "liquido": [46, 95], "liquido_read": 59, "load": 160, "log": 149, "loss_funct": 133, "math": 150, "minkowski": 111, "model": [86, 117, 155, 160], "model_config": 142, "modelconfig": [155, 160], "multi": 158, "multipl": [154, 155], "new": [154, 158], "node": [114, 115], "node_rnn": 120, "normalizing_flow": 118, "orca": 96, "overview": 155, "own": [158, 160], "parquet": [12, 50], "parquet_dataset": 13, "parquet_extractor": 39, "parquet_to_sqlit": 64, "parquet_writ": 70, "parquetdataset": 154, "pars": 143, "particlenet": 107, "pool": 91, "pre_configur": 52, "prometheu": [48, 97], "prometheus_dataset": 73, "prometheus_extractor": 49, "prometheus_read": 60, "pull": 152, "qualiti": 152, "quick": 157, "random": 65, "reader": [54, 153], "reconstruct": [125, 160], "reproduc": 155, "request": 152, "rnn": 119, "rnn_tito": 100, "sampler": 14, "save": 160, "select": 154, "sqlite": [15, 61], "sqlite_dataset": 16, "sqlite_util": 66, "sqlite_writ": 71, "sqlitedataset": [154, 155], "src": 151, "standard_averaged_model": 121, "standard_model": 122, "standardmodel": [155, 160], "start": 157, "state_dict": 160, "string_selection_resolv": 67, "subset": 154, "support": 158, "syntax": 160, "tabl": 158, "task": [123, 126, 160], "test_dataset": 74, "track": 160, "train": [130, 160], "training_config": 144, "transform": 127, "truth": 155, "tutori": 155, "type": 37, "us": [154, 155, 160], "usag": 0, "util": [33, 44, 63, 116, 129, 134, 136], "v": 154, "weight_fit": 135, "write": 158, "writer": [68, 153], "your": [158, 160]}})