Search.setIndex({"alltitles": {"1) Adding Support for Your Data": [[159, "adding-support-for-your-data"]], "2) Implementing a Detector Class": [[159, "implementing-a-detector-class"]], "Acknowledgements": [[0, "acknowledgements"]], "Adding Your Own Model": [[161, "adding-your-own-model"]], "Adding custom Labels": [[155, "adding-custom-labels"]], "Adding custom truth labels": [[156, "adding-custom-truth-labels"]], "Advanced Functionality in SQLiteDataset": [[156, "advanced-functionality-in-sqlitedataset"]], "Appendix": [[156, "appendix"]], "Choosing a subset of events using selection": [[155, "choosing-a-subset-of-events-using-selection"]], "Code quality": [[153, "code-quality"]], "Combining Multiple Datasets": [[155, "combining-multiple-datasets"], [156, "combining-multiple-datasets"]], "Contents": [[156, "contents"]], "Contributing To GraphNeTgraphnet": [[153, null]], "Conventions": [[153, "conventions"]], "Creating reproducible Datasets using DatasetConfig": [[156, "creating-reproducible-datasets-using-datasetconfig"]], "Creating reproducible Models using ModelConfig": [[156, "creating-reproducible-models-using-modelconfig"]], "Data Conversion in GraphNeTgraphnet": [[154, null]], "DataConverter": [[154, "dataconverter"]], "Dataset": [[155, "dataset"]], "Datasets In GraphNeTgraphnet": [[155, null]], "Example DataConfig": [[156, "example-dataconfig"]], "Example ModelConfig": [[156, "example-modelconfig"]], "Example of geometry table before applying multi-index": [[159, "id1"]], "Example: Energy Reconstruction using ModelConfig": [[161, "example-energy-reconstruction-using-modelconfig"]], "Experiment Tracking": [[161, "experiment-tracking"]], "Extractors": [[154, "extractors"]], "GitHub issues": [[153, "github-issues"]], "GraphDefinition, backbone & Task": [[161, "graphdefinition-backbone-task"]], "GraphNeT tutorial": [[156, null]], "GraphNeTgraphnet": [[157, null], [160, null]], "Implementing a new Dataset": [[155, "implementing-a-new-dataset"]], "Installation": [[158, null]], "Installation in CVMFS (IceCube)": [[158, "installation-in-cvmfs-icecube"]], "Instantiating a StandardModel": [[161, "instantiating-a-standardmodel"]], "Integrating New Experiments into GraphNeTgraphnet": [[159, null]], "Introduction": [[156, "introduction"]], "Model.save": [[161, "model-save"]], "ModelConfig and state_dict": [[161, "modelconfig-and-state-dict"]], "Models In GraphNeTgraphnet": [[161, null]], "Overview of GraphNeT": [[156, "overview-of-graphnet"]], "Pull requests": [[153, "pull-requests"]], "Quick Start": [[158, "quick-start"]], "Readers": [[154, "readers"]], "SQLiteDataset & ParquetDataset": [[155, "sqlitedataset-parquetdataset"]], "SQLiteDataset vs. ParquetDataset": [[155, "sqlitedataset-vs-parquetdataset"]], "Saving, loading, and checkpointing Models": [[161, "saving-loading-and-checkpointing-models"]], "Submodules": [[1, "submodules"], [3, "submodules"], [10, "submodules"], [12, "submodules"], [14, "submodules"], [16, "submodules"], [19, "submodules"], [32, "submodules"], [37, "submodules"], [39, "submodules"], [44, "submodules"], [48, "submodules"], [50, "submodules"], [52, "submodules"], [54, "submodules"], [56, "submodules"], [63, "submodules"], [65, "submodules"], [70, "submodules"], [74, "submodules"], [77, "submodules"], [80, "submodules"], [82, "submodules"], [86, "submodules"], [88, "submodules"], [90, "submodules"], [94, "submodules"], [101, "submodules"], [110, "submodules"], [111, "submodules"], [116, "submodules"], [120, "submodules"], [124, "submodules"], [128, "submodules"], [131, "submodules"], [137, "submodules"], [139, "submodules"]], "Subpackages": [[1, null], [3, "subpackages"], [10, "subpackages"], [16, "subpackages"], [19, "subpackages"], [39, "subpackages"], [77, "subpackages"], [88, "subpackages"], [110, "subpackages"], [137, "subpackages"]], "The Model class": [[156, "the-model-class"], [161, "the-model-class"]], "The StandardModel class": [[156, "the-standardmodel-class"], [161, "the-standardmodel-class"]], "Training Syntax for StandardModel": [[161, "training-syntax-for-standardmodel"]], "Usage": [[0, null]], "Using checkpoints": [[161, "using-checkpoints"]], "Writers": [[154, "writers"]], "Writing your own Extractor and GraphNeTFileReader": [[159, "writing-your-own-extractor-and-graphnetfilereader"]], "graphnet.constants module": [[2, null]], "graphnet.data package": [[3, null]], "graphnet.data.constants module": [[4, null]], "graphnet.data.curated_datamodule module": [[5, null]], "graphnet.data.dataclasses module": [[6, null]], "graphnet.data.dataconverter module": [[7, null]], "graphnet.data.dataloader module": [[8, null]], "graphnet.data.datamodule module": [[9, null]], "graphnet.data.dataset package": [[10, null]], "graphnet.data.dataset.dataset module": [[11, null]], "graphnet.data.dataset.parquet package": [[12, null]], "graphnet.data.dataset.parquet.parquet_dataset module": [[13, null]], "graphnet.data.dataset.sqlite package": [[14, null]], "graphnet.data.dataset.sqlite.sqlite_dataset module": [[15, null]], "graphnet.data.extractors package": [[16, null]], "graphnet.data.extractors.combine_extractors module": [[17, null]], "graphnet.data.extractors.extractor module": [[18, null]], "graphnet.data.extractors.icecube package": [[19, null]], "graphnet.data.extractors.icecube.i3extractor module": [[20, null]], "graphnet.data.extractors.icecube.i3featureextractor module": [[21, null]], "graphnet.data.extractors.icecube.i3genericextractor module": [[22, null]], "graphnet.data.extractors.icecube.i3hybridrecoextractor module": [[23, null]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module": [[24, null]], "graphnet.data.extractors.icecube.i3particleextractor module": [[25, null]], "graphnet.data.extractors.icecube.i3pisaextractor module": [[26, null]], "graphnet.data.extractors.icecube.i3quesoextractor module": [[27, null]], "graphnet.data.extractors.icecube.i3retroextractor module": [[28, null]], "graphnet.data.extractors.icecube.i3splinempeextractor module": [[29, null]], "graphnet.data.extractors.icecube.i3truthextractor module": [[30, null]], "graphnet.data.extractors.icecube.i3tumextractor module": [[31, null]], "graphnet.data.extractors.icecube.utilities package": [[32, null]], "graphnet.data.extractors.icecube.utilities.collections module": [[33, null]], "graphnet.data.extractors.icecube.utilities.frames module": [[34, null]], "graphnet.data.extractors.icecube.utilities.i3_filters module": [[35, null]], "graphnet.data.extractors.icecube.utilities.types module": [[36, null]], "graphnet.data.extractors.internal package": [[37, null]], "graphnet.data.extractors.internal.parquet_extractor module": [[38, null]], "graphnet.data.extractors.km3net package": [[39, null]], "graphnet.data.extractors.km3net.km3netrootextractor module": [[40, null]], "graphnet.data.extractors.km3net.km3netrootpulseextractor module": [[41, null]], "graphnet.data.extractors.km3net.km3netroottriggpulseextractor module": [[42, null]], "graphnet.data.extractors.km3net.km3netroottruthextractor module": [[43, null]], "graphnet.data.extractors.km3net.utilities package": [[44, null]], "graphnet.data.extractors.km3net.utilities.km3net_utilities module": [[45, null]], "graphnet.data.extractors.km3net.utilities.utils_osc module": [[46, null]], "graphnet.data.extractors.km3net.utilities.weight_events_oscprob module": [[47, null]], "graphnet.data.extractors.liquido package": [[48, null]], "graphnet.data.extractors.liquido.h5_extractor module": [[49, null]], "graphnet.data.extractors.prometheus package": [[50, null]], "graphnet.data.extractors.prometheus.prometheus_extractor module": [[51, null]], "graphnet.data.parquet package": [[52, null]], "graphnet.data.parquet.deprecated_methods module": [[53, null]], "graphnet.data.pre_configured package": [[54, null]], "graphnet.data.pre_configured.dataconverters module": [[55, null]], "graphnet.data.readers package": [[56, null]], "graphnet.data.readers.graphnet_file_reader module": [[57, null]], "graphnet.data.readers.i3reader module": [[58, null]], "graphnet.data.readers.internal_parquet_reader module": [[59, null]], "graphnet.data.readers.km3netrootreader module": [[60, null]], "graphnet.data.readers.liquido_reader module": [[61, null]], "graphnet.data.readers.prometheus_reader module": [[62, null]], "graphnet.data.sqlite package": [[63, null]], "graphnet.data.sqlite.deprecated_methods module": [[64, null]], "graphnet.data.utilities package": [[65, null]], "graphnet.data.utilities.parquet_to_sqlite module": [[66, null]], "graphnet.data.utilities.random module": [[67, null]], "graphnet.data.utilities.sqlite_utilities module": [[68, null]], "graphnet.data.utilities.string_selection_resolver module": [[69, null]], "graphnet.data.writers package": [[70, null]], "graphnet.data.writers.graphnet_writer module": [[71, null]], "graphnet.data.writers.parquet_writer module": [[72, null]], "graphnet.data.writers.sqlite_writer module": [[73, null]], "graphnet.datasets package": [[74, null]], "graphnet.datasets.prometheus_datasets module": [[75, null]], "graphnet.datasets.test_dataset module": [[76, null]], "graphnet.deployment package": [[77, null]], "graphnet.deployment.deployer module": [[78, null]], "graphnet.deployment.deployment_module module": [[79, null]], "graphnet.deployment.i3modules package": [[80, null]], "graphnet.deployment.i3modules.deprecated_methods module": [[81, null]], "graphnet.deployment.icecube package": [[82, null]], "graphnet.deployment.icecube.cleaning_module module": [[83, null]], "graphnet.deployment.icecube.i3deployer module": [[84, null]], "graphnet.deployment.icecube.inference_module module": [[85, null]], "graphnet.exceptions package": [[86, null]], "graphnet.exceptions.exceptions module": [[87, null]], "graphnet.models package": [[88, null]], "graphnet.models.coarsening module": [[89, null]], "graphnet.models.components package": [[90, null]], "graphnet.models.components.embedding module": [[91, null]], "graphnet.models.components.layers module": [[92, null]], "graphnet.models.components.pool module": [[93, null]], "graphnet.models.detector package": [[94, null]], "graphnet.models.detector.detector module": [[95, null]], "graphnet.models.detector.icecube module": [[96, null]], "graphnet.models.detector.liquido module": [[97, null]], "graphnet.models.detector.orca module": [[98, null]], "graphnet.models.detector.prometheus module": [[99, null]], "graphnet.models.easy_model module": [[100, null]], "graphnet.models.gnn package": [[101, null]], "graphnet.models.gnn.RNN_tito module": [[102, null]], "graphnet.models.gnn.convnet module": [[103, null]], "graphnet.models.gnn.dynedge module": [[104, null]], "graphnet.models.gnn.dynedge_jinst module": [[105, null]], "graphnet.models.gnn.dynedge_kaggle_tito module": [[106, null]], "graphnet.models.gnn.gnn module": [[107, null]], "graphnet.models.gnn.icemix module": [[108, null]], "graphnet.models.gnn.particlenet module": [[109, null]], "graphnet.models.graphs package": [[110, null]], "graphnet.models.graphs.edges package": [[111, null]], "graphnet.models.graphs.edges.edges module": [[112, null]], "graphnet.models.graphs.edges.minkowski module": [[113, null]], "graphnet.models.graphs.graph_definition module": [[114, null]], "graphnet.models.graphs.graphs module": [[115, null]], "graphnet.models.graphs.nodes package": [[116, null]], "graphnet.models.graphs.nodes.nodes module": [[117, null]], "graphnet.models.graphs.utils module": [[118, null]], "graphnet.models.model module": [[119, null]], "graphnet.models.rnn package": [[120, null]], "graphnet.models.rnn.node_rnn module": [[121, null]], "graphnet.models.standard_averaged_model module": [[122, null]], "graphnet.models.standard_model module": [[123, null]], "graphnet.models.task package": [[124, null]], "graphnet.models.task.classification module": [[125, null]], "graphnet.models.task.reconstruction module": [[126, null]], "graphnet.models.task.task module": [[127, null]], "graphnet.models.transformer package": [[128, null]], "graphnet.models.transformer.iseecube module": [[129, null]], "graphnet.models.utils module": [[130, null]], "graphnet.training package": [[131, null]], "graphnet.training.callbacks module": [[132, null]], "graphnet.training.labels module": [[133, null]], "graphnet.training.loss_functions module": [[134, null]], "graphnet.training.utils module": [[135, null]], "graphnet.training.weight_fitting module": [[136, null]], "graphnet.utilities package": [[137, null]], "graphnet.utilities.argparse module": [[138, null]], "graphnet.utilities.config package": [[139, null]], "graphnet.utilities.config.base_config module": [[140, null]], "graphnet.utilities.config.configurable module": [[141, null]], "graphnet.utilities.config.dataset_config module": [[142, null]], "graphnet.utilities.config.model_config module": [[143, null]], "graphnet.utilities.config.parsing module": [[144, null]], "graphnet.utilities.config.training_config module": [[145, null]], "graphnet.utilities.decorators module": [[146, null]], "graphnet.utilities.deprecation_tools module": [[147, null]], "graphnet.utilities.filesys module": [[148, null]], "graphnet.utilities.imports module": [[149, null]], "graphnet.utilities.logging module": [[150, null]], "graphnet.utilities.maths module": [[151, null]], "src": [[152, null]]}, "docnames": ["about/about", "api/graphnet", "api/graphnet.constants", "api/graphnet.data", "api/graphnet.data.constants", "api/graphnet.data.curated_datamodule", "api/graphnet.data.dataclasses", "api/graphnet.data.dataconverter", "api/graphnet.data.dataloader", "api/graphnet.data.datamodule", "api/graphnet.data.dataset", "api/graphnet.data.dataset.dataset", "api/graphnet.data.dataset.parquet", "api/graphnet.data.dataset.parquet.parquet_dataset", "api/graphnet.data.dataset.sqlite", "api/graphnet.data.dataset.sqlite.sqlite_dataset", "api/graphnet.data.extractors", "api/graphnet.data.extractors.combine_extractors", "api/graphnet.data.extractors.extractor", "api/graphnet.data.extractors.icecube", "api/graphnet.data.extractors.icecube.i3extractor", "api/graphnet.data.extractors.icecube.i3featureextractor", "api/graphnet.data.extractors.icecube.i3genericextractor", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", "api/graphnet.data.extractors.icecube.i3particleextractor", "api/graphnet.data.extractors.icecube.i3pisaextractor", "api/graphnet.data.extractors.icecube.i3quesoextractor", "api/graphnet.data.extractors.icecube.i3retroextractor", "api/graphnet.data.extractors.icecube.i3splinempeextractor", "api/graphnet.data.extractors.icecube.i3truthextractor", "api/graphnet.data.extractors.icecube.i3tumextractor", "api/graphnet.data.extractors.icecube.utilities", "api/graphnet.data.extractors.icecube.utilities.collections", "api/graphnet.data.extractors.icecube.utilities.frames", "api/graphnet.data.extractors.icecube.utilities.i3_filters", "api/graphnet.data.extractors.icecube.utilities.types", "api/graphnet.data.extractors.internal", "api/graphnet.data.extractors.internal.parquet_extractor", "api/graphnet.data.extractors.km3net", "api/graphnet.data.extractors.km3net.km3netrootextractor", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor", "api/graphnet.data.extractors.km3net.km3netroottruthextractor", "api/graphnet.data.extractors.km3net.utilities", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities", "api/graphnet.data.extractors.km3net.utilities.utils_osc", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob", "api/graphnet.data.extractors.liquido", "api/graphnet.data.extractors.liquido.h5_extractor", "api/graphnet.data.extractors.prometheus", "api/graphnet.data.extractors.prometheus.prometheus_extractor", "api/graphnet.data.parquet", "api/graphnet.data.parquet.deprecated_methods", "api/graphnet.data.pre_configured", "api/graphnet.data.pre_configured.dataconverters", "api/graphnet.data.readers", "api/graphnet.data.readers.graphnet_file_reader", "api/graphnet.data.readers.i3reader", "api/graphnet.data.readers.internal_parquet_reader", "api/graphnet.data.readers.km3netrootreader", "api/graphnet.data.readers.liquido_reader", "api/graphnet.data.readers.prometheus_reader", "api/graphnet.data.sqlite", "api/graphnet.data.sqlite.deprecated_methods", "api/graphnet.data.utilities", "api/graphnet.data.utilities.parquet_to_sqlite", "api/graphnet.data.utilities.random", "api/graphnet.data.utilities.sqlite_utilities", "api/graphnet.data.utilities.string_selection_resolver", "api/graphnet.data.writers", "api/graphnet.data.writers.graphnet_writer", "api/graphnet.data.writers.parquet_writer", "api/graphnet.data.writers.sqlite_writer", "api/graphnet.datasets", "api/graphnet.datasets.prometheus_datasets", "api/graphnet.datasets.test_dataset", "api/graphnet.deployment", "api/graphnet.deployment.deployer", "api/graphnet.deployment.deployment_module", "api/graphnet.deployment.i3modules", "api/graphnet.deployment.i3modules.deprecated_methods", "api/graphnet.deployment.icecube", "api/graphnet.deployment.icecube.cleaning_module", "api/graphnet.deployment.icecube.i3deployer", "api/graphnet.deployment.icecube.inference_module", "api/graphnet.exceptions", "api/graphnet.exceptions.exceptions", "api/graphnet.models", "api/graphnet.models.coarsening", "api/graphnet.models.components", "api/graphnet.models.components.embedding", "api/graphnet.models.components.layers", "api/graphnet.models.components.pool", "api/graphnet.models.detector", "api/graphnet.models.detector.detector", "api/graphnet.models.detector.icecube", "api/graphnet.models.detector.liquido", "api/graphnet.models.detector.orca", "api/graphnet.models.detector.prometheus", "api/graphnet.models.easy_model", "api/graphnet.models.gnn", "api/graphnet.models.gnn.RNN_tito", "api/graphnet.models.gnn.convnet", "api/graphnet.models.gnn.dynedge", "api/graphnet.models.gnn.dynedge_jinst", "api/graphnet.models.gnn.dynedge_kaggle_tito", "api/graphnet.models.gnn.gnn", "api/graphnet.models.gnn.icemix", "api/graphnet.models.gnn.particlenet", "api/graphnet.models.graphs", "api/graphnet.models.graphs.edges", "api/graphnet.models.graphs.edges.edges", "api/graphnet.models.graphs.edges.minkowski", "api/graphnet.models.graphs.graph_definition", "api/graphnet.models.graphs.graphs", "api/graphnet.models.graphs.nodes", "api/graphnet.models.graphs.nodes.nodes", "api/graphnet.models.graphs.utils", "api/graphnet.models.model", "api/graphnet.models.rnn", "api/graphnet.models.rnn.node_rnn", "api/graphnet.models.standard_averaged_model", "api/graphnet.models.standard_model", "api/graphnet.models.task", "api/graphnet.models.task.classification", "api/graphnet.models.task.reconstruction", "api/graphnet.models.task.task", "api/graphnet.models.transformer", "api/graphnet.models.transformer.iseecube", "api/graphnet.models.utils", "api/graphnet.training", "api/graphnet.training.callbacks", "api/graphnet.training.labels", "api/graphnet.training.loss_functions", "api/graphnet.training.utils", "api/graphnet.training.weight_fitting", "api/graphnet.utilities", "api/graphnet.utilities.argparse", "api/graphnet.utilities.config", "api/graphnet.utilities.config.base_config", "api/graphnet.utilities.config.configurable", "api/graphnet.utilities.config.dataset_config", "api/graphnet.utilities.config.model_config", "api/graphnet.utilities.config.parsing", "api/graphnet.utilities.config.training_config", "api/graphnet.utilities.decorators", "api/graphnet.utilities.deprecation_tools", "api/graphnet.utilities.filesys", "api/graphnet.utilities.imports", "api/graphnet.utilities.logging", "api/graphnet.utilities.maths", "api/modules", "contribute/contribute", "data_conversion/data_conversion", "datasets/datasets", "getting_started/getting_started", "index", "installation/install", "integration/integration", "intro/intro", "models/models", "substitutions"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["about/about.rst", "api/graphnet.rst", "api/graphnet.constants.rst", "api/graphnet.data.rst", "api/graphnet.data.constants.rst", "api/graphnet.data.curated_datamodule.rst", "api/graphnet.data.dataclasses.rst", "api/graphnet.data.dataconverter.rst", "api/graphnet.data.dataloader.rst", "api/graphnet.data.datamodule.rst", "api/graphnet.data.dataset.rst", "api/graphnet.data.dataset.dataset.rst", "api/graphnet.data.dataset.parquet.rst", "api/graphnet.data.dataset.parquet.parquet_dataset.rst", "api/graphnet.data.dataset.sqlite.rst", "api/graphnet.data.dataset.sqlite.sqlite_dataset.rst", "api/graphnet.data.extractors.rst", "api/graphnet.data.extractors.combine_extractors.rst", "api/graphnet.data.extractors.extractor.rst", "api/graphnet.data.extractors.icecube.rst", "api/graphnet.data.extractors.icecube.i3extractor.rst", "api/graphnet.data.extractors.icecube.i3featureextractor.rst", "api/graphnet.data.extractors.icecube.i3genericextractor.rst", "api/graphnet.data.extractors.icecube.i3hybridrecoextractor.rst", "api/graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.rst", "api/graphnet.data.extractors.icecube.i3particleextractor.rst", "api/graphnet.data.extractors.icecube.i3pisaextractor.rst", "api/graphnet.data.extractors.icecube.i3quesoextractor.rst", "api/graphnet.data.extractors.icecube.i3retroextractor.rst", "api/graphnet.data.extractors.icecube.i3splinempeextractor.rst", "api/graphnet.data.extractors.icecube.i3truthextractor.rst", "api/graphnet.data.extractors.icecube.i3tumextractor.rst", "api/graphnet.data.extractors.icecube.utilities.rst", "api/graphnet.data.extractors.icecube.utilities.collections.rst", "api/graphnet.data.extractors.icecube.utilities.frames.rst", "api/graphnet.data.extractors.icecube.utilities.i3_filters.rst", "api/graphnet.data.extractors.icecube.utilities.types.rst", "api/graphnet.data.extractors.internal.rst", "api/graphnet.data.extractors.internal.parquet_extractor.rst", "api/graphnet.data.extractors.km3net.rst", "api/graphnet.data.extractors.km3net.km3netrootextractor.rst", "api/graphnet.data.extractors.km3net.km3netrootpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottriggpulseextractor.rst", "api/graphnet.data.extractors.km3net.km3netroottruthextractor.rst", "api/graphnet.data.extractors.km3net.utilities.rst", "api/graphnet.data.extractors.km3net.utilities.km3net_utilities.rst", "api/graphnet.data.extractors.km3net.utilities.utils_osc.rst", "api/graphnet.data.extractors.km3net.utilities.weight_events_oscprob.rst", "api/graphnet.data.extractors.liquido.rst", "api/graphnet.data.extractors.liquido.h5_extractor.rst", "api/graphnet.data.extractors.prometheus.rst", "api/graphnet.data.extractors.prometheus.prometheus_extractor.rst", "api/graphnet.data.parquet.rst", "api/graphnet.data.parquet.deprecated_methods.rst", "api/graphnet.data.pre_configured.rst", "api/graphnet.data.pre_configured.dataconverters.rst", "api/graphnet.data.readers.rst", "api/graphnet.data.readers.graphnet_file_reader.rst", "api/graphnet.data.readers.i3reader.rst", "api/graphnet.data.readers.internal_parquet_reader.rst", "api/graphnet.data.readers.km3netrootreader.rst", "api/graphnet.data.readers.liquido_reader.rst", "api/graphnet.data.readers.prometheus_reader.rst", "api/graphnet.data.sqlite.rst", "api/graphnet.data.sqlite.deprecated_methods.rst", "api/graphnet.data.utilities.rst", "api/graphnet.data.utilities.parquet_to_sqlite.rst", "api/graphnet.data.utilities.random.rst", "api/graphnet.data.utilities.sqlite_utilities.rst", "api/graphnet.data.utilities.string_selection_resolver.rst", "api/graphnet.data.writers.rst", "api/graphnet.data.writers.graphnet_writer.rst", "api/graphnet.data.writers.parquet_writer.rst", "api/graphnet.data.writers.sqlite_writer.rst", "api/graphnet.datasets.rst", "api/graphnet.datasets.prometheus_datasets.rst", "api/graphnet.datasets.test_dataset.rst", "api/graphnet.deployment.rst", "api/graphnet.deployment.deployer.rst", "api/graphnet.deployment.deployment_module.rst", "api/graphnet.deployment.i3modules.rst", "api/graphnet.deployment.i3modules.deprecated_methods.rst", "api/graphnet.deployment.icecube.rst", "api/graphnet.deployment.icecube.cleaning_module.rst", "api/graphnet.deployment.icecube.i3deployer.rst", "api/graphnet.deployment.icecube.inference_module.rst", "api/graphnet.exceptions.rst", "api/graphnet.exceptions.exceptions.rst", "api/graphnet.models.rst", "api/graphnet.models.coarsening.rst", "api/graphnet.models.components.rst", "api/graphnet.models.components.embedding.rst", "api/graphnet.models.components.layers.rst", "api/graphnet.models.components.pool.rst", "api/graphnet.models.detector.rst", "api/graphnet.models.detector.detector.rst", "api/graphnet.models.detector.icecube.rst", "api/graphnet.models.detector.liquido.rst", "api/graphnet.models.detector.orca.rst", "api/graphnet.models.detector.prometheus.rst", "api/graphnet.models.easy_model.rst", "api/graphnet.models.gnn.rst", "api/graphnet.models.gnn.RNN_tito.rst", "api/graphnet.models.gnn.convnet.rst", "api/graphnet.models.gnn.dynedge.rst", "api/graphnet.models.gnn.dynedge_jinst.rst", "api/graphnet.models.gnn.dynedge_kaggle_tito.rst", "api/graphnet.models.gnn.gnn.rst", "api/graphnet.models.gnn.icemix.rst", "api/graphnet.models.gnn.particlenet.rst", "api/graphnet.models.graphs.rst", "api/graphnet.models.graphs.edges.rst", "api/graphnet.models.graphs.edges.edges.rst", "api/graphnet.models.graphs.edges.minkowski.rst", "api/graphnet.models.graphs.graph_definition.rst", "api/graphnet.models.graphs.graphs.rst", "api/graphnet.models.graphs.nodes.rst", "api/graphnet.models.graphs.nodes.nodes.rst", "api/graphnet.models.graphs.utils.rst", "api/graphnet.models.model.rst", "api/graphnet.models.rnn.rst", "api/graphnet.models.rnn.node_rnn.rst", "api/graphnet.models.standard_averaged_model.rst", "api/graphnet.models.standard_model.rst", "api/graphnet.models.task.rst", "api/graphnet.models.task.classification.rst", "api/graphnet.models.task.reconstruction.rst", "api/graphnet.models.task.task.rst", "api/graphnet.models.transformer.rst", "api/graphnet.models.transformer.iseecube.rst", "api/graphnet.models.utils.rst", "api/graphnet.training.rst", "api/graphnet.training.callbacks.rst", "api/graphnet.training.labels.rst", "api/graphnet.training.loss_functions.rst", "api/graphnet.training.utils.rst", "api/graphnet.training.weight_fitting.rst", "api/graphnet.utilities.rst", "api/graphnet.utilities.argparse.rst", "api/graphnet.utilities.config.rst", "api/graphnet.utilities.config.base_config.rst", "api/graphnet.utilities.config.configurable.rst", "api/graphnet.utilities.config.dataset_config.rst", "api/graphnet.utilities.config.model_config.rst", "api/graphnet.utilities.config.parsing.rst", "api/graphnet.utilities.config.training_config.rst", "api/graphnet.utilities.decorators.rst", "api/graphnet.utilities.deprecation_tools.rst", "api/graphnet.utilities.filesys.rst", "api/graphnet.utilities.imports.rst", "api/graphnet.utilities.logging.rst", "api/graphnet.utilities.maths.rst", "api/modules.rst", "contribute/contribute.rst", "data_conversion/data_conversion.rst", "datasets/datasets.rst", "getting_started/getting_started.md", "index.rst", "installation/install.rst", "integration/integration.rst", "intro/intro.rst", "models/models.rst", "substitutions.rst"], "indexentries": {"accepted_extractors (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_extractors", false]], "accepted_file_extensions (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.accepted_file_extensions", false]], "arca115 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.ARCA115", false]], "argumentparser (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.ArgumentParser", false]], "arguments (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.arguments", false]], "array_to_sequence() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.array_to_sequence", false]], "as_dict() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.dataset_config.datasetconfig method)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.as_dict", false]], "as_dict() (graphnet.utilities.config.model_config.modelconfig method)": [[143, "graphnet.utilities.config.model_config.ModelConfig.as_dict", false]], "attach_index() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.attach_index", false]], "attention_rel (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.Attention_rel", false]], "attributecoarsening (class in graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.AttributeCoarsening", false]], "azimuthreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction", false]], "azimuthreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa", false]], "backward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.backward", false]], "baikalgvd8 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8", false]], "baseconfig (class in graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.BaseConfig", false]], "binaryclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTask", false]], "binaryclassificationtasklogits (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits", false]], "binarycrossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.BinaryCrossEntropyLoss", false]], "bjoernlow (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.BjoernLow", false]], "block (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.Block", false]], "block_rel (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.Block_rel", false]], "break_cyclic_recursion() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.break_cyclic_recursion", false]], "calculate_distance_matrix() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_distance_matrix", false]], "calculate_xyzt_homophily() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.calculate_xyzt_homophily", false]], "cast_object_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_object_to_pure_python", false]], "cast_pulse_series_to_pure_python() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.cast_pulse_series_to_pure_python", false]], "class_name (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.class_name", false]], "clean_up_data_object() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.clean_up_data_object", false]], "cluster_summarize_with_percentiles() (in module graphnet.models.graphs.utils)": [[118, "graphnet.models.graphs.utils.cluster_summarize_with_percentiles", false]], "coarsening (class in graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.Coarsening", false]], "columnmissingexception": [[87, "graphnet.exceptions.exceptions.ColumnMissingException", false]], "combinedextractor (class in graphnet.data.extractors.combine_extractors)": [[17, "graphnet.data.extractors.combine_extractors.CombinedExtractor", false]], "compute_loss() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.compute_loss", false]], "compute_loss() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.compute_loss", false]], "compute_loss() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.compute_loss", false]], "compute_loss() (graphnet.models.task.task.standardlearnedtask method)": [[127, "graphnet.models.task.task.StandardLearnedTask.compute_loss", false]], "compute_minkowski_distance_mat() (in module graphnet.models.graphs.edges.minkowski)": [[113, "graphnet.models.graphs.edges.minkowski.compute_minkowski_distance_mat", false]], "config (graphnet.utilities.config.configurable.configurable property)": [[141, "graphnet.utilities.config.configurable.Configurable.config", false]], "configurable (class in graphnet.utilities.config.configurable)": [[141, "graphnet.utilities.config.configurable.Configurable", false]], "configure_optimizers() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.configure_optimizers", false]], "contains() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.contains", false]], "convnet (class in graphnet.models.gnn.convnet)": [[103, "graphnet.models.gnn.convnet.ConvNet", false]], "create_table() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.create_table", false]], "create_table_and_save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.create_table_and_save_to_sql", false]], "critical() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.critical", false]], "crossentropyloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.CrossEntropyLoss", false]], "customdomcoarsening (class in graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.CustomDOMCoarsening", false]], "database_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.database_exists", false]], "database_table_exists() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.database_table_exists", false]], "dataconverter (class in graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.DataConverter", false]], "dataloader (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.dataloader", false]], "datasetconfig (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig", false]], "datasetconfigsaverabcmeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverABCMeta", false]], "datasetconfigsavermeta (class in graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfigSaverMeta", false]], "debug() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.debug", false]], "deepice (class in graphnet.models.gnn.icemix)": [[108, "graphnet.models.gnn.icemix.DeepIce", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_prediction_labels", false]], "default_prediction_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_prediction_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.default_target_labels", false]], "default_target_labels (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.default_target_labels", false]], "default_target_labels (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.default_target_labels", false]], "deployer (class in graphnet.deployment.deployer)": [[78, "graphnet.deployment.deployer.Deployer", false]], "deploymentmodule (class in graphnet.deployment.deployment_module)": [[79, "graphnet.deployment.deployment_module.DeploymentModule", false]], "detector (class in graphnet.models.detector.detector)": [[95, "graphnet.models.detector.detector.Detector", false]], "direction (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Direction", false]], "directionreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa", false]], "domandtimewindowcoarsening (class in graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.DOMAndTimeWindowCoarsening", false]], "domcoarsening (class in graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.DOMCoarsening", false]], "droppath (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.DropPath", false]], "dump() (graphnet.utilities.config.base_config.baseconfig method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.dump", false]], "dynedge (class in graphnet.models.gnn.dynedge)": [[104, "graphnet.models.gnn.dynedge.DynEdge", false]], "dynedgeconv (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.DynEdgeConv", false]], "dynedgejinst (class in graphnet.models.gnn.dynedge_jinst)": [[105, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST", false]], "dynedgetito (class in graphnet.models.gnn.dynedge_kaggle_tito)": [[106, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO", false]], "dyntrans (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.DynTrans", false]], "early_stopping_patience (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.early_stopping_patience", false]], "easysyntax (class in graphnet.models.easy_model)": [[100, "graphnet.models.easy_model.EasySyntax", false]], "edgeconvtito (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.EdgeConvTito", false]], "edgedefinition (class in graphnet.models.graphs.edges.edges)": [[112, "graphnet.models.graphs.edges.edges.EdgeDefinition", false]], "edgelessgraph (class in graphnet.models.graphs.graphs)": [[115, "graphnet.models.graphs.graphs.EdgelessGraph", false]], "energyreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction", false]], "energyreconstructionwithpower (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower", false]], "energyreconstructionwithuncertainty (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty", false]], "energytcreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction", false]], "ensembleloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EnsembleLoss", false]], "eps_like() (in module graphnet.utilities.maths)": [[151, "graphnet.utilities.maths.eps_like", false]], "error() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.error", false]], "euclideandistanceloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.EuclideanDistanceLoss", false]], "euclideanedges (class in graphnet.models.graphs.edges.edges)": [[112, "graphnet.models.graphs.edges.edges.EuclideanEdges", false]], "expects_merged_dataframes (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[71, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.expects_merged_dataframes", false]], "extra_repr() (graphnet.models.components.layers.droppath method)": [[92, "graphnet.models.components.layers.DropPath.extra_repr", false]], "extra_repr() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.extra_repr", false]], "extra_repr_recursive() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.extra_repr_recursive", false]], "extracor_names (graphnet.data.readers.graphnet_file_reader.graphnetfilereader property)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.extracor_names", false]], "extractor (class in graphnet.data.extractors.extractor)": [[18, "graphnet.data.extractors.extractor.Extractor", false]], "feature_map() (graphnet.models.detector.detector.detector method)": [[95, "graphnet.models.detector.detector.Detector.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecube86 method)": [[96, "graphnet.models.detector.icecube.IceCube86.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubedeepcore method)": [[96, "graphnet.models.detector.icecube.IceCubeDeepCore.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubekaggle method)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle.feature_map", false]], "feature_map() (graphnet.models.detector.icecube.icecubeupgrade method)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade.feature_map", false]], "feature_map() (graphnet.models.detector.liquido.liquido_v1 method)": [[97, "graphnet.models.detector.liquido.LiquidO_v1.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca115 method)": [[98, "graphnet.models.detector.orca.ORCA115.feature_map", false]], "feature_map() (graphnet.models.detector.orca.orca6 method)": [[98, "graphnet.models.detector.orca.ORCA6.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.arca115 method)": [[99, "graphnet.models.detector.prometheus.ARCA115.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.baikalgvd8 method)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecube86prometheus method)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubedeepcore8 method)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubegen2 method)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icecubeupgrade7 method)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.icedemo81 method)": [[99, "graphnet.models.detector.prometheus.IceDemo81.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150 method)": [[99, "graphnet.models.detector.prometheus.ORCA150.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.orca150superdense method)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.ponetriangle method)": [[99, "graphnet.models.detector.prometheus.PONETriangle.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.trident1211 method)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211.feature_map", false]], "feature_map() (graphnet.models.detector.prometheus.waterdemo81 method)": [[99, "graphnet.models.detector.prometheus.WaterDemo81.feature_map", false]], "features (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.features", false]], "file_extension (graphnet.data.writers.graphnet_writer.graphnetwriter property)": [[71, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.file_extension", false]], "file_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.file_handlers", false]], "filter() (graphnet.utilities.logging.repeatfilter method)": [[150, "graphnet.utilities.logging.RepeatFilter.filter", false]], "find_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.find_files", false]], "find_files() (graphnet.data.readers.i3reader.i3reader method)": [[58, "graphnet.data.readers.i3reader.I3Reader.find_files", false]], "find_files() (graphnet.data.readers.internal_parquet_reader.parquetreader method)": [[59, "graphnet.data.readers.internal_parquet_reader.ParquetReader.find_files", false]], "find_files() (graphnet.data.readers.liquido_reader.liquidoreader method)": [[61, "graphnet.data.readers.liquido_reader.LiquidOReader.find_files", false]], "find_files() (graphnet.data.readers.prometheus_reader.prometheusreader method)": [[62, "graphnet.data.readers.prometheus_reader.PrometheusReader.find_files", false]], "find_i3_files() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.find_i3_files", false]], "fit (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.fit", false]], "fit() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.fit", false]], "fit() (graphnet.training.weight_fitting.weightfitter method)": [[136, "graphnet.training.weight_fitting.WeightFitter.fit", false]], "flatten_nested_dictionary() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.flatten_nested_dictionary", false]], "forward() (graphnet.models.coarsening.coarsening method)": [[89, "graphnet.models.coarsening.Coarsening.forward", false]], "forward() (graphnet.models.components.embedding.fourierencoder method)": [[91, "graphnet.models.components.embedding.FourierEncoder.forward", false]], "forward() (graphnet.models.components.embedding.sinusoidalposemb method)": [[91, "graphnet.models.components.embedding.SinusoidalPosEmb.forward", false]], "forward() (graphnet.models.components.embedding.spacetimeencoder method)": [[91, "graphnet.models.components.embedding.SpacetimeEncoder.forward", false]], "forward() (graphnet.models.components.layers.attention_rel method)": [[92, "graphnet.models.components.layers.Attention_rel.forward", false]], "forward() (graphnet.models.components.layers.block method)": [[92, "graphnet.models.components.layers.Block.forward", false]], "forward() (graphnet.models.components.layers.block_rel method)": [[92, "graphnet.models.components.layers.Block_rel.forward", false]], "forward() (graphnet.models.components.layers.droppath method)": [[92, "graphnet.models.components.layers.DropPath.forward", false]], "forward() (graphnet.models.components.layers.dynedgeconv method)": [[92, "graphnet.models.components.layers.DynEdgeConv.forward", false]], "forward() (graphnet.models.components.layers.dyntrans method)": [[92, "graphnet.models.components.layers.DynTrans.forward", false]], "forward() (graphnet.models.components.layers.edgeconvtito method)": [[92, "graphnet.models.components.layers.EdgeConvTito.forward", false]], "forward() (graphnet.models.components.layers.mlp method)": [[92, "graphnet.models.components.layers.Mlp.forward", false]], "forward() (graphnet.models.detector.detector.detector method)": [[95, "graphnet.models.detector.detector.Detector.forward", false]], "forward() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.forward", false]], "forward() (graphnet.models.gnn.convnet.convnet method)": [[103, "graphnet.models.gnn.convnet.ConvNet.forward", false]], "forward() (graphnet.models.gnn.dynedge.dynedge method)": [[104, "graphnet.models.gnn.dynedge.DynEdge.forward", false]], "forward() (graphnet.models.gnn.dynedge_jinst.dynedgejinst method)": [[105, "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST.forward", false]], "forward() (graphnet.models.gnn.dynedge_kaggle_tito.dynedgetito method)": [[106, "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO.forward", false]], "forward() (graphnet.models.gnn.gnn.gnn method)": [[107, "graphnet.models.gnn.gnn.GNN.forward", false]], "forward() (graphnet.models.gnn.icemix.deepice method)": [[108, "graphnet.models.gnn.icemix.DeepIce.forward", false]], "forward() (graphnet.models.gnn.particlenet.particlenet method)": [[109, "graphnet.models.gnn.particlenet.ParticleNeT.forward", false]], "forward() (graphnet.models.gnn.rnn_tito.rnn_tito method)": [[102, "graphnet.models.gnn.RNN_tito.RNN_TITO.forward", false]], "forward() (graphnet.models.graphs.edges.edges.edgedefinition method)": [[112, "graphnet.models.graphs.edges.edges.EdgeDefinition.forward", false]], "forward() (graphnet.models.graphs.graph_definition.graphdefinition method)": [[114, "graphnet.models.graphs.graph_definition.GraphDefinition.forward", false]], "forward() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[117, "graphnet.models.graphs.nodes.nodes.NodeDefinition.forward", false]], "forward() (graphnet.models.rnn.node_rnn.node_rnn method)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN.forward", false]], "forward() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.forward", false]], "forward() (graphnet.models.task.task.learnedtask method)": [[127, "graphnet.models.task.task.LearnedTask.forward", false]], "forward() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.forward", false]], "forward() (graphnet.models.transformer.iseecube.iseecube method)": [[129, "graphnet.models.transformer.iseecube.ISeeCube.forward", false]], "forward() (graphnet.training.loss_functions.logcmk static method)": [[134, "graphnet.training.loss_functions.LogCMK.forward", false]], "forward() (graphnet.training.loss_functions.lossfunction method)": [[134, "graphnet.training.loss_functions.LossFunction.forward", false]], "fourierencoder (class in graphnet.models.components.embedding)": [[91, "graphnet.models.components.embedding.FourierEncoder", false]], "frame_is_montecarlo() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_montecarlo", false]], "frame_is_noise() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.frame_is_noise", false]], "from_config() (graphnet.models.model.model class method)": [[119, "graphnet.models.model.Model.from_config", false]], "from_config() (graphnet.utilities.config.configurable.configurable class method)": [[141, "graphnet.utilities.config.configurable.Configurable.from_config", false]], "gather_cluster_sequence() (in module graphnet.models.graphs.utils)": [[118, "graphnet.models.graphs.utils.gather_cluster_sequence", false]], "gcd_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.gcd_file", false]], "gcd_file (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.gcd_file", false]], "geometry_table (graphnet.models.detector.detector.detector property)": [[95, "graphnet.models.detector.detector.Detector.geometry_table", false]], "geometry_table_path (graphnet.models.detector.icecube.icecube86 attribute)": [[96, "graphnet.models.detector.icecube.IceCube86.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubekaggle attribute)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.liquido.liquido_v1 attribute)": [[97, "graphnet.models.detector.liquido.LiquidO_v1.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.arca115 attribute)": [[99, "graphnet.models.detector.prometheus.ARCA115.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.icedemo81 attribute)": [[99, "graphnet.models.detector.prometheus.IceDemo81.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150 attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.orca150superdense attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.ponetriangle attribute)": [[99, "graphnet.models.detector.prometheus.PONETriangle.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.trident1211 attribute)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211.geometry_table_path", false]], "geometry_table_path (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[99, "graphnet.models.detector.prometheus.WaterDemo81.geometry_table_path", false]], "get_all_argument_values() (in module graphnet.utilities.config.base_config)": [[140, "graphnet.utilities.config.base_config.get_all_argument_values", false]], "get_all_grapnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_all_grapnet_classes", false]], "get_graphnet_classes() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.get_graphnet_classes", false]], "get_lr() (graphnet.training.callbacks.piecewiselinearlr method)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR.get_lr", false]], "get_map_function() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.get_map_function", false]], "get_member_variables() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.get_member_variables", false]], "get_metrics() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.get_metrics", false]], "get_om_keys_and_pulseseries() (in module graphnet.data.extractors.icecube.utilities.frames)": [[34, "graphnet.data.extractors.icecube.utilities.frames.get_om_keys_and_pulseseries", false]], "get_primary_keys() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.get_primary_keys", false]], "gnn (class in graphnet.models.gnn.gnn)": [[107, "graphnet.models.gnn.gnn.GNN", false]], "graph_definition (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.graph_definition", false]], "graphdefinition (class in graphnet.models.graphs.graph_definition)": [[114, "graphnet.models.graphs.graph_definition.GraphDefinition", false]], "graphnet": [[1, "module-graphnet", false]], "graphnet.constants": [[2, "module-graphnet.constants", false]], "graphnet.data.dataclasses": [[6, "module-graphnet.data.dataclasses", false]], "graphnet.data.dataconverter": [[7, "module-graphnet.data.dataconverter", false]], "graphnet.data.extractors": [[16, "module-graphnet.data.extractors", false]], "graphnet.data.extractors.combine_extractors": [[17, "module-graphnet.data.extractors.combine_extractors", false]], "graphnet.data.extractors.extractor": [[18, "module-graphnet.data.extractors.extractor", false]], "graphnet.data.extractors.icecube": [[19, "module-graphnet.data.extractors.icecube", false]], "graphnet.data.extractors.icecube.i3extractor": [[20, "module-graphnet.data.extractors.icecube.i3extractor", false]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, "module-graphnet.data.extractors.icecube.i3featureextractor", false]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, "module-graphnet.data.extractors.icecube.i3genericextractor", false]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, "module-graphnet.data.extractors.icecube.i3particleextractor", false]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, "module-graphnet.data.extractors.icecube.i3retroextractor", false]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, "module-graphnet.data.extractors.icecube.i3truthextractor", false]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, "module-graphnet.data.extractors.icecube.i3tumextractor", false]], "graphnet.data.extractors.icecube.utilities": [[32, "module-graphnet.data.extractors.icecube.utilities", false]], "graphnet.data.extractors.icecube.utilities.collections": [[33, "module-graphnet.data.extractors.icecube.utilities.collections", false]], "graphnet.data.extractors.icecube.utilities.frames": [[34, "module-graphnet.data.extractors.icecube.utilities.frames", false]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false]], "graphnet.data.extractors.icecube.utilities.types": [[36, "module-graphnet.data.extractors.icecube.utilities.types", false]], "graphnet.data.extractors.internal": [[37, "module-graphnet.data.extractors.internal", false]], "graphnet.data.extractors.internal.parquet_extractor": [[38, "module-graphnet.data.extractors.internal.parquet_extractor", false]], "graphnet.data.extractors.km3net.km3netrootextractor": [[40, "module-graphnet.data.extractors.km3net.km3netrootextractor", false]], "graphnet.data.extractors.km3net.utilities": [[44, "module-graphnet.data.extractors.km3net.utilities", false]], "graphnet.data.extractors.km3net.utilities.utils_osc": [[46, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false]], "graphnet.data.extractors.liquido": [[48, "module-graphnet.data.extractors.liquido", false]], "graphnet.data.extractors.liquido.h5_extractor": [[49, "module-graphnet.data.extractors.liquido.h5_extractor", false]], "graphnet.data.extractors.prometheus": [[50, "module-graphnet.data.extractors.prometheus", false]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[51, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false]], "graphnet.data.readers.graphnet_file_reader": [[57, "module-graphnet.data.readers.graphnet_file_reader", false]], "graphnet.data.readers.i3reader": [[58, "module-graphnet.data.readers.i3reader", false]], "graphnet.data.readers.internal_parquet_reader": [[59, "module-graphnet.data.readers.internal_parquet_reader", false]], "graphnet.data.readers.liquido_reader": [[61, "module-graphnet.data.readers.liquido_reader", false]], "graphnet.data.readers.prometheus_reader": [[62, "module-graphnet.data.readers.prometheus_reader", false]], "graphnet.data.utilities": [[65, "module-graphnet.data.utilities", false]], "graphnet.data.utilities.random": [[67, "module-graphnet.data.utilities.random", false]], "graphnet.data.utilities.sqlite_utilities": [[68, "module-graphnet.data.utilities.sqlite_utilities", false]], "graphnet.data.utilities.string_selection_resolver": [[69, "module-graphnet.data.utilities.string_selection_resolver", false]], "graphnet.data.writers": [[70, "module-graphnet.data.writers", false]], "graphnet.data.writers.graphnet_writer": [[71, "module-graphnet.data.writers.graphnet_writer", false]], "graphnet.data.writers.parquet_writer": [[72, "module-graphnet.data.writers.parquet_writer", false]], "graphnet.data.writers.sqlite_writer": [[73, "module-graphnet.data.writers.sqlite_writer", false]], "graphnet.deployment": [[77, "module-graphnet.deployment", false]], "graphnet.deployment.deployer": [[78, "module-graphnet.deployment.deployer", false]], "graphnet.deployment.deployment_module": [[79, "module-graphnet.deployment.deployment_module", false]], "graphnet.deployment.icecube.cleaning_module": [[83, "module-graphnet.deployment.icecube.cleaning_module", false]], "graphnet.deployment.icecube.inference_module": [[85, "module-graphnet.deployment.icecube.inference_module", false]], "graphnet.exceptions": [[86, "module-graphnet.exceptions", false]], "graphnet.exceptions.exceptions": [[87, "module-graphnet.exceptions.exceptions", false]], "graphnet.models": [[88, "module-graphnet.models", false]], "graphnet.models.coarsening": [[89, "module-graphnet.models.coarsening", false]], "graphnet.models.components": [[90, "module-graphnet.models.components", false]], "graphnet.models.components.embedding": [[91, "module-graphnet.models.components.embedding", false]], "graphnet.models.components.layers": [[92, "module-graphnet.models.components.layers", false]], "graphnet.models.components.pool": [[93, "module-graphnet.models.components.pool", false]], "graphnet.models.detector": [[94, "module-graphnet.models.detector", false]], "graphnet.models.detector.detector": [[95, "module-graphnet.models.detector.detector", false]], "graphnet.models.detector.icecube": [[96, "module-graphnet.models.detector.icecube", false]], "graphnet.models.detector.liquido": [[97, "module-graphnet.models.detector.liquido", false]], "graphnet.models.detector.orca": [[98, "module-graphnet.models.detector.orca", false]], "graphnet.models.detector.prometheus": [[99, "module-graphnet.models.detector.prometheus", false]], "graphnet.models.easy_model": [[100, "module-graphnet.models.easy_model", false]], "graphnet.models.gnn": [[101, "module-graphnet.models.gnn", false]], "graphnet.models.gnn.convnet": [[103, "module-graphnet.models.gnn.convnet", false]], "graphnet.models.gnn.dynedge": [[104, "module-graphnet.models.gnn.dynedge", false]], "graphnet.models.gnn.dynedge_jinst": [[105, "module-graphnet.models.gnn.dynedge_jinst", false]], "graphnet.models.gnn.dynedge_kaggle_tito": [[106, "module-graphnet.models.gnn.dynedge_kaggle_tito", false]], "graphnet.models.gnn.gnn": [[107, "module-graphnet.models.gnn.gnn", false]], "graphnet.models.gnn.icemix": [[108, "module-graphnet.models.gnn.icemix", false]], "graphnet.models.gnn.particlenet": [[109, "module-graphnet.models.gnn.particlenet", false]], "graphnet.models.gnn.rnn_tito": [[102, "module-graphnet.models.gnn.RNN_tito", false]], "graphnet.models.graphs": [[110, "module-graphnet.models.graphs", false]], "graphnet.models.graphs.edges": [[111, "module-graphnet.models.graphs.edges", false]], "graphnet.models.graphs.edges.edges": [[112, "module-graphnet.models.graphs.edges.edges", false]], "graphnet.models.graphs.edges.minkowski": [[113, "module-graphnet.models.graphs.edges.minkowski", false]], "graphnet.models.graphs.graph_definition": [[114, "module-graphnet.models.graphs.graph_definition", false]], "graphnet.models.graphs.graphs": [[115, "module-graphnet.models.graphs.graphs", false]], "graphnet.models.graphs.nodes": [[116, "module-graphnet.models.graphs.nodes", false]], "graphnet.models.graphs.nodes.nodes": [[117, "module-graphnet.models.graphs.nodes.nodes", false]], "graphnet.models.graphs.utils": [[118, "module-graphnet.models.graphs.utils", false]], "graphnet.models.model": [[119, "module-graphnet.models.model", false]], "graphnet.models.rnn": [[120, "module-graphnet.models.rnn", false]], "graphnet.models.rnn.node_rnn": [[121, "module-graphnet.models.rnn.node_rnn", false]], "graphnet.models.standard_averaged_model": [[122, "module-graphnet.models.standard_averaged_model", false]], "graphnet.models.standard_model": [[123, "module-graphnet.models.standard_model", false]], "graphnet.models.task": [[124, "module-graphnet.models.task", false]], "graphnet.models.task.classification": [[125, "module-graphnet.models.task.classification", false]], "graphnet.models.task.reconstruction": [[126, "module-graphnet.models.task.reconstruction", false]], "graphnet.models.task.task": [[127, "module-graphnet.models.task.task", false]], "graphnet.models.transformer": [[128, "module-graphnet.models.transformer", false]], "graphnet.models.transformer.iseecube": [[129, "module-graphnet.models.transformer.iseecube", false]], "graphnet.models.utils": [[130, "module-graphnet.models.utils", false]], "graphnet.training": [[131, "module-graphnet.training", false]], "graphnet.training.callbacks": [[132, "module-graphnet.training.callbacks", false]], "graphnet.training.labels": [[133, "module-graphnet.training.labels", false]], "graphnet.training.loss_functions": [[134, "module-graphnet.training.loss_functions", false]], "graphnet.training.weight_fitting": [[136, "module-graphnet.training.weight_fitting", false]], "graphnet.utilities": [[137, "module-graphnet.utilities", false]], "graphnet.utilities.argparse": [[138, "module-graphnet.utilities.argparse", false]], "graphnet.utilities.config": [[139, "module-graphnet.utilities.config", false]], "graphnet.utilities.config.base_config": [[140, "module-graphnet.utilities.config.base_config", false]], "graphnet.utilities.config.configurable": [[141, "module-graphnet.utilities.config.configurable", false]], "graphnet.utilities.config.dataset_config": [[142, "module-graphnet.utilities.config.dataset_config", false]], "graphnet.utilities.config.model_config": [[143, "module-graphnet.utilities.config.model_config", false]], "graphnet.utilities.config.parsing": [[144, "module-graphnet.utilities.config.parsing", false]], "graphnet.utilities.config.training_config": [[145, "module-graphnet.utilities.config.training_config", false]], "graphnet.utilities.decorators": [[146, "module-graphnet.utilities.decorators", false]], "graphnet.utilities.deprecation_tools": [[147, "module-graphnet.utilities.deprecation_tools", false]], "graphnet.utilities.filesys": [[148, "module-graphnet.utilities.filesys", false]], "graphnet.utilities.imports": [[149, "module-graphnet.utilities.imports", false]], "graphnet.utilities.logging": [[150, "module-graphnet.utilities.logging", false]], "graphnet.utilities.maths": [[151, "module-graphnet.utilities.maths", false]], "graphnetearlystopping (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping", false]], "graphnetfilereader (class in graphnet.data.readers.graphnet_file_reader)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader", false]], "graphnetwriter (class in graphnet.data.writers.graphnet_writer)": [[71, "graphnet.data.writers.graphnet_writer.GraphNeTWriter", false]], "group_by() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.group_by", false]], "group_pulses_to_dom() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.group_pulses_to_dom", false]], "group_pulses_to_pmt() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.group_pulses_to_pmt", false]], "h5extractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[49, "graphnet.data.extractors.liquido.h5_extractor.H5Extractor", false]], "h5hitextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[49, "graphnet.data.extractors.liquido.h5_extractor.H5HitExtractor", false]], "h5truthextractor (class in graphnet.data.extractors.liquido.h5_extractor)": [[49, "graphnet.data.extractors.liquido.h5_extractor.H5TruthExtractor", false]], "handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.handlers", false]], "has_extension() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.has_extension", false]], "has_icecube_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_icecube_package", false]], "has_torch_package() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.has_torch_package", false]], "i3_file (graphnet.data.dataclasses.i3fileset attribute)": [[6, "graphnet.data.dataclasses.I3FileSet.i3_file", false]], "i3_files (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.i3_files", false]], "i3extractor (class in graphnet.data.extractors.icecube.i3extractor)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor", false]], "i3featureextractor (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractor", false]], "i3featureextractoricecube86 (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCube86", false]], "i3featureextractoricecubedeepcore (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeDeepCore", false]], "i3featureextractoricecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3FeatureExtractorIceCubeUpgrade", false]], "i3fileset (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.I3FileSet", false]], "i3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3Filter", false]], "i3filtermask (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.I3FilterMask", false]], "i3galacticplanehybridrecoextractor (class in graphnet.data.extractors.icecube.i3hybridrecoextractor)": [[23, "graphnet.data.extractors.icecube.i3hybridrecoextractor.I3GalacticPlaneHybridRecoExtractor", false]], "i3genericextractor (class in graphnet.data.extractors.icecube.i3genericextractor)": [[22, "graphnet.data.extractors.icecube.i3genericextractor.I3GenericExtractor", false]], "i3inferencemodule (class in graphnet.deployment.icecube.inference_module)": [[85, "graphnet.deployment.icecube.inference_module.I3InferenceModule", false]], "i3ntmuonlabelextractor (class in graphnet.data.extractors.icecube.i3ntmuonlabelsextractor)": [[24, "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor.I3NTMuonLabelExtractor", false]], "i3particleextractor (class in graphnet.data.extractors.icecube.i3particleextractor)": [[25, "graphnet.data.extractors.icecube.i3particleextractor.I3ParticleExtractor", false]], "i3pisaextractor (class in graphnet.data.extractors.icecube.i3pisaextractor)": [[26, "graphnet.data.extractors.icecube.i3pisaextractor.I3PISAExtractor", false]], "i3pulsecleanermodule (class in graphnet.deployment.icecube.cleaning_module)": [[83, "graphnet.deployment.icecube.cleaning_module.I3PulseCleanerModule", false]], "i3pulsenoisetruthflagicecubeupgrade (class in graphnet.data.extractors.icecube.i3featureextractor)": [[21, "graphnet.data.extractors.icecube.i3featureextractor.I3PulseNoiseTruthFlagIceCubeUpgrade", false]], "i3quesoextractor (class in graphnet.data.extractors.icecube.i3quesoextractor)": [[27, "graphnet.data.extractors.icecube.i3quesoextractor.I3QUESOExtractor", false]], "i3reader (class in graphnet.data.readers.i3reader)": [[58, "graphnet.data.readers.i3reader.I3Reader", false]], "i3retroextractor (class in graphnet.data.extractors.icecube.i3retroextractor)": [[28, "graphnet.data.extractors.icecube.i3retroextractor.I3RetroExtractor", false]], "i3splinempeicextractor (class in graphnet.data.extractors.icecube.i3splinempeextractor)": [[29, "graphnet.data.extractors.icecube.i3splinempeextractor.I3SplineMPEICExtractor", false]], "i3truthextractor (class in graphnet.data.extractors.icecube.i3truthextractor)": [[30, "graphnet.data.extractors.icecube.i3truthextractor.I3TruthExtractor", false]], "i3tumextractor (class in graphnet.data.extractors.icecube.i3tumextractor)": [[31, "graphnet.data.extractors.icecube.i3tumextractor.I3TUMExtractor", false]], "ice_transparency() (in module graphnet.models.graphs.utils)": [[118, "graphnet.models.graphs.utils.ice_transparency", false]], "icecube86 (class in graphnet.models.detector.icecube)": [[96, "graphnet.models.detector.icecube.IceCube86", false]], "icecube86prometheus (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus", false]], "icecubedeepcore (class in graphnet.models.detector.icecube)": [[96, "graphnet.models.detector.icecube.IceCubeDeepCore", false]], "icecubedeepcore8 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8", false]], "icecubegen2 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2", false]], "icecubekaggle (class in graphnet.models.detector.icecube)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle", false]], "icecubeupgrade (class in graphnet.models.detector.icecube)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade", false]], "icecubeupgrade7 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7", false]], "icedemo81 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.IceDemo81", false]], "icemixnodes (class in graphnet.models.graphs.nodes.nodes)": [[117, "graphnet.models.graphs.nodes.nodes.IceMixNodes", false]], "identify_indices() (in module graphnet.models.graphs.utils)": [[118, "graphnet.models.graphs.utils.identify_indices", false]], "identitytask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.IdentityTask", false]], "index_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.index_column", false]], "inelasticityreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction", false]], "inference() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.inference", false]], "inference() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.inference", false]], "info() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.info", false]], "init_global_index() (in module graphnet.data.dataconverter)": [[7, "graphnet.data.dataconverter.init_global_index", false]], "init_predict_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_predict_tqdm", false]], "init_test_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_test_tqdm", false]], "init_train_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_train_tqdm", false]], "init_validation_tqdm() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.init_validation_tqdm", false]], "is_boost_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_class", false]], "is_boost_enum() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_boost_enum", false]], "is_gcd_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_gcd_file", false]], "is_graphnet_class() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_class", false]], "is_graphnet_module() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.is_graphnet_module", false]], "is_i3_file() (in module graphnet.utilities.filesys)": [[148, "graphnet.utilities.filesys.is_i3_file", false]], "is_icecube_class() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_icecube_class", false]], "is_method() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_method", false]], "is_type() (in module graphnet.data.extractors.icecube.utilities.types)": [[36, "graphnet.data.extractors.icecube.utilities.types.is_type", false]], "iseecube (class in graphnet.models.transformer.iseecube)": [[129, "graphnet.models.transformer.iseecube.ISeeCube", false]], "key (graphnet.training.labels.label property)": [[133, "graphnet.training.labels.Label.key", false]], "km3netrootextractor (class in graphnet.data.extractors.km3net.km3netrootextractor)": [[40, "graphnet.data.extractors.km3net.km3netrootextractor.KM3NeTROOTExtractor", false]], "knn_graph_batch() (in module graphnet.models.utils)": [[130, "graphnet.models.utils.knn_graph_batch", false]], "knnedges (class in graphnet.models.graphs.edges.edges)": [[112, "graphnet.models.graphs.edges.edges.KNNEdges", false]], "knngraph (class in graphnet.models.graphs.graphs)": [[115, "graphnet.models.graphs.graphs.KNNGraph", false]], "label (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Label", false]], "labels (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.labels", false]], "learnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.LearnedTask", false]], "lex_sort() (in module graphnet.models.graphs.utils)": [[118, "graphnet.models.graphs.utils.lex_sort", false]], "liquido_v1 (class in graphnet.models.detector.liquido)": [[97, "graphnet.models.detector.liquido.LiquidO_v1", false]], "liquidoreader (class in graphnet.data.readers.liquido_reader)": [[61, "graphnet.data.readers.liquido_reader.LiquidOReader", false]], "list_all_submodules() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.list_all_submodules", false]], "load() (graphnet.models.model.model class method)": [[119, "graphnet.models.model.Model.load", false]], "load() (graphnet.utilities.config.base_config.baseconfig class method)": [[140, "graphnet.utilities.config.base_config.BaseConfig.load", false]], "load_state_dict() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.load_state_dict", false]], "load_state_dict() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.load_state_dict", false]], "log_cmk() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk", false]], "log_cmk_approx() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_approx", false]], "log_cmk_exact() (graphnet.training.loss_functions.vonmisesfisherloss class method)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss.log_cmk_exact", false]], "logcmk (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCMK", false]], "logcoshloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LogCoshLoss", false]], "logger (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.Logger", false]], "loss_weight_column (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_column", false]], "loss_weight_default_value (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_default_value", false]], "loss_weight_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.loss_weight_table", false]], "lossfunction (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.LossFunction", false]], "merge_files() (graphnet.data.dataconverter.dataconverter method)": [[7, "graphnet.data.dataconverter.DataConverter.merge_files", false]], "merge_files() (graphnet.data.writers.graphnet_writer.graphnetwriter method)": [[71, "graphnet.data.writers.graphnet_writer.GraphNeTWriter.merge_files", false]], "merge_files() (graphnet.data.writers.parquet_writer.parquetwriter method)": [[72, "graphnet.data.writers.parquet_writer.ParquetWriter.merge_files", false]], "merge_files() (graphnet.data.writers.sqlite_writer.sqlitewriter method)": [[73, "graphnet.data.writers.sqlite_writer.SQLiteWriter.merge_files", false]], "message() (graphnet.models.components.layers.edgeconvtito method)": [[92, "graphnet.models.components.layers.EdgeConvTito.message", false]], "min_pool() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.min_pool", false]], "min_pool_x() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.min_pool_x", false]], "minkowskiknnedges (class in graphnet.models.graphs.edges.minkowski)": [[113, "graphnet.models.graphs.edges.minkowski.MinkowskiKNNEdges", false]], "mlp (class in graphnet.models.components.layers)": [[92, "graphnet.models.components.layers.Mlp", false]], "model (class in graphnet.models.model)": [[119, "graphnet.models.model.Model", false]], "model_computed_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[140, "graphnet.utilities.config.base_config.BaseConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.model_computed_fields", false]], "model_computed_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.model_computed_fields", false]], "model_config (graphnet.utilities.config.base_config.baseconfig attribute)": [[140, "graphnet.utilities.config.base_config.BaseConfig.model_config", false]], "model_config (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.model_config", false]], "model_config (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.model_config", false]], "model_config (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.model_config", false]], "model_fields (graphnet.utilities.config.base_config.baseconfig attribute)": [[140, "graphnet.utilities.config.base_config.BaseConfig.model_fields", false]], "model_fields (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.model_fields", false]], "model_fields (graphnet.utilities.config.model_config.modelconfig attribute)": [[143, "graphnet.utilities.config.model_config.ModelConfig.model_fields", false]], "model_fields (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.model_fields", false]], "modelconfig (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfig", false]], "modelconfigsaverabc (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverABC", false]], "modelconfigsavermeta (class in graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.ModelConfigSaverMeta", false]], "module": [[1, "module-graphnet", false], [2, "module-graphnet.constants", false], [6, "module-graphnet.data.dataclasses", false], [7, "module-graphnet.data.dataconverter", false], [16, "module-graphnet.data.extractors", false], [17, "module-graphnet.data.extractors.combine_extractors", false], [18, "module-graphnet.data.extractors.extractor", false], [19, "module-graphnet.data.extractors.icecube", false], [20, "module-graphnet.data.extractors.icecube.i3extractor", false], [21, "module-graphnet.data.extractors.icecube.i3featureextractor", false], [22, "module-graphnet.data.extractors.icecube.i3genericextractor", false], [23, "module-graphnet.data.extractors.icecube.i3hybridrecoextractor", false], [24, "module-graphnet.data.extractors.icecube.i3ntmuonlabelsextractor", false], [25, "module-graphnet.data.extractors.icecube.i3particleextractor", false], [26, "module-graphnet.data.extractors.icecube.i3pisaextractor", false], [27, "module-graphnet.data.extractors.icecube.i3quesoextractor", false], [28, "module-graphnet.data.extractors.icecube.i3retroextractor", false], [29, "module-graphnet.data.extractors.icecube.i3splinempeextractor", false], [30, "module-graphnet.data.extractors.icecube.i3truthextractor", false], [31, "module-graphnet.data.extractors.icecube.i3tumextractor", false], [32, "module-graphnet.data.extractors.icecube.utilities", false], [33, "module-graphnet.data.extractors.icecube.utilities.collections", false], [34, "module-graphnet.data.extractors.icecube.utilities.frames", false], [35, "module-graphnet.data.extractors.icecube.utilities.i3_filters", false], [36, "module-graphnet.data.extractors.icecube.utilities.types", false], [37, "module-graphnet.data.extractors.internal", false], [38, "module-graphnet.data.extractors.internal.parquet_extractor", false], [40, "module-graphnet.data.extractors.km3net.km3netrootextractor", false], [44, "module-graphnet.data.extractors.km3net.utilities", false], [46, "module-graphnet.data.extractors.km3net.utilities.utils_osc", false], [48, "module-graphnet.data.extractors.liquido", false], [49, "module-graphnet.data.extractors.liquido.h5_extractor", false], [50, "module-graphnet.data.extractors.prometheus", false], [51, "module-graphnet.data.extractors.prometheus.prometheus_extractor", false], [57, "module-graphnet.data.readers.graphnet_file_reader", false], [58, "module-graphnet.data.readers.i3reader", false], [59, "module-graphnet.data.readers.internal_parquet_reader", false], [61, "module-graphnet.data.readers.liquido_reader", false], [62, "module-graphnet.data.readers.prometheus_reader", false], [65, "module-graphnet.data.utilities", false], [67, "module-graphnet.data.utilities.random", false], [68, "module-graphnet.data.utilities.sqlite_utilities", false], [69, "module-graphnet.data.utilities.string_selection_resolver", false], [70, "module-graphnet.data.writers", false], [71, "module-graphnet.data.writers.graphnet_writer", false], [72, "module-graphnet.data.writers.parquet_writer", false], [73, "module-graphnet.data.writers.sqlite_writer", false], [77, "module-graphnet.deployment", false], [78, "module-graphnet.deployment.deployer", false], [79, "module-graphnet.deployment.deployment_module", false], [83, "module-graphnet.deployment.icecube.cleaning_module", false], [85, "module-graphnet.deployment.icecube.inference_module", false], [86, "module-graphnet.exceptions", false], [87, "module-graphnet.exceptions.exceptions", false], [88, "module-graphnet.models", false], [89, "module-graphnet.models.coarsening", false], [90, "module-graphnet.models.components", false], [91, "module-graphnet.models.components.embedding", false], [92, "module-graphnet.models.components.layers", false], [93, "module-graphnet.models.components.pool", false], [94, "module-graphnet.models.detector", false], [95, "module-graphnet.models.detector.detector", false], [96, "module-graphnet.models.detector.icecube", false], [97, "module-graphnet.models.detector.liquido", false], [98, "module-graphnet.models.detector.orca", false], [99, "module-graphnet.models.detector.prometheus", false], [100, "module-graphnet.models.easy_model", false], [101, "module-graphnet.models.gnn", false], [102, "module-graphnet.models.gnn.RNN_tito", false], [103, "module-graphnet.models.gnn.convnet", false], [104, "module-graphnet.models.gnn.dynedge", false], [105, "module-graphnet.models.gnn.dynedge_jinst", false], [106, "module-graphnet.models.gnn.dynedge_kaggle_tito", false], [107, "module-graphnet.models.gnn.gnn", false], [108, "module-graphnet.models.gnn.icemix", false], [109, "module-graphnet.models.gnn.particlenet", false], [110, "module-graphnet.models.graphs", false], [111, "module-graphnet.models.graphs.edges", false], [112, "module-graphnet.models.graphs.edges.edges", false], [113, "module-graphnet.models.graphs.edges.minkowski", false], [114, "module-graphnet.models.graphs.graph_definition", false], [115, "module-graphnet.models.graphs.graphs", false], [116, "module-graphnet.models.graphs.nodes", false], [117, "module-graphnet.models.graphs.nodes.nodes", false], [118, "module-graphnet.models.graphs.utils", false], [119, "module-graphnet.models.model", false], [120, "module-graphnet.models.rnn", false], [121, "module-graphnet.models.rnn.node_rnn", false], [122, "module-graphnet.models.standard_averaged_model", false], [123, "module-graphnet.models.standard_model", false], [124, "module-graphnet.models.task", false], [125, "module-graphnet.models.task.classification", false], [126, "module-graphnet.models.task.reconstruction", false], [127, "module-graphnet.models.task.task", false], [128, "module-graphnet.models.transformer", false], [129, "module-graphnet.models.transformer.iseecube", false], [130, "module-graphnet.models.utils", false], [131, "module-graphnet.training", false], [132, "module-graphnet.training.callbacks", false], [133, "module-graphnet.training.labels", false], [134, "module-graphnet.training.loss_functions", false], [136, "module-graphnet.training.weight_fitting", false], [137, "module-graphnet.utilities", false], [138, "module-graphnet.utilities.argparse", false], [139, "module-graphnet.utilities.config", false], [140, "module-graphnet.utilities.config.base_config", false], [141, "module-graphnet.utilities.config.configurable", false], [142, "module-graphnet.utilities.config.dataset_config", false], [143, "module-graphnet.utilities.config.model_config", false], [144, "module-graphnet.utilities.config.parsing", false], [145, "module-graphnet.utilities.config.training_config", false], [146, "module-graphnet.utilities.decorators", false], [147, "module-graphnet.utilities.deprecation_tools", false], [148, "module-graphnet.utilities.filesys", false], [149, "module-graphnet.utilities.imports", false], [150, "module-graphnet.utilities.logging", false], [151, "module-graphnet.utilities.maths", false]], "modules (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.modules", false]], "mseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.MSELoss", false]], "multiclassclassificationtask (class in graphnet.models.task.classification)": [[125, "graphnet.models.task.classification.MulticlassClassificationTask", false]], "name (graphnet.data.extractors.extractor.extractor property)": [[18, "graphnet.data.extractors.extractor.Extractor.name", false]], "nb_inputs (graphnet.models.gnn.gnn.gnn property)": [[107, "graphnet.models.gnn.gnn.GNN.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtask attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.classification.binaryclassificationtasklogits attribute)": [[125, "graphnet.models.task.classification.BinaryClassificationTaskLogits.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.azimuthreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.directionreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithpower attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithPower.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energyreconstructionwithuncertainty attribute)": [[126, "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.energytcreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.EnergyTCReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.inelasticityreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.InelasticityReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.positionreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.timereconstruction attribute)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.vertexreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstruction attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction.nb_inputs", false]], "nb_inputs (graphnet.models.task.reconstruction.zenithreconstructionwithkappa attribute)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.identitytask property)": [[127, "graphnet.models.task.task.IdentityTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.learnedtask property)": [[127, "graphnet.models.task.task.LearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.standardlearnedtask property)": [[127, "graphnet.models.task.task.StandardLearnedTask.nb_inputs", false]], "nb_inputs (graphnet.models.task.task.task property)": [[127, "graphnet.models.task.task.Task.nb_inputs", false]], "nb_inputs() (graphnet.models.task.task.standardflowtask method)": [[127, "graphnet.models.task.task.StandardFlowTask.nb_inputs", false]], "nb_outputs (graphnet.models.gnn.gnn.gnn property)": [[107, "graphnet.models.gnn.gnn.GNN.nb_outputs", false]], "nb_outputs (graphnet.models.graphs.nodes.nodes.nodedefinition property)": [[117, "graphnet.models.graphs.nodes.nodes.NodeDefinition.nb_outputs", false]], "nb_repeats_allowed (graphnet.utilities.logging.repeatfilter attribute)": [[150, "graphnet.utilities.logging.RepeatFilter.nb_repeats_allowed", false]], "no_weight_decay() (graphnet.models.gnn.icemix.deepice method)": [[108, "graphnet.models.gnn.icemix.DeepIce.no_weight_decay", false]], "node_rnn (class in graphnet.models.rnn.node_rnn)": [[121, "graphnet.models.rnn.node_rnn.Node_RNN", false]], "node_truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth", false]], "node_truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.node_truth_table", false]], "nodeasdomtimeseries (class in graphnet.models.graphs.nodes.nodes)": [[117, "graphnet.models.graphs.nodes.nodes.NodeAsDOMTimeSeries", false]], "nodedefinition (class in graphnet.models.graphs.nodes.nodes)": [[117, "graphnet.models.graphs.nodes.nodes.NodeDefinition", false]], "nodesaspulses (class in graphnet.models.graphs.nodes.nodes)": [[117, "graphnet.models.graphs.nodes.nodes.NodesAsPulses", false]], "nullspliti3filter (class in graphnet.data.extractors.icecube.utilities.i3_filters)": [[35, "graphnet.data.extractors.icecube.utilities.i3_filters.NullSplitI3Filter", false]], "on_fit_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_fit_end", false]], "on_train_end() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.on_train_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_train_epoch_end", false]], "on_train_epoch_end() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_end", false]], "on_train_epoch_start() (graphnet.training.callbacks.progressbar method)": [[132, "graphnet.training.callbacks.ProgressBar.on_train_epoch_start", false]], "on_validation_end() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.on_validation_end", false]], "optimizer_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.optimizer_step", false]], "options (class in graphnet.utilities.argparse)": [[138, "graphnet.utilities.argparse.Options", false]], "orca115 (class in graphnet.models.detector.orca)": [[98, "graphnet.models.detector.orca.ORCA115", false]], "orca150 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.ORCA150", false]], "orca150superdense (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense", false]], "orca6 (class in graphnet.models.detector.orca)": [[98, "graphnet.models.detector.orca.ORCA6", false]], "output_folder (graphnet.data.dataclasses.settings attribute)": [[6, "graphnet.data.dataclasses.Settings.output_folder", false]], "pairwise_shuffle() (in module graphnet.data.utilities.random)": [[67, "graphnet.data.utilities.random.pairwise_shuffle", false]], "parquetextractor (class in graphnet.data.extractors.internal.parquet_extractor)": [[38, "graphnet.data.extractors.internal.parquet_extractor.ParquetExtractor", false]], "parquetreader (class in graphnet.data.readers.internal_parquet_reader)": [[59, "graphnet.data.readers.internal_parquet_reader.ParquetReader", false]], "parquetwriter (class in graphnet.data.writers.parquet_writer)": [[72, "graphnet.data.writers.parquet_writer.ParquetWriter", false]], "particlenet (class in graphnet.models.gnn.particlenet)": [[109, "graphnet.models.gnn.particlenet.ParticleNeT", false]], "path (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.path", false]], "percentileclusters (class in graphnet.models.graphs.nodes.nodes)": [[117, "graphnet.models.graphs.nodes.nodes.PercentileClusters", false]], "piecewiselinearlr (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.PiecewiseLinearLR", false]], "ponetriangle (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.PONETriangle", false]], "pop_default() (graphnet.utilities.argparse.options method)": [[138, "graphnet.utilities.argparse.Options.pop_default", false]], "positionreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.PositionReconstruction", false]], "predict() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.predict", false]], "predict_as_dataframe() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.predict_as_dataframe", false]], "prediction_labels (graphnet.models.easy_model.easysyntax property)": [[100, "graphnet.models.easy_model.EasySyntax.prediction_labels", false]], "progressbar (class in graphnet.training.callbacks)": [[132, "graphnet.training.callbacks.ProgressBar", false]], "prometheus (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.Prometheus", false]], "prometheusextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[51, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusExtractor", false]], "prometheusfeatureextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[51, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusFeatureExtractor", false]], "prometheusreader (class in graphnet.data.readers.prometheus_reader)": [[62, "graphnet.data.readers.prometheus_reader.PrometheusReader", false]], "prometheustruthextractor (class in graphnet.data.extractors.prometheus.prometheus_extractor)": [[51, "graphnet.data.extractors.prometheus.prometheus_extractor.PrometheusTruthExtractor", false]], "pulsemaps (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.pulsemaps", false]], "query_database() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.query_database", false]], "radialedges (class in graphnet.models.graphs.edges.edges)": [[112, "graphnet.models.graphs.edges.edges.RadialEdges", false]], "reduce_options (graphnet.models.coarsening.coarsening attribute)": [[89, "graphnet.models.coarsening.Coarsening.reduce_options", false]], "rename_state_dict_entries() (in module graphnet.utilities.deprecation_tools)": [[147, "graphnet.utilities.deprecation_tools.rename_state_dict_entries", false]], "repeatfilter (class in graphnet.utilities.logging)": [[150, "graphnet.utilities.logging.RepeatFilter", false]], "requires_icecube() (in module graphnet.utilities.imports)": [[149, "graphnet.utilities.imports.requires_icecube", false]], "reset_parameters() (graphnet.models.components.layers.edgeconvtito method)": [[92, "graphnet.models.components.layers.EdgeConvTito.reset_parameters", false]], "resolve() (graphnet.data.utilities.string_selection_resolver.stringselectionresolver method)": [[69, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver.resolve", false]], "rmseloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSELoss", false]], "rmsevonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.RMSEVonMisesFisher3DLoss", false]], "rnn_tito (class in graphnet.models.gnn.rnn_tito)": [[102, "graphnet.models.gnn.RNN_tito.RNN_TITO", false]], "run() (graphnet.deployment.deployer.deployer method)": [[78, "graphnet.deployment.deployer.Deployer.run", false]], "run_sql_code() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.run_sql_code", false]], "save() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.save", false]], "save_config() (graphnet.utilities.config.configurable.configurable method)": [[141, "graphnet.utilities.config.configurable.Configurable.save_config", false]], "save_dataset_config() (in module graphnet.utilities.config.dataset_config)": [[142, "graphnet.utilities.config.dataset_config.save_dataset_config", false]], "save_model_config() (in module graphnet.utilities.config.model_config)": [[143, "graphnet.utilities.config.model_config.save_model_config", false]], "save_state_dict() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.save_state_dict", false]], "save_to_sql() (in module graphnet.data.utilities.sqlite_utilities)": [[68, "graphnet.data.utilities.sqlite_utilities.save_to_sql", false]], "seed (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.seed", false]], "selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.selection", false]], "sensor_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[96, "graphnet.models.detector.icecube.IceCube86.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[97, "graphnet.models.detector.liquido.LiquidO_v1.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca115 attribute)": [[98, "graphnet.models.detector.orca.ORCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.orca.orca6 attribute)": [[98, "graphnet.models.detector.orca.ORCA6.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[99, "graphnet.models.detector.prometheus.ARCA115.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[99, "graphnet.models.detector.prometheus.IceDemo81.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[99, "graphnet.models.detector.prometheus.PONETriangle.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211.sensor_id_column", false]], "sensor_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[99, "graphnet.models.detector.prometheus.WaterDemo81.sensor_id_column", false]], "sensor_index_name (graphnet.models.detector.detector.detector property)": [[95, "graphnet.models.detector.detector.Detector.sensor_index_name", false]], "sensor_position_names (graphnet.models.detector.detector.detector property)": [[95, "graphnet.models.detector.detector.Detector.sensor_position_names", false]], "serialise() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.serialise", false]], "set_extractors() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.set_extractors", false]], "set_gcd() (graphnet.data.extractors.icecube.i3extractor.i3extractor method)": [[20, "graphnet.data.extractors.icecube.i3extractor.I3Extractor.set_gcd", false]], "set_number_of_inputs() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[117, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_number_of_inputs", false]], "set_output_feature_names() (graphnet.models.graphs.nodes.nodes.nodedefinition method)": [[117, "graphnet.models.graphs.nodes.nodes.NodeDefinition.set_output_feature_names", false]], "set_verbose_print_recursively() (graphnet.models.model.model method)": [[119, "graphnet.models.model.Model.set_verbose_print_recursively", false]], "setlevel() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.setLevel", false]], "settings (class in graphnet.data.dataclasses)": [[6, "graphnet.data.dataclasses.Settings", false]], "setup() (graphnet.training.callbacks.graphnetearlystopping method)": [[132, "graphnet.training.callbacks.GraphnetEarlyStopping.setup", false]], "shared_step() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.shared_step", false]], "shared_step() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.shared_step", false]], "sinusoidalposemb (class in graphnet.models.components.embedding)": [[91, "graphnet.models.components.embedding.SinusoidalPosEmb", false]], "spacetimeencoder (class in graphnet.models.components.embedding)": [[91, "graphnet.models.components.embedding.SpacetimeEncoder", false]], "sqlitewriter (class in graphnet.data.writers.sqlite_writer)": [[73, "graphnet.data.writers.sqlite_writer.SQLiteWriter", false]], "standard_arguments (graphnet.utilities.argparse.argumentparser attribute)": [[138, "graphnet.utilities.argparse.ArgumentParser.standard_arguments", false]], "standardaveragedmodel (class in graphnet.models.standard_averaged_model)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel", false]], "standardflowtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardFlowTask", false]], "standardlearnedtask (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.StandardLearnedTask", false]], "standardmodel (class in graphnet.models.standard_model)": [[123, "graphnet.models.standard_model.StandardModel", false]], "std_pool() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.std_pool", false]], "std_pool_x() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.std_pool_x", false]], "stream_handlers (graphnet.utilities.logging.logger property)": [[150, "graphnet.utilities.logging.Logger.stream_handlers", false]], "string_id_column (graphnet.models.detector.icecube.icecube86 attribute)": [[96, "graphnet.models.detector.icecube.IceCube86.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubekaggle attribute)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle.string_id_column", false]], "string_id_column (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade.string_id_column", false]], "string_id_column (graphnet.models.detector.liquido.liquido_v1 attribute)": [[97, "graphnet.models.detector.liquido.LiquidO_v1.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca115 attribute)": [[98, "graphnet.models.detector.orca.ORCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.orca.orca6 attribute)": [[98, "graphnet.models.detector.orca.ORCA6.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.arca115 attribute)": [[99, "graphnet.models.detector.prometheus.ARCA115.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.icedemo81 attribute)": [[99, "graphnet.models.detector.prometheus.IceDemo81.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150 attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.orca150superdense attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.ponetriangle attribute)": [[99, "graphnet.models.detector.prometheus.PONETriangle.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.trident1211 attribute)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211.string_id_column", false]], "string_id_column (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[99, "graphnet.models.detector.prometheus.WaterDemo81.string_id_column", false]], "string_index_name (graphnet.models.detector.detector.detector property)": [[95, "graphnet.models.detector.detector.Detector.string_index_name", false]], "string_selection (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.string_selection", false]], "stringselectionresolver (class in graphnet.data.utilities.string_selection_resolver)": [[69, "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver", false]], "sum_pool() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.sum_pool", false]], "sum_pool_and_distribute() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.sum_pool_and_distribute", false]], "sum_pool_x() (in module graphnet.models.components.pool)": [[93, "graphnet.models.components.pool.sum_pool_x", false]], "target (graphnet.utilities.config.training_config.trainingconfig attribute)": [[145, "graphnet.utilities.config.training_config.TrainingConfig.target", false]], "target_labels (graphnet.models.easy_model.easysyntax property)": [[100, "graphnet.models.easy_model.EasySyntax.target_labels", false]], "task (class in graphnet.models.task.task)": [[127, "graphnet.models.task.task.Task", false]], "timereconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.TimeReconstruction", false]], "track (class in graphnet.training.labels)": [[133, "graphnet.training.labels.Track", false]], "train() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.train", false]], "train_eval() (graphnet.models.task.task.task method)": [[127, "graphnet.models.task.task.Task.train_eval", false]], "training_step() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.training_step", false]], "training_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.training_step", false]], "trainingconfig (class in graphnet.utilities.config.training_config)": [[145, "graphnet.utilities.config.training_config.TrainingConfig", false]], "transpose_list_of_dicts() (in module graphnet.data.extractors.icecube.utilities.collections)": [[33, "graphnet.data.extractors.icecube.utilities.collections.transpose_list_of_dicts", false]], "traverse_and_apply() (in module graphnet.utilities.config.parsing)": [[144, "graphnet.utilities.config.parsing.traverse_and_apply", false]], "trident1211 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211", false]], "truth (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth", false]], "truth_table (graphnet.utilities.config.dataset_config.datasetconfig attribute)": [[142, "graphnet.utilities.config.dataset_config.DatasetConfig.truth_table", false]], "unbatch_edge_index() (in module graphnet.models.coarsening)": [[89, "graphnet.models.coarsening.unbatch_edge_index", false]], "uniform (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.Uniform", false]], "validate_files() (graphnet.data.readers.graphnet_file_reader.graphnetfilereader method)": [[57, "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader.validate_files", false]], "validate_tasks() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.validate_tasks", false]], "validate_tasks() (graphnet.models.standard_model.standardmodel method)": [[123, "graphnet.models.standard_model.StandardModel.validate_tasks", false]], "validation_step() (graphnet.models.easy_model.easysyntax method)": [[100, "graphnet.models.easy_model.EasySyntax.validation_step", false]], "validation_step() (graphnet.models.standard_averaged_model.standardaveragedmodel method)": [[122, "graphnet.models.standard_averaged_model.StandardAveragedModel.validation_step", false]], "verbose_print (graphnet.models.model.model attribute)": [[119, "graphnet.models.model.Model.verbose_print", false]], "vertexreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.VertexReconstruction", false]], "vonmisesfisher2dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher2DLoss", false]], "vonmisesfisher3dloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisher3DLoss", false]], "vonmisesfisherloss (class in graphnet.training.loss_functions)": [[134, "graphnet.training.loss_functions.VonMisesFisherLoss", false]], "warning() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning", false]], "warning_once() (graphnet.utilities.logging.logger method)": [[150, "graphnet.utilities.logging.Logger.warning_once", false]], "waterdemo81 (class in graphnet.models.detector.prometheus)": [[99, "graphnet.models.detector.prometheus.WaterDemo81", false]], "weightfitter (class in graphnet.training.weight_fitting)": [[136, "graphnet.training.weight_fitting.WeightFitter", false]], "with_standard_arguments() (graphnet.utilities.argparse.argumentparser method)": [[138, "graphnet.utilities.argparse.ArgumentParser.with_standard_arguments", false]], "xyz (graphnet.models.detector.icecube.icecube86 attribute)": [[96, "graphnet.models.detector.icecube.IceCube86.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubekaggle attribute)": [[96, "graphnet.models.detector.icecube.IceCubeKaggle.xyz", false]], "xyz (graphnet.models.detector.icecube.icecubeupgrade attribute)": [[96, "graphnet.models.detector.icecube.IceCubeUpgrade.xyz", false]], "xyz (graphnet.models.detector.liquido.liquido_v1 attribute)": [[97, "graphnet.models.detector.liquido.LiquidO_v1.xyz", false]], "xyz (graphnet.models.detector.orca.orca115 attribute)": [[98, "graphnet.models.detector.orca.ORCA115.xyz", false]], "xyz (graphnet.models.detector.orca.orca6 attribute)": [[98, "graphnet.models.detector.orca.ORCA6.xyz", false]], "xyz (graphnet.models.detector.prometheus.arca115 attribute)": [[99, "graphnet.models.detector.prometheus.ARCA115.xyz", false]], "xyz (graphnet.models.detector.prometheus.baikalgvd8 attribute)": [[99, "graphnet.models.detector.prometheus.BaikalGVD8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecube86prometheus attribute)": [[99, "graphnet.models.detector.prometheus.IceCube86Prometheus.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubedeepcore8 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeDeepCore8.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubegen2 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeGen2.xyz", false]], "xyz (graphnet.models.detector.prometheus.icecubeupgrade7 attribute)": [[99, "graphnet.models.detector.prometheus.IceCubeUpgrade7.xyz", false]], "xyz (graphnet.models.detector.prometheus.icedemo81 attribute)": [[99, "graphnet.models.detector.prometheus.IceDemo81.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150 attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150.xyz", false]], "xyz (graphnet.models.detector.prometheus.orca150superdense attribute)": [[99, "graphnet.models.detector.prometheus.ORCA150SuperDense.xyz", false]], "xyz (graphnet.models.detector.prometheus.ponetriangle attribute)": [[99, "graphnet.models.detector.prometheus.PONETriangle.xyz", false]], "xyz (graphnet.models.detector.prometheus.trident1211 attribute)": [[99, "graphnet.models.detector.prometheus.TRIDENT1211.xyz", false]], "xyz (graphnet.models.detector.prometheus.waterdemo81 attribute)": [[99, "graphnet.models.detector.prometheus.WaterDemo81.xyz", false]], "zenithreconstruction (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstruction", false]], "zenithreconstructionwithkappa (class in graphnet.models.task.reconstruction)": [[126, "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa", false]]}, "objects": {"": [[1, 0, 0, "-", "graphnet"]], "graphnet": [[2, 0, 0, "-", "constants"], [77, 0, 0, "-", "deployment"], [86, 0, 0, "-", "exceptions"], [88, 0, 0, "-", "models"], [131, 0, 0, "-", "training"], [137, 0, 0, "-", "utilities"]], "graphnet.data": [[6, 0, 0, "-", "dataclasses"], [7, 0, 0, "-", "dataconverter"], [16, 0, 0, "-", "extractors"], [65, 0, 0, "-", "utilities"], [70, 0, 0, "-", "writers"]], "graphnet.data.dataclasses": [[6, 1, 1, "", "I3FileSet"], [6, 1, 1, "", "Settings"]], "graphnet.data.dataclasses.I3FileSet": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_file"]], "graphnet.data.dataclasses.Settings": [[6, 2, 1, "", "gcd_file"], [6, 2, 1, "", "i3_files"], [6, 2, 1, "", "modules"], [6, 2, 1, "", "output_folder"]], "graphnet.data.dataconverter": [[7, 1, 1, "", "DataConverter"], [7, 4, 1, "", "init_global_index"]], "graphnet.data.dataconverter.DataConverter": [[7, 3, 1, "", "get_map_function"], [7, 3, 1, "", "merge_files"]], "graphnet.data.extractors": [[17, 0, 0, "-", "combine_extractors"], [18, 0, 0, "-", "extractor"], [19, 0, 0, "-", "icecube"], [37, 0, 0, "-", "internal"], [48, 0, 0, "-", "liquido"], [50, 0, 0, "-", "prometheus"]], "graphnet.data.extractors.combine_extractors": [[17, 1, 1, "", "CombinedExtractor"]], "graphnet.data.extractors.extractor": [[18, 1, 1, "", "Extractor"]], "graphnet.data.extractors.extractor.Extractor": [[18, 5, 1, "", "name"]], "graphnet.data.extractors.icecube": [[20, 0, 0, "-", "i3extractor"], [21, 0, 0, "-", "i3featureextractor"], [22, 0, 0, "-", "i3genericextractor"], [23, 0, 0, "-", "i3hybridrecoextractor"], [24, 0, 0, "-", "i3ntmuonlabelsextractor"], [25, 0, 0, "-", "i3particleextractor"], [26, 0, 0, "-", "i3pisaextractor"], [27, 0, 0, "-", "i3quesoextractor"], [28, 0, 0, "-", "i3retroextractor"], [29, 0, 0, "-", "i3splinempeextractor"], [30, 0, 0, "-", "i3truthextractor"], [31, 0, 0, "-", "i3tumextractor"], [32, 0, 0, "-", "utilities"]], "graphnet.data.extractors.icecube.i3extractor": [[20, 1, 1, "", "I3Extractor"]], "graphnet.data.extractors.icecube.i3extractor.I3Extractor": [[20, 3, 1, "", "set_gcd"]], "graphnet.data.extractors.icecube.i3featureextractor": [[21, 1, 1, "", "I3FeatureExtractor"], [21, 1, 1, "", "I3FeatureExtractorIceCube86"], [21, 1, 1, "", "I3FeatureExtractorIceCubeDeepCore"], [21, 1, 1, "", "I3FeatureExtractorIceCubeUpgrade"], [21, 1, 1, "", "I3PulseNoiseTruthFlagIceCubeUpgrade"]], "graphnet.data.extractors.icecube.i3genericextractor": [[22, 1, 1, "", "I3GenericExtractor"]], "graphnet.data.extractors.icecube.i3hybridrecoextractor": [[23, 1, 1, "", "I3GalacticPlaneHybridRecoExtractor"]], "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor": [[24, 1, 1, "", "I3NTMuonLabelExtractor"]], "graphnet.data.extractors.icecube.i3particleextractor": [[25, 1, 1, "", "I3ParticleExtractor"]], "graphnet.data.extractors.icecube.i3pisaextractor": [[26, 1, 1, "", "I3PISAExtractor"]], "graphnet.data.extractors.icecube.i3quesoextractor": [[27, 1, 1, "", "I3QUESOExtractor"]], "graphnet.data.extractors.icecube.i3retroextractor": [[28, 1, 1, "", "I3RetroExtractor"]], "graphnet.data.extractors.icecube.i3splinempeextractor": [[29, 1, 1, "", "I3SplineMPEICExtractor"]], "graphnet.data.extractors.icecube.i3truthextractor": [[30, 1, 1, "", "I3TruthExtractor"]], "graphnet.data.extractors.icecube.i3tumextractor": [[31, 1, 1, "", "I3TUMExtractor"]], "graphnet.data.extractors.icecube.utilities": [[33, 0, 0, "-", "collections"], [34, 0, 0, "-", "frames"], [35, 0, 0, "-", "i3_filters"], [36, 0, 0, "-", "types"]], "graphnet.data.extractors.icecube.utilities.collections": [[33, 4, 1, "", "flatten_nested_dictionary"], [33, 4, 1, "", "serialise"], [33, 4, 1, "", "transpose_list_of_dicts"]], "graphnet.data.extractors.icecube.utilities.frames": [[34, 4, 1, "", "frame_is_montecarlo"], [34, 4, 1, "", "frame_is_noise"], [34, 4, 1, "", "get_om_keys_and_pulseseries"]], "graphnet.data.extractors.icecube.utilities.i3_filters": [[35, 1, 1, "", "I3Filter"], [35, 1, 1, "", "I3FilterMask"], [35, 1, 1, "", "NullSplitI3Filter"]], "graphnet.data.extractors.icecube.utilities.types": [[36, 4, 1, "", "break_cyclic_recursion"], [36, 4, 1, "", "cast_object_to_pure_python"], [36, 4, 1, "", "cast_pulse_series_to_pure_python"], [36, 4, 1, "", "get_member_variables"], [36, 4, 1, "", "is_boost_class"], [36, 4, 1, "", "is_boost_enum"], [36, 4, 1, "", "is_icecube_class"], [36, 4, 1, "", "is_method"], [36, 4, 1, "", "is_type"]], "graphnet.data.extractors.internal": [[38, 0, 0, "-", "parquet_extractor"]], "graphnet.data.extractors.internal.parquet_extractor": [[38, 1, 1, "", "ParquetExtractor"]], "graphnet.data.extractors.km3net": [[40, 0, 0, "-", "km3netrootextractor"], [44, 0, 0, "-", "utilities"]], "graphnet.data.extractors.km3net.km3netrootextractor": [[40, 1, 1, "", "KM3NeTROOTExtractor"]], "graphnet.data.extractors.km3net.utilities": [[46, 0, 0, "-", "utils_osc"]], "graphnet.data.extractors.liquido": [[49, 0, 0, "-", "h5_extractor"]], "graphnet.data.extractors.liquido.h5_extractor": [[49, 1, 1, "", "H5Extractor"], [49, 1, 1, "", "H5HitExtractor"], [49, 1, 1, "", "H5TruthExtractor"]], "graphnet.data.extractors.prometheus": [[51, 0, 0, "-", "prometheus_extractor"]], "graphnet.data.extractors.prometheus.prometheus_extractor": [[51, 1, 1, "", "PrometheusExtractor"], [51, 1, 1, "", "PrometheusFeatureExtractor"], [51, 1, 1, "", "PrometheusTruthExtractor"]], "graphnet.data.readers": [[57, 0, 0, "-", "graphnet_file_reader"], [58, 0, 0, "-", "i3reader"], [59, 0, 0, "-", "internal_parquet_reader"], [61, 0, 0, "-", "liquido_reader"], [62, 0, 0, "-", "prometheus_reader"]], "graphnet.data.readers.graphnet_file_reader": [[57, 1, 1, "", "GraphNeTFileReader"]], "graphnet.data.readers.graphnet_file_reader.GraphNeTFileReader": [[57, 5, 1, "", "accepted_extractors"], [57, 5, 1, "", "accepted_file_extensions"], [57, 5, 1, "", "extracor_names"], [57, 3, 1, "", "find_files"], [57, 3, 1, "", "set_extractors"], [57, 3, 1, "", "validate_files"]], "graphnet.data.readers.i3reader": [[58, 1, 1, "", "I3Reader"]], "graphnet.data.readers.i3reader.I3Reader": [[58, 3, 1, "", "find_files"]], "graphnet.data.readers.internal_parquet_reader": [[59, 1, 1, "", "ParquetReader"]], "graphnet.data.readers.internal_parquet_reader.ParquetReader": [[59, 3, 1, "", "find_files"]], "graphnet.data.readers.liquido_reader": [[61, 1, 1, "", "LiquidOReader"]], "graphnet.data.readers.liquido_reader.LiquidOReader": [[61, 3, 1, "", "find_files"]], "graphnet.data.readers.prometheus_reader": [[62, 1, 1, "", "PrometheusReader"]], "graphnet.data.readers.prometheus_reader.PrometheusReader": [[62, 3, 1, "", "find_files"]], "graphnet.data.utilities": [[67, 0, 0, "-", "random"], [68, 0, 0, "-", "sqlite_utilities"], [69, 0, 0, "-", "string_selection_resolver"]], "graphnet.data.utilities.random": [[67, 4, 1, "", "pairwise_shuffle"]], "graphnet.data.utilities.sqlite_utilities": [[68, 4, 1, "", "attach_index"], [68, 4, 1, "", "create_table"], [68, 4, 1, "", "create_table_and_save_to_sql"], [68, 4, 1, "", "database_exists"], [68, 4, 1, "", "database_table_exists"], [68, 4, 1, "", "get_primary_keys"], [68, 4, 1, "", "query_database"], [68, 4, 1, "", "run_sql_code"], [68, 4, 1, "", "save_to_sql"]], "graphnet.data.utilities.string_selection_resolver": [[69, 1, 1, "", "StringSelectionResolver"]], "graphnet.data.utilities.string_selection_resolver.StringSelectionResolver": [[69, 3, 1, "", "resolve"]], "graphnet.data.writers": [[71, 0, 0, "-", "graphnet_writer"], [72, 0, 0, "-", "parquet_writer"], [73, 0, 0, "-", "sqlite_writer"]], "graphnet.data.writers.graphnet_writer": [[71, 1, 1, "", "GraphNeTWriter"]], "graphnet.data.writers.graphnet_writer.GraphNeTWriter": [[71, 5, 1, "", "expects_merged_dataframes"], [71, 5, 1, "", "file_extension"], [71, 3, 1, "", "merge_files"]], "graphnet.data.writers.parquet_writer": [[72, 1, 1, "", "ParquetWriter"]], "graphnet.data.writers.parquet_writer.ParquetWriter": [[72, 3, 1, "", "merge_files"]], "graphnet.data.writers.sqlite_writer": [[73, 1, 1, "", "SQLiteWriter"]], "graphnet.data.writers.sqlite_writer.SQLiteWriter": [[73, 3, 1, "", "merge_files"]], "graphnet.deployment": [[78, 0, 0, "-", "deployer"], [79, 0, 0, "-", "deployment_module"]], "graphnet.deployment.deployer": [[78, 1, 1, "", "Deployer"]], "graphnet.deployment.deployer.Deployer": [[78, 3, 1, "", "run"]], "graphnet.deployment.deployment_module": [[79, 1, 1, "", "DeploymentModule"]], "graphnet.deployment.icecube": [[83, 0, 0, "-", "cleaning_module"], [85, 0, 0, "-", "inference_module"]], "graphnet.deployment.icecube.cleaning_module": [[83, 1, 1, "", "I3PulseCleanerModule"]], "graphnet.deployment.icecube.inference_module": [[85, 1, 1, "", "I3InferenceModule"]], "graphnet.exceptions": [[87, 0, 0, "-", "exceptions"]], "graphnet.exceptions.exceptions": [[87, 6, 1, "", "ColumnMissingException"]], "graphnet.models": [[89, 0, 0, "-", "coarsening"], [90, 0, 0, "-", "components"], [94, 0, 0, "-", "detector"], [100, 0, 0, "-", "easy_model"], [101, 0, 0, "-", "gnn"], [110, 0, 0, "-", "graphs"], [119, 0, 0, "-", "model"], [120, 0, 0, "-", "rnn"], [122, 0, 0, "-", "standard_averaged_model"], [123, 0, 0, "-", "standard_model"], [124, 0, 0, "-", "task"], [128, 0, 0, "-", "transformer"], [130, 0, 0, "-", "utils"]], "graphnet.models.coarsening": [[89, 1, 1, "", "AttributeCoarsening"], [89, 1, 1, "", "Coarsening"], [89, 1, 1, "", "CustomDOMCoarsening"], [89, 1, 1, "", "DOMAndTimeWindowCoarsening"], [89, 1, 1, "", "DOMCoarsening"], [89, 4, 1, "", "unbatch_edge_index"]], "graphnet.models.coarsening.Coarsening": [[89, 3, 1, "", "forward"], [89, 2, 1, "", "reduce_options"]], "graphnet.models.components": [[91, 0, 0, "-", "embedding"], [92, 0, 0, "-", "layers"], [93, 0, 0, "-", "pool"]], "graphnet.models.components.embedding": [[91, 1, 1, "", "FourierEncoder"], [91, 1, 1, "", "SinusoidalPosEmb"], [91, 1, 1, "", "SpacetimeEncoder"]], "graphnet.models.components.embedding.FourierEncoder": [[91, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SinusoidalPosEmb": [[91, 3, 1, "", "forward"]], "graphnet.models.components.embedding.SpacetimeEncoder": [[91, 3, 1, "", "forward"]], "graphnet.models.components.layers": [[92, 1, 1, "", "Attention_rel"], [92, 1, 1, "", "Block"], [92, 1, 1, "", "Block_rel"], [92, 1, 1, "", "DropPath"], [92, 1, 1, "", "DynEdgeConv"], [92, 1, 1, "", "DynTrans"], [92, 1, 1, "", "EdgeConvTito"], [92, 1, 1, "", "Mlp"]], "graphnet.models.components.layers.Attention_rel": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers.Block_rel": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers.DropPath": [[92, 3, 1, "", "extra_repr"], [92, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynEdgeConv": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers.DynTrans": [[92, 3, 1, "", "forward"]], "graphnet.models.components.layers.EdgeConvTito": [[92, 3, 1, "", "forward"], [92, 3, 1, "", "message"], [92, 3, 1, "", "reset_parameters"]], "graphnet.models.components.layers.Mlp": [[92, 3, 1, "", "forward"]], "graphnet.models.components.pool": [[93, 4, 1, "", "group_by"], [93, 4, 1, "", "group_pulses_to_dom"], [93, 4, 1, "", "group_pulses_to_pmt"], [93, 4, 1, "", "min_pool"], [93, 4, 1, "", "min_pool_x"], [93, 4, 1, "", "std_pool"], [93, 4, 1, "", "std_pool_x"], [93, 4, 1, "", "sum_pool"], [93, 4, 1, "", "sum_pool_and_distribute"], [93, 4, 1, "", "sum_pool_x"]], "graphnet.models.detector": [[95, 0, 0, "-", "detector"], [96, 0, 0, "-", "icecube"], [97, 0, 0, "-", "liquido"], [98, 0, 0, "-", "orca"], [99, 0, 0, "-", "prometheus"]], "graphnet.models.detector.detector": [[95, 1, 1, "", "Detector"]], "graphnet.models.detector.detector.Detector": [[95, 3, 1, "", "feature_map"], [95, 3, 1, "", "forward"], [95, 5, 1, "", "geometry_table"], [95, 5, 1, "", "sensor_index_name"], [95, 5, 1, "", "sensor_position_names"], [95, 5, 1, "", "string_index_name"]], "graphnet.models.detector.icecube": [[96, 1, 1, "", "IceCube86"], [96, 1, 1, "", "IceCubeDeepCore"], [96, 1, 1, "", "IceCubeKaggle"], [96, 1, 1, "", "IceCubeUpgrade"]], "graphnet.models.detector.icecube.IceCube86": [[96, 3, 1, "", "feature_map"], [96, 2, 1, "", "geometry_table_path"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeDeepCore": [[96, 3, 1, "", "feature_map"]], "graphnet.models.detector.icecube.IceCubeKaggle": [[96, 3, 1, "", "feature_map"], [96, 2, 1, "", "geometry_table_path"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.icecube.IceCubeUpgrade": [[96, 3, 1, "", "feature_map"], [96, 2, 1, "", "geometry_table_path"], [96, 2, 1, "", "sensor_id_column"], [96, 2, 1, "", "string_id_column"], [96, 2, 1, "", "xyz"]], "graphnet.models.detector.liquido": [[97, 1, 1, "", "LiquidO_v1"]], "graphnet.models.detector.liquido.LiquidO_v1": [[97, 3, 1, "", "feature_map"], [97, 2, 1, "", "geometry_table_path"], [97, 2, 1, "", "sensor_id_column"], [97, 2, 1, "", "string_id_column"], [97, 2, 1, "", "xyz"]], "graphnet.models.detector.orca": [[98, 1, 1, "", "ORCA115"], [98, 1, 1, "", "ORCA6"]], "graphnet.models.detector.orca.ORCA115": [[98, 3, 1, "", "feature_map"], [98, 2, 1, "", "sensor_id_column"], [98, 2, 1, "", "string_id_column"], [98, 2, 1, "", "xyz"]], "graphnet.models.detector.orca.ORCA6": [[98, 3, 1, "", "feature_map"], [98, 2, 1, "", "sensor_id_column"], [98, 2, 1, "", "string_id_column"], [98, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus": [[99, 1, 1, "", "ARCA115"], [99, 1, 1, "", "BaikalGVD8"], [99, 1, 1, "", "IceCube86Prometheus"], [99, 1, 1, "", "IceCubeDeepCore8"], [99, 1, 1, "", "IceCubeGen2"], [99, 1, 1, "", "IceCubeUpgrade7"], [99, 1, 1, "", "IceDemo81"], [99, 1, 1, "", "ORCA150"], [99, 1, 1, "", "ORCA150SuperDense"], [99, 1, 1, "", "PONETriangle"], [99, 1, 1, "", "Prometheus"], [99, 1, 1, "", "TRIDENT1211"], [99, 1, 1, "", "WaterDemo81"]], "graphnet.models.detector.prometheus.ARCA115": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.BaikalGVD8": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCube86Prometheus": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeDeepCore8": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeGen2": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceCubeUpgrade7": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.IceDemo81": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.ORCA150SuperDense": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.PONETriangle": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.TRIDENT1211": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.detector.prometheus.WaterDemo81": [[99, 3, 1, "", "feature_map"], [99, 2, 1, "", "geometry_table_path"], [99, 2, 1, "", "sensor_id_column"], [99, 2, 1, "", "string_id_column"], [99, 2, 1, "", "xyz"]], "graphnet.models.easy_model": [[100, 1, 1, "", "EasySyntax"]], "graphnet.models.easy_model.EasySyntax": [[100, 3, 1, "", "compute_loss"], [100, 3, 1, "", "configure_optimizers"], [100, 3, 1, "", "fit"], [100, 3, 1, "", "forward"], [100, 3, 1, "", "inference"], [100, 3, 1, "", "predict"], [100, 3, 1, "", "predict_as_dataframe"], [100, 5, 1, "", "prediction_labels"], [100, 3, 1, "", "shared_step"], [100, 5, 1, "", "target_labels"], [100, 3, 1, "", "train"], [100, 3, 1, "", "training_step"], [100, 3, 1, "", "validate_tasks"], [100, 3, 1, "", "validation_step"]], "graphnet.models.gnn": [[102, 0, 0, "-", "RNN_tito"], [103, 0, 0, "-", "convnet"], [104, 0, 0, "-", "dynedge"], [105, 0, 0, "-", "dynedge_jinst"], [106, 0, 0, "-", "dynedge_kaggle_tito"], [107, 0, 0, "-", "gnn"], [108, 0, 0, "-", "icemix"], [109, 0, 0, "-", "particlenet"]], "graphnet.models.gnn.RNN_tito": [[102, 1, 1, "", "RNN_TITO"]], "graphnet.models.gnn.RNN_tito.RNN_TITO": [[102, 3, 1, "", "forward"]], "graphnet.models.gnn.convnet": [[103, 1, 1, "", "ConvNet"]], "graphnet.models.gnn.convnet.ConvNet": [[103, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge": [[104, 1, 1, "", "DynEdge"]], "graphnet.models.gnn.dynedge.DynEdge": [[104, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_jinst": [[105, 1, 1, "", "DynEdgeJINST"]], "graphnet.models.gnn.dynedge_jinst.DynEdgeJINST": [[105, 3, 1, "", "forward"]], "graphnet.models.gnn.dynedge_kaggle_tito": [[106, 1, 1, "", "DynEdgeTITO"]], "graphnet.models.gnn.dynedge_kaggle_tito.DynEdgeTITO": [[106, 3, 1, "", "forward"]], "graphnet.models.gnn.gnn": [[107, 1, 1, "", "GNN"]], "graphnet.models.gnn.gnn.GNN": [[107, 3, 1, "", "forward"], [107, 5, 1, "", "nb_inputs"], [107, 5, 1, "", "nb_outputs"]], "graphnet.models.gnn.icemix": [[108, 1, 1, "", "DeepIce"]], "graphnet.models.gnn.icemix.DeepIce": [[108, 3, 1, "", "forward"], [108, 3, 1, "", "no_weight_decay"]], "graphnet.models.gnn.particlenet": [[109, 1, 1, "", "ParticleNeT"]], "graphnet.models.gnn.particlenet.ParticleNeT": [[109, 3, 1, "", "forward"]], "graphnet.models.graphs": [[111, 0, 0, "-", "edges"], [114, 0, 0, "-", "graph_definition"], [115, 0, 0, "-", "graphs"], [116, 0, 0, "-", "nodes"], [118, 0, 0, "-", "utils"]], "graphnet.models.graphs.edges": [[112, 0, 0, "-", "edges"], [113, 0, 0, "-", "minkowski"]], "graphnet.models.graphs.edges.edges": [[112, 1, 1, "", "EdgeDefinition"], [112, 1, 1, "", "EuclideanEdges"], [112, 1, 1, "", "KNNEdges"], [112, 1, 1, "", "RadialEdges"]], "graphnet.models.graphs.edges.edges.EdgeDefinition": [[112, 3, 1, "", "forward"]], "graphnet.models.graphs.edges.minkowski": [[113, 1, 1, "", "MinkowskiKNNEdges"], [113, 4, 1, "", "compute_minkowski_distance_mat"]], "graphnet.models.graphs.graph_definition": [[114, 1, 1, "", "GraphDefinition"]], "graphnet.models.graphs.graph_definition.GraphDefinition": [[114, 3, 1, "", "forward"]], "graphnet.models.graphs.graphs": [[115, 1, 1, "", "EdgelessGraph"], [115, 1, 1, "", "KNNGraph"]], "graphnet.models.graphs.nodes": [[117, 0, 0, "-", "nodes"]], "graphnet.models.graphs.nodes.nodes": [[117, 1, 1, "", "IceMixNodes"], [117, 1, 1, "", "NodeAsDOMTimeSeries"], [117, 1, 1, "", "NodeDefinition"], [117, 1, 1, "", "NodesAsPulses"], [117, 1, 1, "", "PercentileClusters"]], "graphnet.models.graphs.nodes.nodes.NodeDefinition": [[117, 3, 1, "", "forward"], [117, 5, 1, "", "nb_outputs"], [117, 3, 1, "", "set_number_of_inputs"], [117, 3, 1, "", "set_output_feature_names"]], "graphnet.models.graphs.utils": [[118, 4, 1, "", "cluster_summarize_with_percentiles"], [118, 4, 1, "", "gather_cluster_sequence"], [118, 4, 1, "", "ice_transparency"], [118, 4, 1, "", "identify_indices"], [118, 4, 1, "", "lex_sort"]], "graphnet.models.model": [[119, 1, 1, "", "Model"]], "graphnet.models.model.Model": [[119, 3, 1, "", "extra_repr"], [119, 3, 1, "", "extra_repr_recursive"], [119, 3, 1, "", "from_config"], [119, 3, 1, "", "load"], [119, 3, 1, "", "load_state_dict"], [119, 3, 1, "", "save"], [119, 3, 1, "", "save_state_dict"], [119, 3, 1, "", "set_verbose_print_recursively"], [119, 2, 1, "", "verbose_print"]], "graphnet.models.rnn": [[121, 0, 0, "-", "node_rnn"]], "graphnet.models.rnn.node_rnn": [[121, 1, 1, "", "Node_RNN"]], "graphnet.models.rnn.node_rnn.Node_RNN": [[121, 3, 1, "", "clean_up_data_object"], [121, 3, 1, "", "forward"]], "graphnet.models.standard_averaged_model": [[122, 1, 1, "", "StandardAveragedModel"]], "graphnet.models.standard_averaged_model.StandardAveragedModel": [[122, 3, 1, "", "load_state_dict"], [122, 3, 1, "", "on_train_end"], [122, 3, 1, "", "optimizer_step"], [122, 3, 1, "", "training_step"], [122, 3, 1, "", "validation_step"]], "graphnet.models.standard_model": [[123, 1, 1, "", "StandardModel"]], "graphnet.models.standard_model.StandardModel": [[123, 3, 1, "", "compute_loss"], [123, 3, 1, "", "forward"], [123, 3, 1, "", "shared_step"], [123, 3, 1, "", "validate_tasks"]], "graphnet.models.task": [[125, 0, 0, "-", "classification"], [126, 0, 0, "-", "reconstruction"], [127, 0, 0, "-", "task"]], "graphnet.models.task.classification": [[125, 1, 1, "", "BinaryClassificationTask"], [125, 1, 1, "", "BinaryClassificationTaskLogits"], [125, 1, 1, "", "MulticlassClassificationTask"]], "graphnet.models.task.classification.BinaryClassificationTask": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.classification.BinaryClassificationTaskLogits": [[125, 2, 1, "", "default_prediction_labels"], [125, 2, 1, "", "default_target_labels"], [125, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction": [[126, 1, 1, "", "AzimuthReconstruction"], [126, 1, 1, "", "AzimuthReconstructionWithKappa"], [126, 1, 1, "", "DirectionReconstructionWithKappa"], [126, 1, 1, "", "EnergyReconstruction"], [126, 1, 1, "", "EnergyReconstructionWithPower"], [126, 1, 1, "", "EnergyReconstructionWithUncertainty"], [126, 1, 1, "", "EnergyTCReconstruction"], [126, 1, 1, "", "InelasticityReconstruction"], [126, 1, 1, "", "PositionReconstruction"], [126, 1, 1, "", "TimeReconstruction"], [126, 1, 1, "", "VertexReconstruction"], [126, 1, 1, "", "ZenithReconstruction"], [126, 1, 1, "", "ZenithReconstructionWithKappa"]], "graphnet.models.task.reconstruction.AzimuthReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.AzimuthReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.DirectionReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithPower": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyReconstructionWithUncertainty": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.EnergyTCReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.InelasticityReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.PositionReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.TimeReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.VertexReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstruction": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.reconstruction.ZenithReconstructionWithKappa": [[126, 2, 1, "", "default_prediction_labels"], [126, 2, 1, "", "default_target_labels"], [126, 2, 1, "", "nb_inputs"]], "graphnet.models.task.task": [[127, 1, 1, "", "IdentityTask"], [127, 1, 1, "", "LearnedTask"], [127, 1, 1, "", "StandardFlowTask"], [127, 1, 1, "", "StandardLearnedTask"], [127, 1, 1, "", "Task"]], "graphnet.models.task.task.IdentityTask": [[127, 5, 1, "", "default_prediction_labels"], [127, 5, 1, "", "default_target_labels"], [127, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.LearnedTask": [[127, 3, 1, "", "compute_loss"], [127, 3, 1, "", "forward"], [127, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardFlowTask": [[127, 3, 1, "", "compute_loss"], [127, 3, 1, "", "forward"], [127, 3, 1, "", "nb_inputs"]], "graphnet.models.task.task.StandardLearnedTask": [[127, 3, 1, "", "compute_loss"], [127, 5, 1, "", "nb_inputs"]], "graphnet.models.task.task.Task": [[127, 5, 1, "", "default_prediction_labels"], [127, 5, 1, "", "default_target_labels"], [127, 3, 1, "", "inference"], [127, 5, 1, "", "nb_inputs"], [127, 3, 1, "", "train_eval"]], "graphnet.models.transformer": [[129, 0, 0, "-", "iseecube"]], "graphnet.models.transformer.iseecube": [[129, 1, 1, "", "ISeeCube"]], "graphnet.models.transformer.iseecube.ISeeCube": [[129, 3, 1, "", "forward"]], "graphnet.models.utils": [[130, 4, 1, "", "array_to_sequence"], [130, 4, 1, "", "calculate_distance_matrix"], [130, 4, 1, "", "calculate_xyzt_homophily"], [130, 4, 1, "", "knn_graph_batch"]], "graphnet.training": [[132, 0, 0, "-", "callbacks"], [133, 0, 0, "-", "labels"], [134, 0, 0, "-", "loss_functions"], [136, 0, 0, "-", "weight_fitting"]], "graphnet.training.callbacks": [[132, 1, 1, "", "GraphnetEarlyStopping"], [132, 1, 1, "", "PiecewiseLinearLR"], [132, 1, 1, "", "ProgressBar"]], "graphnet.training.callbacks.GraphnetEarlyStopping": [[132, 3, 1, "", "on_fit_end"], [132, 3, 1, "", "on_train_epoch_end"], [132, 3, 1, "", "on_validation_end"], [132, 3, 1, "", "setup"]], "graphnet.training.callbacks.PiecewiseLinearLR": [[132, 3, 1, "", "get_lr"]], "graphnet.training.callbacks.ProgressBar": [[132, 3, 1, "", "get_metrics"], [132, 3, 1, "", "init_predict_tqdm"], [132, 3, 1, "", "init_test_tqdm"], [132, 3, 1, "", "init_train_tqdm"], [132, 3, 1, "", "init_validation_tqdm"], [132, 3, 1, "", "on_train_epoch_end"], [132, 3, 1, "", "on_train_epoch_start"]], "graphnet.training.labels": [[133, 1, 1, "", "Direction"], [133, 1, 1, "", "Label"], [133, 1, 1, "", "Track"]], "graphnet.training.labels.Label": [[133, 5, 1, "", "key"]], "graphnet.training.loss_functions": [[134, 1, 1, "", "BinaryCrossEntropyLoss"], [134, 1, 1, "", "CrossEntropyLoss"], [134, 1, 1, "", "EnsembleLoss"], [134, 1, 1, "", "EuclideanDistanceLoss"], [134, 1, 1, "", "LogCMK"], [134, 1, 1, "", "LogCoshLoss"], [134, 1, 1, "", "LossFunction"], [134, 1, 1, "", "MSELoss"], [134, 1, 1, "", "RMSELoss"], [134, 1, 1, "", "RMSEVonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisher2DLoss"], [134, 1, 1, "", "VonMisesFisher3DLoss"], [134, 1, 1, "", "VonMisesFisherLoss"]], "graphnet.training.loss_functions.LogCMK": [[134, 3, 1, "", "backward"], [134, 3, 1, "", "forward"]], "graphnet.training.loss_functions.LossFunction": [[134, 3, 1, "", "forward"]], "graphnet.training.loss_functions.VonMisesFisherLoss": [[134, 3, 1, "", "log_cmk"], [134, 3, 1, "", "log_cmk_approx"], [134, 3, 1, "", "log_cmk_exact"]], "graphnet.training.weight_fitting": [[136, 1, 1, "", "BjoernLow"], [136, 1, 1, "", "Uniform"], [136, 1, 1, "", "WeightFitter"]], "graphnet.training.weight_fitting.WeightFitter": [[136, 3, 1, "", "fit"]], "graphnet.utilities": [[138, 0, 0, "-", "argparse"], [139, 0, 0, "-", "config"], [146, 0, 0, "-", "decorators"], [147, 0, 0, "-", "deprecation_tools"], [148, 0, 0, "-", "filesys"], [149, 0, 0, "-", "imports"], [150, 0, 0, "-", "logging"], [151, 0, 0, "-", "maths"]], "graphnet.utilities.argparse": [[138, 1, 1, "", "ArgumentParser"], [138, 1, 1, "", "Options"]], "graphnet.utilities.argparse.ArgumentParser": [[138, 2, 1, "", "standard_arguments"], [138, 3, 1, "", "with_standard_arguments"]], "graphnet.utilities.argparse.Options": [[138, 3, 1, "", "contains"], [138, 3, 1, "", "pop_default"]], "graphnet.utilities.config": [[140, 0, 0, "-", "base_config"], [141, 0, 0, "-", "configurable"], [142, 0, 0, "-", "dataset_config"], [143, 0, 0, "-", "model_config"], [144, 0, 0, "-", "parsing"], [145, 0, 0, "-", "training_config"]], "graphnet.utilities.config.base_config": [[140, 1, 1, "", "BaseConfig"], [140, 4, 1, "", "get_all_argument_values"]], "graphnet.utilities.config.base_config.BaseConfig": [[140, 3, 1, "", "as_dict"], [140, 3, 1, "", "dump"], [140, 3, 1, "", "load"], [140, 2, 1, "", "model_computed_fields"], [140, 2, 1, "", "model_config"], [140, 2, 1, "", "model_fields"]], "graphnet.utilities.config.configurable": [[141, 1, 1, "", "Configurable"]], "graphnet.utilities.config.configurable.Configurable": [[141, 5, 1, "", "config"], [141, 3, 1, "", "from_config"], [141, 3, 1, "", "save_config"]], "graphnet.utilities.config.dataset_config": [[142, 1, 1, "", "DatasetConfig"], [142, 1, 1, "", "DatasetConfigSaverABCMeta"], [142, 1, 1, "", "DatasetConfigSaverMeta"], [142, 4, 1, "", "save_dataset_config"]], "graphnet.utilities.config.dataset_config.DatasetConfig": [[142, 3, 1, "", "as_dict"], [142, 2, 1, "", "features"], [142, 2, 1, "", "graph_definition"], [142, 2, 1, "", "index_column"], [142, 2, 1, "", "labels"], [142, 2, 1, "", "loss_weight_column"], [142, 2, 1, "", "loss_weight_default_value"], [142, 2, 1, "", "loss_weight_table"], [142, 2, 1, "", "model_computed_fields"], [142, 2, 1, "", "model_config"], [142, 2, 1, "", "model_fields"], [142, 2, 1, "", "node_truth"], [142, 2, 1, "", "node_truth_table"], [142, 2, 1, "", "path"], [142, 2, 1, "", "pulsemaps"], [142, 2, 1, "", "seed"], [142, 2, 1, "", "selection"], [142, 2, 1, "", "string_selection"], [142, 2, 1, "", "truth"], [142, 2, 1, "", "truth_table"]], "graphnet.utilities.config.model_config": [[143, 1, 1, "", "ModelConfig"], [143, 1, 1, "", "ModelConfigSaverABC"], [143, 1, 1, "", "ModelConfigSaverMeta"], [143, 4, 1, "", "save_model_config"]], "graphnet.utilities.config.model_config.ModelConfig": [[143, 2, 1, "", "arguments"], [143, 3, 1, "", "as_dict"], [143, 2, 1, "", "class_name"], [143, 2, 1, "", "model_computed_fields"], [143, 2, 1, "", "model_config"], [143, 2, 1, "", "model_fields"]], "graphnet.utilities.config.parsing": [[144, 4, 1, "", "get_all_grapnet_classes"], [144, 4, 1, "", "get_graphnet_classes"], [144, 4, 1, "", "is_graphnet_class"], [144, 4, 1, "", "is_graphnet_module"], [144, 4, 1, "", "list_all_submodules"], [144, 4, 1, "", "traverse_and_apply"]], "graphnet.utilities.config.training_config": [[145, 1, 1, "", "TrainingConfig"]], "graphnet.utilities.config.training_config.TrainingConfig": [[145, 2, 1, "", "dataloader"], [145, 2, 1, "", "early_stopping_patience"], [145, 2, 1, "", "fit"], [145, 2, 1, "", "model_computed_fields"], [145, 2, 1, "", "model_config"], [145, 2, 1, "", "model_fields"], [145, 2, 1, "", "target"]], "graphnet.utilities.deprecation_tools": [[147, 4, 1, "", "rename_state_dict_entries"]], "graphnet.utilities.filesys": [[148, 4, 1, "", "find_i3_files"], [148, 4, 1, "", "has_extension"], [148, 4, 1, "", "is_gcd_file"], [148, 4, 1, "", "is_i3_file"]], "graphnet.utilities.imports": [[149, 4, 1, "", "has_icecube_package"], [149, 4, 1, "", "has_torch_package"], [149, 4, 1, "", "requires_icecube"]], "graphnet.utilities.logging": [[150, 1, 1, "", "Logger"], [150, 1, 1, "", "RepeatFilter"]], "graphnet.utilities.logging.Logger": [[150, 3, 1, "", "critical"], [150, 3, 1, "", "debug"], [150, 3, 1, "", "error"], [150, 5, 1, "", "file_handlers"], [150, 5, 1, "", "handlers"], [150, 3, 1, "", "info"], [150, 3, 1, "", "setLevel"], [150, 5, 1, "", "stream_handlers"], [150, 3, 1, "", "warning"], [150, 3, 1, "", "warning_once"]], "graphnet.utilities.logging.RepeatFilter": [[150, 3, 1, "", "filter"], [150, 2, 1, "", "nb_repeats_allowed"]], "graphnet.utilities.maths": [[151, 4, 1, "", "eps_like"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 7, 33, 57, 61, 62, 71, 73, 78, 91, 95, 100, 103, 104, 109, 114, 127, 130, 132, 136, 138, 142, 143, 150, 151, 154, 155, 156, 157, 159, 160, 161], "0": [58, 69, 83, 89, 92, 93, 102, 103, 104, 106, 109, 112, 113, 115, 118, 121, 130, 133, 134, 142, 155, 156, 158, 159, 161], "000": 155, "001": [156, 161], "01": [156, 161], "0221": 156, "02_data": 156, "03042": 105, "03762": 91, "04616": 134, "04_ensemble_dataset": 156, "05": 134, "06": 153, "06166": 112, "08570": 109, "0e04": 159, "0e4": 159, "1": [0, 7, 18, 33, 69, 72, 78, 89, 92, 93, 102, 104, 106, 108, 109, 112, 113, 115, 118, 121, 125, 126, 127, 130, 132, 133, 134, 136, 142, 154, 155, 156, 157, 158, 160, 161], "10": [96, 97, 99, 117, 118, 138, 155, 156, 159, 161], "100": 155, "1000": [155, 156], "10000": [69, 91], "1088": 156, "11": [156, 158], "115": 98, "12": [69, 108, 129, 142, 155, 156], "120": 156, "128": [91, 103, 104, 106, 109, 138, 155, 156, 161], "13": 69, "14": [69, 142, 155, 156], "1536": 129, "15674": 91, "16": [69, 91, 102, 109, 129, 142, 155, 156, 161], "17": 156, "1706": 91, "1748": 156, "1809": 112, "1812": 134, "1902": 109, "192": 108, "196": 129, "1e6": 127, "2": [33, 92, 93, 102, 104, 106, 109, 112, 115, 118, 121, 126, 130, 134, 142, 155, 156, 158, 161], "20": [69, 150, 156, 158, 159, 161], "200": [155, 159], "200000": 72, "2018": 153, "2019": 134, "2020": [0, 157, 160], "21": [153, 155, 156], "2209": 105, "2310": 91, "256": [104, 106, 109, 129], "26": 155, "2d": 134, "2nd": [91, 108], "3": [93, 102, 103, 106, 113, 118, 121, 126, 129, 130, 134, 153, 156, 158, 159], "30": 159, "300": [155, 159], "32": [91, 108, 129], "336": [104, 106], "384": [91, 108, 129], "39": [0, 157, 160], "3d": [126, 134], "4": [92, 105, 108, 126, 156, 159, 161], "40": 159, "400": 73, "5": [69, 102, 121, 134, 138, 154, 155, 156, 158, 159, 161], "50": [117, 118, 138, 159], "500": [118, 159], "50000": [69, 142, 155, 156], "5001": 155, "59": 158, "6": [91, 93, 98, 108, 129], "64": [102, 109], "7": [83, 93], "700": 134, "768": 117, "8": [92, 93, 102, 104, 106, 115, 121, 134, 153, 155, 156, 158, 161], "80": [156, 161], "86": [21, 96], "890778": [0, 157, 160], "90": [117, 118], "A": [7, 35, 57, 58, 59, 61, 62, 68, 73, 78, 79, 83, 93, 100, 114, 115, 118, 119, 123, 125, 127, 130, 134, 136, 140, 142, 143, 145, 154, 155, 156, 159, 161], "AND": 134, "AS": 134, "As": [104, 109, 161], "BE": 134, "BUT": 134, "But": 161, "By": [0, 58, 127, 155, 156, 157, 160, 161], "FOR": 134, "For": [36, 117, 132, 155, 156, 161], "IN": 134, "If": [20, 22, 35, 73, 91, 92, 104, 108, 109, 114, 117, 118, 119, 127, 132, 134, 136, 153, 154, 156, 161], "In": [57, 58, 71, 142, 143, 154, 156, 158], "It": [1, 33, 68, 83, 91, 118, 125, 127, 153, 155, 156, 161], "NO": 134, "NOT": [68, 134, 156], "No": [0, 156, 157, 160], "OF": 134, "OR": 134, "One": 156, "Or": 155, "Such": 68, "THE": 134, "TO": 134, "That": [104, 109, 126, 133, 156, 161], "The": [0, 7, 17, 33, 36, 68, 71, 72, 73, 78, 79, 83, 85, 89, 91, 92, 93, 102, 104, 106, 108, 109, 112, 114, 118, 121, 125, 126, 127, 129, 130, 132, 133, 134, 147, 154, 155, 157, 159, 160], "Then": 153, "There": [156, 161], "These": [0, 57, 71, 73, 114, 153, 155, 156, 157, 159, 160, 161], "To": [155, 156, 158, 159, 161], "WITH": 134, "Will": [78, 83, 85, 112, 154], "With": [156, 159, 161], "_": 156, "__": [33, 36, 156], "_____________________": 134, "__call__": [18, 20, 57, 79, 154, 155, 156, 159], "__fields__": [140, 142, 143, 145], "__init__": [142, 143, 154, 155, 156, 161], "_accepted_extractor": [154, 159], "_accepted_file_extens": [154, 159], "_and_": [104, 109], "_column_nam": 154, "_construct_edg": 112, "_definition_": 156, "_extractor": [154, 159], "_extractor_nam": [154, 159], "_file_extens": 154, "_fit_weight": 136, "_forward": 161, "_layer": 161, "_lrschedul": 132, "_merge_datafram": 154, "_pred": 127, "_save_fil": 154, "_sensor_tim": 159, "_sensor_xyz": 159, "_tabl": 154, "_task": [100, 123], "_verify_column": 154, "_x_": 156, "a__b": 33, "ab": [69, 109, 134, 142, 155, 156], "abc": [7, 18, 57, 71, 78, 119, 133, 136, 141, 142, 143], "abcmeta": [142, 143], "abil": 155, "abl": [33, 117, 154, 156, 158, 159, 161], "about": [119, 140, 142, 143, 145, 155, 156, 159], "abov": [134, 136, 155, 156, 159, 161], "absopt": 117, "absorpt": 118, "abstract": [1, 71, 95, 107, 114, 127, 141, 156], "abstractmethod": 155, "acceler": 1, "accept": [57, 153, 161], "accepted_extractor": [57, 154], "accepted_file_extens": [57, 154], "access": [133, 155], "accompani": [58, 156], "accord": [89, 93, 112, 114, 115, 118, 134], "achiev": 158, "achitectur": 161, "across": [1, 2, 36, 65, 78, 93, 100, 123, 134, 137, 138, 139, 150, 159], "act": [127, 134, 156, 161], "action": 134, "activ": [92, 100, 102, 104, 109, 117, 121, 127, 153], "activation_lay": [104, 109], "actual": [156, 161], "ad": [7, 21, 91, 104, 108, 114, 117, 118], "adam": [156, 161], "adapt": [156, 161], "add": [92, 104, 109, 138, 147, 153, 156, 159], "add_batchnorm_lay": 109, "add_count": [117, 118], "add_global_variables_after_pool": [104, 156, 161], "add_ice_properti": 117, "add_inactive_sensor": 114, "add_label": [155, 156], "add_norm_lay": 104, "add_to_databas": 136, "addit": [57, 71, 89, 92, 100, 134, 136, 154, 156, 161], "additional_attribut": [100, 156, 161], "address": 161, "adher": [153, 161], "adjac": 95, "adjust": 161, "advanc": [1, 93], "after": [92, 102, 104, 106, 109, 132, 138, 142, 155, 156, 161], "again": [156, 161], "aggr": 92, "aggreg": [92, 93], "agnost": [0, 157, 160, 161], "agreement": [0, 153, 157, 160], "ai": 156, "aim": [0, 1, 153, 156, 157, 160], "algorithm": 25, "all": [1, 17, 18, 20, 22, 35, 40, 68, 73, 83, 91, 92, 93, 95, 104, 107, 109, 113, 114, 119, 134, 136, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "allow": [0, 38, 77, 88, 93, 132, 140, 145, 155, 156, 157, 160, 161], "along": [118, 156, 161], "alongsid": [156, 161], "alreadi": 68, "also": [7, 69, 102, 142, 154, 155, 156, 159, 161], "alter": 114, "altern": [104, 134, 153], "amount": 102, "an": [0, 18, 36, 58, 69, 114, 115, 121, 122, 134, 148, 150, 153, 154, 156, 157, 158, 159, 160, 161], "anaconda": 158, "analys": [77, 156], "analysi": 78, "angl": [126, 133, 156, 161], "ani": [6, 7, 33, 34, 35, 36, 57, 59, 61, 62, 71, 73, 83, 89, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 136, 138, 140, 141, 142, 143, 144, 145, 150, 155, 156, 161], "annot": [142, 143, 145], "anoth": [142, 143, 155, 156], "anyth": 153, "api": [1, 154, 156], "appear": [78, 155, 156], "append": 114, "appli": [7, 57, 78, 92, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 118, 121, 123, 125, 127, 129, 134, 144, 154, 155, 156], "applic": [33, 155, 156, 161], "appropri": [68, 127, 156], "approx": 134, "approxim": 73, "ar": [0, 1, 20, 22, 35, 36, 57, 69, 71, 72, 73, 78, 83, 92, 93, 102, 104, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 125, 134, 136, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "arbitrari": [0, 157, 160], "arca": 99, "arca115": [94, 99], "architectur": [1, 103, 104, 105, 106, 108, 109, 121, 129, 156, 161], "area": 1, "arg": [17, 35, 89, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 129, 134, 138, 140, 150, 154, 159], "argpars": 137, "argument": [72, 108, 132, 136, 138, 140, 142, 143, 145, 155, 156, 159, 161], "argumentpars": [137, 138], "aris": 134, "arrai": [18, 30, 33, 117, 118, 130, 154, 155, 156, 159], "array_to_sequ": [88, 130], "arriv": 155, "art": [0, 157, 160], "articl": 156, "artifact": [156, 161], "arxiv": [91, 109, 112, 134], "as_dict": [140, 142, 143, 156, 161], "assert": [154, 155], "assertionerror": 154, "assign": [7, 89, 93, 115, 153, 154], "associ": [83, 85, 114, 118, 126, 127, 134, 154, 155, 156, 159, 161], "assort": 151, "assum": [83, 91, 95, 114, 118, 127, 130], "atmospher": 155, "attach": 68, "attach_index": [65, 68], "attempt": [20, 156], "attent": [91, 92, 108, 129], "attention_rel": [90, 92], "attn_drop": 92, "attn_head_dim": 92, "attn_mask": 92, "attribut": [89, 127, 155, 156, 161], "attributecoarsen": [88, 89], "author": [103, 105, 134], "auto": 127, "autom": 153, "automat": [22, 72, 91, 114, 134, 153, 154, 156, 159], "automatic_log_bin": 136, "auxiliari": [91, 156, 161], "avail": [7, 22, 125, 126, 127, 149, 154, 155, 156, 158, 159, 161], "available_t": 154, "averag": [93, 122, 134], "avg": 89, "avg_pool": 89, "avg_pool_x": 89, "avoid": [150, 153], "awai": [1, 156], "azimiuth": 133, "azimuth": [126, 133], "azimuth_kappa": 126, "azimuth_kei": 133, "azimuth_pr": 126, "azimuthreconstruct": [124, 126], "azimuthreconstructionwithkappa": [124, 126], "b": [33, 89, 93, 130, 156, 159, 161], "backbon": 156, "backend": [70, 72, 159], "backward": [118, 134], "baikalgvd8": [94, 99], "bar": 132, "base": [0, 6, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 40, 49, 51, 57, 58, 59, 61, 62, 69, 71, 72, 73, 78, 79, 83, 85, 87, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 136, 138, 140, 141, 142, 143, 145, 149, 150, 154, 155, 156, 157, 160, 161], "base_config": 139, "baseclass": 78, "baseconfig": [139, 140, 141, 142, 143, 145], "basemodel": [140, 142, 143], "basi": 161, "basic": [1, 156], "batch": [0, 72, 89, 92, 93, 100, 109, 121, 123, 130, 138, 155, 157, 160], "batch_idx": [100, 122, 123, 130], "batch_siz": [130, 155, 156, 161], "becaus": [67, 156, 161], "been": [83, 134, 153, 161], "befor": [104, 113, 121, 127, 132], "behavior": 154, "behaviour": 132, "behind": [156, 161], "being": [20, 83, 91, 125, 127, 155, 156, 161], "beitv2": 92, "belong": 130, "below": [69, 117, 136, 153, 154, 156, 157, 159, 160, 161], "besid": 155, "bessel": 134, "best": [0, 132, 153, 157, 160], "better": 153, "between": [38, 91, 100, 110, 111, 112, 113, 116, 123, 127, 130, 132, 134, 136, 142, 143, 156, 161], "bia": [92, 129], "bias": [156, 161], "big": [156, 161], "biject": 154, "bin": 136, "binari": [123, 125, 134, 161], "binaryclassificationtask": [124, 125, 156, 161], "binaryclassificationtasklogit": [124, 125], "binarycrossentropyloss": [131, 134], "bjoernlow": [131, 136], "black": 153, "blob": [114, 134, 156], "block": [0, 1, 90, 92, 109, 156, 157, 160], "block_rel": [90, 92], "boilerpl": 161, "bool": [34, 35, 36, 68, 69, 71, 83, 91, 92, 100, 102, 104, 106, 108, 109, 114, 117, 118, 119, 123, 129, 132, 134, 136, 138, 144, 147, 148, 149, 150], "boost": 36, "border": 30, "both": [0, 22, 123, 127, 156, 157, 159, 160, 161], "boundari": 30, "box": [154, 156, 161], "branch": 153, "break_cyclic_recurs": [32, 36], "broken": 58, "bucket": 129, "bug": [153, 156], "build": [0, 1, 88, 95, 112, 113, 117, 118, 119, 140, 142, 143, 156, 157, 160, 161], "built": [0, 88, 114, 155, 156, 157, 159, 160, 161], "c": [20, 33, 93, 113, 134, 156], "c_": 134, "calcul": [83, 91, 100, 112, 115, 117, 123, 130, 133, 134, 155, 156, 161], "calculate_distance_matrix": [88, 130], "calculate_xyzt_homophili": [88, 130], "calibr": [34, 36], "call": [7, 22, 36, 91, 93, 127, 132, 136, 150, 154, 156, 159, 161], "callabl": [36, 92, 93, 95, 96, 97, 98, 99, 114, 122, 127, 136, 140, 142, 143, 144, 149, 159], "callback": [100, 131, 156, 161], "can": [0, 1, 18, 22, 25, 83, 91, 93, 114, 136, 138, 140, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "cannot": [36, 121, 136, 140, 145], "cap": 136, "capabl": [0, 123, 157, 160], "captur": [156, 161], "care": 155, "carlo": 34, "cascad": 126, "case": [22, 58, 83, 93, 118, 127, 154, 155, 156, 158, 161], "cast": [22, 36], "cast_object_to_pure_python": [32, 36], "cast_pulse_series_to_pure_python": [32, 36], "caus": 156, "caveat": [156, 161], "cc": 133, "cd": 158, "center": 112, "centr": 112, "central": [156, 158], "certain": 156, "cframe": 20, "chain": [0, 1, 77, 88, 100, 123, 134, 157, 158, 160], "chang": [134, 153, 156, 161], "charg": [91, 102, 117, 118, 121, 134, 155, 156, 161], "charge_column": 117, "check": [34, 35, 36, 57, 68, 117, 138, 148, 149, 153, 159], "checkpoint": 156, "checkpointing_bas": 156, "chenli2049": 129, "cherenkov": [117, 118, 156, 159, 161], "choic": [155, 156, 161], "choos": [156, 161], "chosen": [112, 118, 150, 155], "chunk": 154, "ckpt": [156, 161], "ckpt_path": 100, "claim": 134, "clash": 150, "class": [6, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 38, 40, 49, 51, 57, 58, 59, 61, 62, 69, 71, 72, 73, 78, 79, 83, 85, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 150, 153, 154, 155], "class_nam": [35, 57, 59, 61, 62, 71, 143, 150, 155, 156, 161], "classif": [1, 123, 124, 127, 134, 156, 161], "classifi": [125, 155, 156, 161], "classmethod": [119, 134, 140, 141, 156, 161], "classvar": [140, 142, 143, 145], "clean": [83, 153, 158], "clean_up_data_object": 121, "cleaning_modul": 82, "clear": [150, 155], "cli": 138, "clone": 158, "closest": 132, "cloud": [156, 161], "cls_tocken": 108, "cluster": [89, 92, 93, 102, 104, 106, 109, 117, 118, 121], "cluster_column": 118, "cluster_index": 93, "cluster_indic": 118, "cluster_on": [117, 118], "cluster_summarize_with_percentil": [110, 118], "cnn": [156, 161], "coarsen": [88, 93], "code": [0, 30, 44, 68, 114, 142, 143, 154, 155, 156, 157, 159, 160, 161], "coincid": 117, "collabor": [1, 156, 161], "collect": [19, 32, 134, 151, 156, 161], "column": [7, 18, 49, 51, 68, 72, 73, 79, 85, 87, 91, 95, 100, 102, 112, 114, 115, 117, 118, 121, 125, 126, 127, 130, 134, 136, 154, 155, 156, 159, 161], "column_nam": [49, 154], "column_offset": 118, "columnmissingexcept": [86, 87], "com": [108, 114, 129, 134, 156, 158], "combin": [17, 33, 102, 123, 134, 142, 161], "combine_extractor": 16, "combinedextractor": [16, 17], "come": [100, 127, 154, 155, 156, 161], "command": 138, "commit": 153, "common": [0, 1, 134, 142, 143, 146, 149, 155, 156, 157, 160], "compar": [156, 161], "comparison": [25, 134], "compat": [57, 69, 100, 123, 127, 154, 155, 156, 161], "competit": [91, 92, 96, 106, 108], "complet": [0, 88, 156, 157, 158, 160, 161], "complex": [0, 88, 156, 157, 160], "compon": [0, 1, 88, 100, 119, 123, 156, 157, 160, 161], "compos": [156, 161], "composit": 150, "comprehens": 156, "compress": 155, "compris": [0, 157, 160], "comput": [79, 92, 100, 113, 123, 127, 130, 134, 140, 142, 143, 145, 155, 156], "compute_loss": [100, 123, 127], "compute_minkowski_distance_mat": [111, 113], "computedfieldinfo": [140, 142, 143, 145], "con": [156, 161], "concaten": [33, 104], "concept": 153, "conceptu": [154, 156], "concret": 156, "condit": 134, "confid": 156, "config": [69, 132, 134, 137, 138, 155, 156, 161], "config_dir": [156, 161], "configdict": [140, 142, 143, 145], "configur": [0, 1, 79, 88, 100, 119, 139, 140, 142, 143, 145, 150, 154, 156, 157, 160, 161], "configure_optim": 100, "conflict": 156, "conform": [140, 142, 143, 145], "conjunct": [18, 127], "conn": 156, "connect": [0, 112, 113, 114, 117, 134, 155, 156, 157, 160], "consequ": 119, "consid": [83, 102, 155, 156, 159], "consist": [91, 138, 150, 153, 156, 161], "consortium": [0, 157, 160], "constant": [1, 3, 152, 155, 156, 161], "constitut": [72, 155], "constraint": [100, 156], "construct": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 38, 49, 51, 57, 59, 61, 62, 69, 71, 72, 73, 79, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 132, 133, 134, 136, 138, 141, 142, 143, 150, 154, 155, 156, 161], "constructor": [154, 155, 156], "consult": 161, "consum": 156, "consumpt": 155, "contain": [0, 6, 7, 16, 17, 20, 33, 34, 37, 38, 48, 51, 57, 58, 59, 68, 71, 72, 73, 78, 79, 83, 85, 87, 100, 104, 109, 110, 111, 113, 114, 115, 116, 118, 119, 123, 127, 130, 134, 136, 138, 154, 155, 156, 157, 159, 160, 161], "containeris": 1, "content": [154, 161], "continu": [0, 134, 156, 157, 160], "contract": 134, "contribut": [0, 134, 156, 157, 160], "contributor": 153, "conveni": [1, 153, 156, 161], "convent": 58, "convers": [7, 37, 38, 51, 117, 155, 156, 159], "convert": [0, 1, 7, 20, 33, 35, 72, 130, 154, 155, 156, 157, 158, 159, 160], "convnet": [101, 156], "convolut": [92, 103, 104, 105, 106, 109], "coo": 155, "coordin": [30, 95, 113, 117, 118, 130, 156], "copi": [134, 155], "copyright": 134, "core": 107, "correct": 134, "correpond": 67, "correspond": [33, 36, 67, 104, 109, 114, 118, 136, 140, 142, 143, 145, 148, 155, 156, 159, 161], "cosh": 134, "could": [153, 156, 161], "counterpart": 155, "cover": 69, "cpu": [7, 79], "creat": [68, 114, 115, 117, 140, 141, 145, 153, 155, 161], "create_t": [65, 68], "create_table_and_save_to_sql": [65, 68], "critic": [150, 156, 159], "cross": 134, "crossentropyloss": [131, 134], "csv": [142, 155, 156, 159, 161], "ctx": 134, "cuda": 158, "curated_datamodul": 3, "curi": [0, 157, 160], "current": [69, 121, 132, 153, 156], "curv": 136, "custom": [57, 86, 114, 132, 161], "custom_label_funct": 114, "customdomcoarsen": [88, 89], "customis": 132, "d": [33, 113, 114, 117, 130, 153, 159], "damag": 134, "data": [0, 1, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 115, 117, 121, 122, 123, 127, 129, 130, 133, 138, 140, 142, 145, 149, 152, 155, 156, 157, 160, 161], "data_path": 114, "databas": [68, 73, 136, 155, 156], "database_exist": [65, 68], "database_nam": 73, "database_path": [68, 136], "database_table_exist": [65, 68], "dataclass": [3, 34], "dataconfig": [142, 155], "dataconvert": [3, 54, 71, 72, 73, 156, 159], "dataformat": [70, 73], "datafram": [68, 69, 71, 95, 100, 136, 154, 156, 159, 161], "dataload": [3, 100, 114, 145, 155, 156, 161], "datamodul": 3, "dataset": [1, 3, 24, 69, 72, 87, 102, 114, 121, 138, 142, 152, 159, 161], "dataset_1": [155, 156], "dataset_2": [155, 156], "dataset_3": [155, 156], "dataset_config": [139, 156, 161], "dataset_config_path": [156, 161], "datasetconfig": [69, 139, 142, 155, 161], "datasetconfigsav": 142, "datasetconfigsaverabcmeta": [139, 142], "datasetconfigsavermeta": [139, 142], "db": [73, 136, 155, 156], "db_count_norm": 136, "ddp": [156, 161], "de": 33, "deactiv": [100, 127], "deal": 134, "debug": [150, 156], "decai": 108, "decor": [137, 149], "dedic": 153, "deem": 36, "deep": [0, 71, 73, 92, 106, 108, 154, 156, 157, 158, 159, 160, 161], "deepcopi": 147, "deepcor": [21, 96], "deepic": [101, 108], "def": [154, 155, 156, 159, 161], "default": [7, 20, 22, 30, 33, 51, 58, 68, 72, 73, 78, 79, 83, 85, 91, 92, 93, 102, 103, 104, 105, 106, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 127, 129, 130, 132, 133, 134, 136, 138, 140, 142, 148, 155, 156], "default_prediction_label": [125, 126, 127, 161], "default_target_label": [125, 126, 127, 161], "default_typ": 68, "defin": [69, 79, 83, 85, 93, 110, 111, 112, 114, 116, 118, 140, 142, 143, 145, 155, 156, 159, 161], "definit": [112, 114, 115, 117, 119, 127, 153, 156, 161], "deleg": 150, "deliv": 100, "demo_ic": 99, "demo_wat": 99, "denot": [18, 132, 133, 154, 159], "dens": 93, "depend": [0, 91, 154, 155, 156, 157, 160, 161], "deploi": [0, 1, 77, 79, 156, 157, 158, 160], "deploy": [0, 1, 114, 152, 156, 157, 159, 160, 161], "deployment_modul": 77, "deploymentmodul": [77, 78, 79, 85], "deprec": 147, "deprecated_method": [52, 63, 80], "deprecation_tool": 137, "depth": [92, 108, 118, 129], "depth_rel": 108, "describ": [153, 156], "descript": [119, 138], "design": [1, 156, 159], "desir": [136, 148], "detail": [1, 102, 119, 132, 155, 156, 158, 159, 161], "detector": [0, 1, 30, 88, 114, 115, 117, 155, 156, 157, 160, 161], "detector_respons": 156, "determin": [78, 102], "develop": [0, 1, 153, 155, 156, 157, 158, 159, 160, 161], "deviat": [114, 115, 118], "devic": 79, "df": [68, 154], "dfg": [0, 157, 160], "dict": [22, 33, 36, 68, 79, 95, 96, 97, 98, 99, 100, 108, 114, 115, 117, 119, 122, 132, 138, 140, 142, 143, 144, 145, 147, 154, 155, 156, 159], "dictionari": [18, 33, 34, 36, 57, 68, 114, 115, 119, 140, 142, 143, 145, 154, 159], "differ": [0, 18, 20, 38, 40, 48, 49, 51, 57, 58, 59, 115, 153, 154, 155, 156, 157, 159, 160, 161], "difficult": 155, "diffier": [156, 161], "digit": 91, "dim": [91, 92], "dimenion": [104, 106, 109], "dimens": [91, 92, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 118, 121, 127, 129, 130, 134, 159, 161], "dimension": [91, 92, 155, 161], "dir": 148, "dir_with_fil": [154, 159], "dir_x_pr": 126, "dir_y_pr": 126, "dir_z_pr": 126, "direct": [106, 108, 118, 125, 126, 127, 131, 133, 155, 159], "direction_kappa": 126, "directionreconstructionwithkappa": [124, 126, 156, 161], "directli": [0, 104, 109, 154, 156, 157, 159, 160, 161], "directori": [7, 57, 58, 59, 61, 62, 71, 72, 132, 148, 154, 156, 161], "dirti": 156, "discard_empty_ev": 83, "disconnect": 155, "discuss": 153, "disk": [154, 155, 156], "distanc": [112, 113, 115, 130], "distribut": [93, 104, 126, 127, 134, 136, 158, 161], "distribution_strategi": 100, "ditto": 134, "diverg": 134, "divid": 78, "dl": [156, 161], "dnn": [24, 31], "do": [0, 79, 83, 134, 142, 143, 153, 155, 156, 157, 160, 161], "doc": 156, "docformatt": 153, "docker": 1, "docstr": 153, "document": [134, 159, 161], "doe": [36, 125, 127, 143, 154, 155, 156, 161], "doesn": 68, "dom": [89, 93, 102, 117, 118, 121, 156, 161], "dom_i": [96, 117], "dom_tim": 117, "dom_x": [96, 117], "dom_z": [96, 117], "domain": [0, 1, 77, 156, 157, 160], "domandtimewindowcoarsen": [88, 89], "domcoarsen": [88, 89], "don": [132, 154], "done": [22, 93, 150, 153, 154, 156, 159], "dot": 92, "download": 158, "downsid": 155, "drawn": [110, 111, 115, 116, 156, 161], "drhb": 108, "drop": [92, 103], "drop_path": 92, "drop_prob": 92, "dropout": [92, 102, 109, 121], "dropout_prob": 92, "dropout_ratio": 103, "dropout_readout": 109, "droppath": [90, 92], "dtype": [114, 115, 151, 155, 156, 161], "due": [155, 156, 161], "dummy_pid": [155, 156], "dump": [140, 142, 143, 154, 155, 156], "duplciat": 132, "duplic": 117, "dure": [92, 108, 114, 127, 132, 159], "dynam": [22, 92, 104, 105, 106, 109, 156, 161], "dynedg": [83, 85, 101, 105, 106, 108, 109, 156, 161], "dynedge_arg": 108, "dynedge_jinst": 101, "dynedge_kaggle_tito": 101, "dynedge_layer_s": [104, 109, 156, 161], "dynedgeconv": [90, 92, 104, 109], "dynedgejinst": [101, 105], "dynedgetito": [101, 102, 106], "dyntran": [90, 92, 102, 106], "dyntrans1": 92, "dyntrans_layer_s": [102, 106], "e": [1, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 36, 38, 51, 68, 69, 73, 79, 83, 85, 89, 91, 92, 93, 95, 96, 97, 98, 99, 103, 107, 112, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 130, 132, 133, 134, 136, 140, 150, 153, 154, 155, 156, 158, 161], "each": [22, 33, 36, 67, 68, 72, 73, 78, 79, 89, 91, 92, 93, 96, 97, 98, 99, 102, 104, 106, 109, 112, 114, 115, 117, 118, 121, 125, 127, 130, 132, 134, 148, 154, 155, 156, 159, 161], "earli": [132, 138], "early_stopping_pati": [100, 145], "earlystop": 132, "easi": [0, 154, 155, 156, 157, 160, 161], "easili": [1, 156, 161], "easy_model": 88, "easysyntax": [88, 100, 123], "ed": 134, "edg": [92, 93, 104, 105, 106, 109, 110, 114, 115, 116, 117, 130, 155, 156, 161], "edge_attr": [155, 156], "edge_definit": 114, "edge_index": [89, 92, 130, 155, 156], "edgeconv": 92, "edgeconvtito": [90, 92], "edgedefinit": [110, 111, 112, 113, 114, 115, 116, 156, 161], "edgelessgraph": [110, 115], "effect": [132, 153, 156, 161], "effort": [153, 155, 159], "either": [0, 20, 134, 154, 156, 157, 160], "element": [18, 33, 36, 100, 123, 130, 144, 154, 156, 159], "elementwis": 134, "elimin": 83, "els": [83, 133, 154, 159], "ema": 122, "embed": [90, 102, 108, 121, 125, 127, 129], "embedding_dim": [102, 121], "empti": 83, "en": 156, "enabl": [0, 100, 157, 160], "encod": [91, 133], "encount": 156, "encourag": [153, 156], "end": [0, 1, 132, 156, 157, 160], "energi": [126, 127, 136, 155, 156, 159], "energy_cascad": 126, "energy_cascade_pr": 126, "energy_pr": 126, "energy_reco": 85, "energy_sigma": 126, "energy_track": 126, "energy_track_pr": 126, "energyreconstruct": [124, 126, 156, 161], "energyreconstructionwithpow": [124, 126], "energyreconstructionwithuncertainti": [124, 126, 156], "energytcreconstruct": [124, 126], "engin": [0, 157, 160], "enough": 119, "ensemble_dataset": [155, 156], "ensembledataset": [142, 155, 156], "ensembleloss": [131, 134], "ensur": [36, 67, 134, 150, 153, 161], "entir": [119, 154, 156, 161], "entiti": [156, 161], "entri": [83, 85, 104, 109, 130, 138, 159], "entropi": 134, "enum": 36, "env": 158, "environ": [58, 158], "ep": [151, 156, 161], "epoch": [122, 132, 138], "eps_lik": [137, 151], "equival": [36, 156, 161], "error": [134, 150, 153, 154, 156], "especi": 83, "establish": 161, "etc": [0, 134, 150, 155, 156, 157, 159, 160], "euclidean": [112, 153], "euclideandistanceloss": [131, 134], "euclideanedg": [111, 112], "european": [0, 157, 160], "eval": [119, 158], "evalu": 127, "even": 67, "event": [0, 1, 7, 17, 27, 51, 68, 69, 72, 73, 83, 91, 93, 102, 114, 117, 118, 123, 127, 129, 130, 133, 134, 136, 142, 154, 156, 157, 159, 160, 161], "event_no": [7, 68, 69, 72, 73, 136, 142, 155, 156, 161], "events_per_batch": 72, "everi": [109, 154, 156, 159], "everyth": [156, 161], "everytim": 153, "exact": [105, 134, 161], "exactli": [134, 150, 155], "exampl": [7, 33, 69, 89, 93, 118, 130, 134, 142, 143, 154, 155, 158], "example_energy_reconstruction_model": [138, 156, 161], "exce": 136, "exceed": 73, "except": [1, 152, 154], "exclud": 22, "exclude_kei": 22, "excluding_valu": 130, "execut": 68, "exist": [0, 68, 88, 133, 142, 155, 156, 157, 160, 161], "exist_ok": [156, 161], "expand": [0, 156, 157, 160], "expans": 108, "expect": [68, 69, 71, 83, 85, 114, 117, 155, 156, 161], "expects_merged_datafram": 71, "experi": [0, 1, 6, 7, 57, 79, 131, 154, 156, 157, 160], "experiment": 161, "expert": 1, "explain": 156, "explicitli": [140, 145], "exponenti": 134, "export": [154, 155, 156, 159, 161], "expos": 1, "express": [119, 134], "extend": [0, 1, 154, 155, 157, 160], "extens": [1, 57, 71, 148], "extern": [155, 156], "extra": [92, 161], "extra_repr": [92, 119], "extra_repr_recurs": 119, "extracor_nam": 57, "extract": [7, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 38, 49, 50, 51, 67, 83, 85, 127, 154, 156, 159], "extractor": [3, 7, 57, 83, 85], "extractor_nam": [17, 18, 20, 22, 25, 38, 40, 49, 51, 154, 159], "f": [93, 154, 156, 161], "f1": 93, "f2": 93, "f_absorpt": 118, "f_scatter": 118, "factor": [92, 118, 132, 134, 156, 161], "fail": 17, "fals": [35, 83, 91, 92, 104, 108, 109, 114, 119, 129, 132, 134, 136, 142, 156, 161], "fanci": 156, "fashion": 1, "fast": [0, 155, 156, 157, 160], "faster": [0, 154, 155, 157, 160], "favorit": 158, "favourit": 156, "fc": 93, "featur": [1, 21, 73, 83, 85, 91, 92, 93, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 125, 129, 130, 142, 153, 155, 156, 159, 161], "feature_idx": 118, "feature_map": [95, 96, 97, 98, 99, 159], "feature_nam": 118, "features_subset": [92, 102, 104, 106, 109, 121, 156, 161], "feedforward": 92, "feel": 156, "fetch": 138, "few": [0, 88, 153, 154, 155, 156, 157, 160, 161], "fiber_id": 97, "field": [133, 140, 142, 143, 145, 147, 154, 155, 156, 159], "fieldinfo": [140, 142, 143, 145], "figur": 0, "file": [0, 1, 7, 18, 20, 33, 35, 38, 48, 49, 50, 51, 57, 58, 59, 61, 62, 67, 71, 72, 73, 78, 79, 83, 85, 114, 119, 132, 134, 138, 139, 140, 141, 142, 143, 148, 150, 154, 155, 156, 157, 158, 159, 160, 161], "file_extens": 71, "file_handl": 150, "file_path": [154, 159], "file_read": [7, 154, 159], "filehandl": 150, "filenam": 148, "fileread": [18, 57], "files_list": 67, "filesi": 137, "filter": [35, 58, 150, 159], "filter_ani": 35, "filter_nam": 35, "filtermask": 35, "final": [0, 7, 93, 132, 142, 155, 156, 157, 160], "find": [20, 113, 148, 155, 156, 159, 161], "find_fil": [57, 58, 59, 61, 62, 154], "find_i3_fil": [137, 148], "first": [91, 102, 113, 121, 132, 153, 156, 159], "fisher": 134, "fit": [100, 134, 136, 145, 156, 161], "fit_weight": 136, "five": 155, "fix": [69, 156], "flag": [21, 83], "flake8": 153, "flatten": 33, "flatten_nested_dictionari": [32, 33], "flexibil": 161, "flexibl": 69, "float": [83, 92, 100, 102, 103, 109, 112, 113, 114, 115, 117, 118, 121, 132, 134, 136, 142, 155], "float32": [114, 115], "float64": 134, "flow": [127, 161], "flowchart": [0, 157, 160], "fly": [155, 156], "fn": [36, 140, 144], "fn_kwarg": 144, "folder": [58, 59, 61, 62, 78, 154], "folk": 156, "follow": [100, 104, 109, 123, 134, 136, 153, 154, 155, 156], "fork": 153, "form": [0, 18, 88, 125, 140, 145, 154, 155, 157, 160, 161], "format": [0, 1, 7, 33, 37, 38, 57, 59, 71, 72, 73, 91, 119, 121, 142, 153, 154, 155, 156, 157, 158, 159, 160, 161], "forward": [89, 91, 92, 95, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 117, 121, 123, 127, 129, 134, 161], "found": [36, 58, 72, 118, 134, 155, 156], "four": 91, "fourier": 91, "fourierencod": [90, 91, 108, 129], "fraction": [103, 121], "frame": [20, 22, 32, 35, 36, 85], "frame_is_montecarlo": [32, 34], "frame_is_nois": [32, 34], "framework": [0, 156, 157, 160], "free": [0, 134, 156, 157, 160], "freeli": 156, "frequenc": 91, "friendli": [0, 71, 73, 154, 156, 157, 158, 160], "from": [0, 1, 7, 18, 19, 20, 22, 24, 25, 27, 33, 34, 35, 36, 38, 49, 50, 51, 57, 58, 61, 62, 71, 73, 91, 93, 106, 108, 112, 114, 117, 118, 119, 122, 125, 126, 127, 130, 132, 133, 134, 140, 141, 142, 143, 145, 150, 153, 154, 155, 156, 157, 159, 160, 161], "from_config": [119, 141, 142, 143, 155, 156, 161], "from_dataset_config": [156, 161], "full": [72, 156, 161], "fulli": [154, 156, 161], "func": 156, "function": [0, 7, 20, 36, 38, 51, 67, 68, 83, 85, 89, 92, 93, 96, 97, 98, 99, 104, 109, 114, 118, 119, 127, 130, 134, 137, 142, 143, 144, 147, 148, 149, 151, 155, 157, 159, 160, 161], "fund": [0, 157, 160], "furnish": 134, "further": 83, "furthermor": 121, "g": [1, 17, 18, 20, 30, 33, 36, 68, 69, 73, 83, 85, 93, 114, 117, 118, 127, 130, 134, 136, 150, 153, 155, 156, 158, 161], "galatict": 23, "gamma_1": 92, "gamma_2": 92, "gather": 118, "gather_cluster_sequ": [110, 118], "gcd": [20, 34, 58, 67, 83, 85, 148], "gcd_dict": [34, 36], "gcd_file": [6, 20, 83, 85], "gcd_list": [67, 148], "gcd_rescu": [58, 148], "gcd_shuffl": 67, "gelu": 92, "gener": [0, 22, 35, 57, 71, 78, 83, 85, 91, 110, 111, 114, 115, 116, 125, 134, 136, 155, 156, 157, 159, 160, 161], "geometr": 156, "geometri": [95, 114, 161], "geometry_t": [95, 96, 97, 99, 159], "geometry_table_path": [96, 97, 99, 159], "germani": [0, 157, 160], "get": [18, 34, 68, 95, 132, 156, 161], "get_all_argument_valu": [139, 140], "get_all_grapnet_class": [139, 144], "get_graphnet_class": [139, 144], "get_lr": 132, "get_map_funct": 7, "get_member_vari": [32, 36], "get_metr": 132, "get_om_keys_and_pulseseri": [32, 34], "get_primary_kei": [65, 68], "getting_start": 114, "gframe": 20, "git": 158, "github": [108, 114, 129, 134, 156, 158], "given": [20, 73, 91, 93, 112, 127, 134, 136, 138, 155, 159], "glob": 154, "global": [2, 102, 104, 106, 109, 119, 156], "global_index": 7, "global_pooling_schem": [102, 104, 106, 109, 156, 161], "gnn": [1, 88, 114, 121, 129, 156, 161], "go": [153, 156], "googl": 153, "got": 154, "gpu": [100, 138, 156, 158, 161], "grab": 127, "grad_output": 134, "gradient_clip_v": 100, "grant": [0, 134, 157, 160], "graph": [0, 1, 88, 92, 93, 95, 121, 127, 130, 133, 153, 155, 156, 157, 160, 161], "graph_definit": [110, 142, 155, 156, 161], "graph_definiton": 155, "graphdefinit": [110, 111, 114, 115, 116, 153, 155, 156], "graphnet": [0, 1, 152, 153, 154, 155, 157, 158, 159, 160, 161], "graphnet_file_read": [56, 154, 159], "graphnet_model": 132, "graphnet_writ": 70, "graphnetearlystop": [131, 132], "graphnetfileread": [7, 56, 57, 58, 59, 61, 62, 154], "graphnetfilesavemethod": [71, 73], "graphnetwrit": [7, 70, 71, 72, 73, 154], "grapnet": [144, 156], "greatli": [156, 161], "group": [0, 93, 156, 157, 160], "group_bi": [90, 93], "group_pulses_to_dom": [90, 93], "group_pulses_to_pmt": [90, 93], "groupbi": 93, "guarante": [156, 161], "guid": 153, "guidelin": 153, "gvd": 99, "h5": [49, 61, 154], "h5_extractor": 48, "h5extractor": [7, 48, 49, 57, 154], "h5hitextractor": [48, 49, 154], "h5py": 154, "h5truthextractor": [48, 49, 154], "ha": [0, 36, 68, 83, 103, 118, 134, 148, 154, 155, 156, 157, 158, 159, 160, 161], "had": 159, "hadron": 126, "hand": [22, 155, 156], "handi": 67, "handl": [22, 134, 138, 147, 150, 154, 155, 156], "handler": 150, "happen": [136, 155, 159], "hard": [30, 117], "has_extens": [137, 148], "has_icecube_packag": [137, 149], "has_torch_packag": [137, 149], "have": [1, 22, 58, 68, 69, 73, 93, 108, 114, 118, 127, 153, 155, 156, 159, 161], "head": [92, 102, 106, 108, 127, 129, 161], "head_dim": 92, "head_siz": 108, "heavi": 154, "help": [83, 85, 138, 153, 155, 156, 159, 161], "here": [114, 153, 155, 156, 158, 159, 161], "herebi": 134, "hidden": [91, 92, 102, 104, 105, 109, 121], "hidden_dim": [108, 129], "hidden_featur": 92, "hidden_s": [121, 125, 126, 127, 156, 161], "high": [0, 156, 157, 160], "higher": 155, "highest_protocol": 154, "hint": 153, "hit": [155, 156, 159], "hitdata": 49, "hlc": 117, "hlc_name": 117, "hold": [114, 154, 159, 161], "holder": 134, "home": [96, 97, 99, 138, 154, 159], "homophili": 130, "hook": 153, "horizon": [0, 157, 160], "host": 159, "how": [110, 111, 116, 154, 156, 161], "howev": [58, 155, 156], "html": 156, "http": [108, 109, 112, 114, 129, 134, 153, 156, 158], "human": 156, "hybrid": 23, "hyperparamet": [143, 156, 161], "i": [0, 1, 17, 18, 20, 22, 33, 34, 35, 36, 38, 40, 49, 51, 58, 67, 68, 69, 72, 73, 78, 83, 85, 89, 91, 92, 93, 103, 104, 108, 109, 112, 114, 115, 117, 118, 121, 123, 126, 127, 130, 132, 133, 134, 136, 138, 140, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "i3": [1, 20, 34, 35, 36, 58, 67, 78, 83, 85, 148, 156, 158], "i3_fil": [6, 20], "i3_filt": [32, 58], "i3_list": [67, 148], "i3_shuffl": 67, "i3calibr": 34, "i3deploy": [6, 82], "i3extractor": [7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 57], "i3featureextractor": [19, 83, 85], "i3featureextractoricecube86": [19, 21], "i3featureextractoricecubedeepcor": [19, 21], "i3featureextractoricecubeupgrad": [19, 21], "i3fileset": [3, 6, 57, 58], "i3filt": [32, 35, 58], "i3filtermask": [32, 35], "i3fram": [19, 22, 34, 36, 83, 85], "i3galacticplanehybridrecoextractor": [19, 23], "i3genericextractor": 19, "i3hybridrecoextractor": 19, "i3inferencemodul": [82, 83, 85], "i3mctre": 30, "i3modul": [1, 77, 79], "i3ntmuonlabelextractor": [19, 24], "i3ntmuonlabelsextractor": 19, "i3particl": 25, "i3particleextractor": 19, "i3pisaextractor": 19, "i3pulsecleanermodul": [82, 83], "i3pulsenoisetruthflagicecubeupgrad": [19, 21], "i3quesoextractor": 19, "i3read": 56, "i3retroextractor": 19, "i3splinempeextractor": 19, "i3splinempeicextractor": [19, 29], "i3truthextractor": 19, "i3tumextractor": 19, "ic": [106, 108, 117], "ice_arg": 117, "ice_transpar": [110, 118], "icecub": [1, 16, 58, 77, 92, 94, 98, 106, 108, 117, 118, 149, 156, 161], "icecube86": [94, 96, 99], "icecube86prometheu": [94, 99], "icecube_deepcor": 99, "icecube_gen2": 99, "icecube_upgrad": [96, 99], "icecubedeepcor": [94, 96], "icecubedeepcore8": [94, 99], "icecubegen2": [94, 99], "icecubekaggl": [94, 96], "icecubeupgrad": [94, 96], "icecubeupgrade7": [94, 99], "icedemo81": [94, 99], "icemix": 101, "icemixnod": [116, 117], "icetrai": [34, 36, 58, 79, 149, 158], "icetray_verbos": 58, "id": [7, 73, 95, 114, 154, 155, 156, 159], "id_column": 117, "ideal": 161, "ident": [93, 127], "identifi": [7, 30, 117, 118, 130, 142, 143, 159], "identify_indic": [110, 118], "identitytask": [124, 125, 127], "ie": 102, "ignor": [36, 72], "illustr": [0, 153, 154, 157, 160], "imag": [0, 1, 153, 156, 157, 160, 161], "impact": 108, "implement": [1, 18, 20, 57, 71, 79, 92, 102, 103, 104, 105, 106, 108, 109, 112, 121, 129, 134, 153, 154, 156, 161], "impli": 134, "import": [0, 68, 88, 137, 154, 155, 156, 157, 159, 160, 161], "impos": 100, "improv": [0, 1, 138, 156, 157, 160, 161], "in_featur": 92, "inaccur": 118, "inact": 114, "includ": [1, 92, 100, 117, 134, 140, 153, 155, 156, 159, 161], "include_dynedg": 108, "incompat": 156, "incorpor": 91, "increas": [0, 132, 157, 160], "indent": 119, "independ": [78, 154], "index": [1, 7, 36, 68, 72, 93, 95, 102, 113, 118, 121, 132, 155, 156, 161], "index_column": [7, 68, 69, 72, 73, 136, 142, 155, 156], "indic": [69, 87, 93, 102, 113, 118, 121, 132, 134, 138, 153, 156, 161], "indicesfor": 34, "indici": [34, 69, 134], "individu": [0, 93, 104, 130, 155, 157, 160, 161], "industri": [0, 157, 160], "inelast": 126, "inelasticity_pr": 126, "inelasticityreconstruct": [124, 126], "inf": 130, "infer": [0, 1, 73, 77, 79, 83, 85, 100, 127, 156, 157, 160], "inference_modul": 82, "info": [150, 156], "inform": [17, 18, 20, 22, 30, 38, 49, 51, 114, 117, 118, 119, 154, 155, 156, 159, 161], "ingest": [0, 1, 94, 157, 160], "inherit": [18, 20, 36, 57, 71, 95, 117, 134, 150, 154, 155, 156, 161], "init_fn": [142, 143], "init_global_index": [3, 7], "init_predict_tqdm": 132, "init_test_tqdm": 132, "init_train_tqdm": 132, "init_validation_tqdm": 132, "init_valu": 92, "initail": 40, "initi": [7, 35, 44, 58, 73, 78, 92, 102, 108, 113], "initial_st": 51, "initialis": [143, 156, 161], "injection_azimuth": [155, 156], "injection_bjorkeni": [155, 156], "injection_bjorkenx": [155, 156], "injection_column_depth": [155, 156], "injection_energi": [155, 156], "injection_interaction_typ": [155, 156], "injection_position_i": [155, 156], "injection_position_x": [155, 156], "injection_position_z": [155, 156], "injection_typ": [155, 156], "injection_zenith": [155, 156, 161], "innov": [0, 157, 160], "input": [7, 57, 58, 71, 78, 83, 85, 91, 92, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 114, 115, 117, 121, 125, 127, 129, 130, 140, 145, 147, 154, 155, 156, 159, 161], "input_dim": [92, 161], "input_dir": [154, 159], "input_featur": [95, 114], "input_feature_nam": [95, 114, 115, 117], "input_fil": [57, 78], "ins": 95, "insid": 155, "inspect": [156, 161], "inspir": 109, "instal": [153, 156], "instanc": [18, 20, 30, 36, 38, 40, 49, 51, 58, 114, 119, 133, 141, 143, 154, 155, 156, 161], "instanti": [7, 143, 154, 155, 159], "instead": [20, 58, 134, 156, 161], "int": [7, 24, 27, 35, 57, 58, 59, 61, 62, 69, 71, 72, 73, 78, 91, 92, 93, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 134, 136, 138, 142, 145, 150, 154, 161], "integ": [68, 102, 104, 105, 109, 134, 155, 156], "integer_primary_kei": 68, "integr": 161, "intend": [102, 121, 156], "interact": [126, 133, 155, 156], "interaction_kei": 133, "interaction_tim": 126, "interaction_time_pr": 126, "interaction_typ": 133, "interchang": [156, 161], "interfac": [0, 142, 143, 156, 157, 158, 159, 160], "interim": [7, 70, 71, 72, 73, 154], "intermedi": [0, 1, 7, 103, 156, 157, 160], "intern": [16, 59], "internal_parquet_read": 56, "interpol": [118, 132], "interpret": 125, "interv": [91, 156, 161], "intract": 155, "introduc": 156, "intuit": [150, 161], "invers": 127, "invert": 127, "involv": 69, "io": [153, 156], "iop": 156, "iopscienc": 156, "is_boost_class": [32, 36], "is_boost_enum": [32, 36], "is_gcd_fil": [137, 148], "is_graphnet_class": [139, 144], "is_graphnet_modul": [139, 144], "is_i3_fil": [137, 148], "is_icecube_class": [32, 36], "is_method": [32, 36], "is_typ": [32, 36], "iseecub": 128, "isinst": 154, "isn": 36, "isol": 115, "issu": [156, 161], "its": [36, 121, 155, 156, 161], "itself": [36, 127, 154, 156, 161], "iv": 134, "jacobian": 127, "job": 159, "join": [154, 156], "json": [33, 142, 155, 156], "just": [93, 154, 155, 156, 161], "k": [92, 102, 104, 106, 109, 112, 115, 121, 130, 134], "kaggl": [91, 92, 96, 106, 108], "kappa": [126, 134], "kappa_switch": 134, "karg": [119, 122], "keep": [18, 20, 38, 40, 49, 51, 117, 154], "kei": [22, 33, 34, 36, 68, 73, 92, 93, 117, 133, 142, 143, 154, 155, 156, 159], "kept": 35, "key_padding_mask": 92, "keyword": [132, 140, 145], "kind": [134, 159], "km3net": [16, 156, 161], "km3net_util": 44, "km3netroot": 40, "km3netrootextractor": 39, "km3netrootpulseextractor": 39, "km3netrootread": 56, "km3netroottriggpulseextractor": 39, "km3netroottruthextractor": 39, "knn_graph_batch": [88, 130], "knnedg": [111, 112], "knngraph": [110, 115, 155, 156, 161], "know": 159, "known": 93, "kv": 92, "kwarg": [7, 35, 57, 59, 61, 62, 71, 89, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 129, 132, 134, 136, 140, 142, 143, 150], "l": [118, 130], "label": [24, 27, 100, 103, 114, 123, 127, 131, 142], "lai": 156, "lambda": [119, 156, 161], "land": 156, "larg": [0, 102, 134, 155, 157, 160], "larger": 154, "largest": 118, "last": [104, 109, 121, 125, 126, 127, 132, 161], "last_epoch": 132, "lastli": 159, "latent": [91, 102, 104, 106, 108, 109, 121, 125, 126, 127, 129, 161], "latest": 156, "layer": [0, 90, 93, 102, 103, 104, 105, 106, 108, 109, 121, 125, 126, 127, 157, 160], "layer_s": 92, "layer_size_scal": 105, "layernorm": 92, "ldot": [89, 93], "lead": [155, 156], "learn": [0, 1, 71, 73, 83, 85, 123, 125, 127, 132, 154, 156, 157, 158, 159, 160, 161], "learnabl": [92, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 127, 129, 161], "learnedtask": [124, 127], "least": [153, 155, 156], "leav": 132, "len": [118, 154, 155], "length": [36, 117, 118, 130, 132], "less": [156, 161], "let": [156, 159, 161], "level": [0, 17, 30, 35, 51, 57, 58, 59, 61, 62, 68, 71, 72, 89, 93, 108, 123, 150, 155, 156, 157, 159, 160], "leverag": 1, "lex_sort": [110, 118], "liabil": 134, "liabl": 134, "lib": [96, 97, 99, 138], "licens": 134, "lift": 154, "light": 113, "lightn": [132, 156, 161], "lightningmodul": [91, 92, 119, 132, 150, 156, 161], "like": [18, 36, 93, 113, 127, 130, 134, 151, 153, 155, 156, 158, 161], "limit": [117, 134], "line": [132, 138, 154, 155, 159], "linear": [104, 109, 161], "linearli": 132, "liquid": 97, "liquido": [16, 61, 94, 154], "liquido_read": 56, "liquido_v1": [94, 97], "liquidoread": [56, 61, 154], "list": [6, 7, 17, 22, 30, 33, 35, 36, 49, 51, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 79, 83, 85, 89, 92, 93, 95, 100, 102, 104, 106, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 127, 130, 132, 134, 136, 142, 144, 145, 148, 150, 154, 155, 159], "list_all_submodul": [139, 144], "ljvmiranda921": 153, "load": [0, 67, 79, 119, 122, 140, 142, 155, 156, 157, 159, 160], "load_from_checkpoint": [156, 161], "load_modul": 119, "load_state_dict": [119, 122, 156, 161], "loaded_model": [156, 161], "local": [89, 96, 97, 99, 117, 138, 156, 158, 161], "log": [0, 126, 131, 132, 134, 137, 155, 156, 157, 160, 161], "log10": [127, 136, 156, 161], "log_cmk": 134, "log_cmk_approx": 134, "log_cmk_exact": 134, "log_every_n_step": [100, 156, 161], "log_fold": [35, 57, 59, 61, 62, 71, 150], "log_model": [156, 161], "logcmk": [131, 134], "logcoshloss": [131, 134, 156, 161], "logger": [7, 18, 35, 57, 59, 61, 62, 69, 71, 78, 79, 100, 112, 119, 133, 136, 137, 150, 156, 161], "loggeradapt": 150, "logic": 155, "logit": [125, 134, 161], "logrecord": 150, "long": 155, "longev": [0, 157, 160], "longtensor": [89, 93, 130], "look": [22, 155, 156], "lookup": 144, "loop": [156, 161], "loss": [100, 114, 123, 127, 132, 134, 138, 156, 161], "loss_factor": 134, "loss_funct": [127, 131, 156, 161], "loss_weight": [114, 127, 156, 161], "loss_weight_column": [114, 142], "loss_weight_default_valu": [114, 142], "loss_weight_t": 142, "lossfunct": [127, 131, 134, 156], "lot": 153, "lower": [0, 156, 157, 160], "lr": [156, 161], "m": [113, 118, 134], "machin": 1, "made": [156, 161], "magnitud": [0, 157, 160], "mai": [57, 69, 79, 117, 155, 156, 158, 161], "main": [1, 101, 114, 153, 156], "mainli": 36, "major": [123, 127], "make": [0, 7, 117, 136, 142, 143, 153, 154, 155, 156, 157, 159, 160, 161], "makedir": [156, 161], "manag": [0, 131, 154, 156, 157, 160], "mandatori": 91, "mangl": 36, "mani": [73, 154, 156, 161], "manipul": [33, 110, 111, 116], "map": [7, 21, 22, 68, 96, 97, 98, 99, 114, 115, 127, 140, 142, 143, 145, 156, 159, 161], "mari": [0, 157, 160], "martin": 103, "mask": [114, 130], "masked_entri": 130, "master": 134, "match": [57, 136, 148, 151, 154], "math": [92, 137], "mathbb": 93, "mathbf": [89, 93], "matic": 127, "matric": 92, "matrix": [93, 112, 113, 130, 134, 155], "max": [89, 92, 104, 106, 109, 134, 136, 138, 156, 161], "max_activ": 117, "max_epoch": [100, 156, 161], "max_pool": [89, 93], "max_pool_x": [89, 93], "max_puls": 117, "max_rel_po": 129, "max_table_s": 73, "max_weight": 136, "maximum": [73, 93, 117, 118, 127, 129, 138], "mc": [22, 68], "mc_truth": [18, 51, 155, 156], "mctree": [30, 34], "md": [114, 156], "mean": [0, 88, 104, 106, 109, 118, 134, 143, 154, 155, 156, 157, 160, 161], "meaning": 91, "meant": [154, 156, 161], "measur": [117, 118, 130, 156, 159], "mechan": 92, "meet": 127, "member": [20, 22, 36, 57, 117, 142, 143, 150, 154, 159], "memori": 155, "mention": 156, "merchant": 134, "merg": [7, 71, 72, 73, 134, 154, 155, 159], "merge_fil": [7, 71, 72, 73, 154, 159], "merged_database_nam": 73, "messag": [92, 132, 150, 156], "messagepass": 92, "metaclass": [142, 143], "metadata": [140, 142, 143, 145], "metaproject": 158, "meter": 156, "meth": 156, "method": [7, 18, 20, 32, 33, 34, 36, 57, 71, 72, 73, 79, 92, 93, 95, 118, 126, 134, 136, 154, 156, 161], "metric": [102, 104, 106, 109, 113, 121, 132, 156, 161], "might": [155, 156, 161], "mileston": [132, 156, 161], "million": 73, "min": [89, 93, 104, 106, 109, 136, 156, 161], "min_pool": [89, 90, 93], "min_pool_x": [89, 90, 93], "mind": 156, "minh": 103, "minim": [100, 155, 156, 159, 161], "minimum": [117, 127], "minkowski": 111, "minkowskiknnedg": [111, 113], "minu": 134, "mise": 134, "miss": 87, "mit": 134, "mix": 17, "ml": [0, 1, 157, 160], "mlp": [90, 91, 92, 104, 108, 109, 129, 161], "mlp_dim": [91, 129], "mlp_ratio": [92, 108], "mode": [100, 127], "model": [0, 1, 77, 79, 83, 85, 131, 132, 134, 138, 140, 142, 143, 145, 152, 154, 155, 157, 158, 159, 160], "model_computed_field": [140, 142, 143, 145], "model_config": [79, 83, 85, 139, 140, 142, 145, 156, 161], "model_config_path": [156, 161], "model_field": [140, 142, 143, 145], "model_nam": [83, 85], "modelconfig": [79, 83, 85, 119, 139, 142, 143], "modelconfigsav": 143, "modelconfigsaverabc": [139, 143], "modelconfigsavermeta": [139, 143], "modif": [156, 161], "modifi": [134, 156, 161], "modul": [0, 1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 44, 48, 50, 52, 54, 56, 63, 65, 70, 74, 77, 80, 82, 86, 88, 90, 94, 101, 110, 111, 116, 120, 124, 128, 131, 137, 139, 152, 154, 156, 157, 160, 161], "modular": [0, 88, 154, 156, 157, 160, 161], "moduletyp": 144, "mont": 34, "more": [1, 67, 68, 102, 119, 142, 143, 150, 155, 156, 161], "most": [0, 1, 69, 113, 127, 154, 157, 159, 160, 161], "mryab": 134, "mseloss": [131, 134], "msg": 150, "mulitpli": 134, "multi": [92, 104, 109, 123], "multiclassclassificationtask": [124, 125, 156], "multiheadattent": 92, "multiindex": 159, "multipl": [17, 91, 118, 132, 134, 142, 150, 161], "multipli": [92, 132], "multiprocess": [7, 154], "muon": [24, 155, 161], "must": [17, 57, 58, 68, 71, 89, 132, 134, 136, 153, 154, 155, 156, 159], "my": [155, 156, 159], "my_custom_label": [155, 156], "my_databas": 73, "my_fil": [154, 159], "my_geometry_t": 159, "my_outdir": [154, 159], "my_tabl": 159, "mycustomlabel": [155, 156], "mydetector": 159, "myexperi": 159, "myextractor": 159, "mygraphnetmodel": 161, "mymodel": 161, "mypi": 153, "mypicklewrit": 154, "myread": 159, "n": [18, 89, 93, 113, 130, 134, 155, 156, 159], "n_1": 93, "n_b": 93, "n_cluster": 118, "n_event": [154, 159], "n_featur": [91, 108, 129], "n_freq": 91, "n_head": [92, 102, 106], "n_pmt": 118, "n_puls": [117, 159], "n_rel": 108, "n_worker": 78, "name": [7, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 38, 40, 49, 51, 57, 59, 61, 62, 68, 71, 72, 73, 79, 83, 85, 95, 114, 115, 117, 121, 127, 133, 136, 138, 140, 142, 143, 144, 145, 150, 153, 154, 155, 156, 159, 161], "namespac": [119, 142, 143], "nan": 118, "narg": 138, "nb_dom": 130, "nb_file": 7, "nb_input": [102, 103, 104, 105, 106, 107, 109, 121, 125, 126, 127, 156, 161], "nb_intermedi": 103, "nb_nearest_neighbour": [112, 113, 115, 155, 156, 161], "nb_neighbor": 92, "nb_neighbour": [102, 104, 106, 109, 121, 156, 161], "nb_output": [103, 105, 107, 117, 125, 126, 127, 156, 161], "nb_repeats_allow": 150, "ndarrai": [30, 114, 118, 136, 154], "nearest": [102, 104, 106, 109, 112, 113, 115, 121, 130, 156, 161], "nearli": 161, "necessari": [0, 33, 153, 157, 160], "need": [0, 33, 73, 88, 91, 119, 121, 134, 147, 154, 155, 156, 157, 158, 159, 160, 161], "negat": 93, "neighbour": [92, 102, 104, 106, 109, 112, 113, 115, 121, 130, 156, 161], "nest": 33, "nester": 33, "network": [1, 92, 103, 120, 161], "neural": [1, 120, 161], "neutrino": [0, 1, 20, 51, 58, 92, 106, 108, 118, 129, 155, 156, 157, 159, 160, 161], "new": [0, 1, 17, 92, 117, 140, 145, 153, 154, 156, 157, 160, 161], "new_features_nam": 117, "new_phras": 147, "nfdi": [0, 157, 160], "nn": [0, 88, 92, 112, 115, 157, 160, 161], "no_weight_decai": 108, "node": [89, 93, 102, 103, 104, 106, 109, 110, 111, 112, 114, 115, 121, 130, 155, 156, 161], "node_definit": [114, 115, 155, 156, 161], "node_feature_nam": [117, 155, 156, 161], "node_rnn": [102, 120], "node_truth": 142, "node_truth_t": [142, 156], "nodeasdomtimeseri": [116, 117], "nodedefinit": [114, 115, 116, 117, 156, 161], "nodesaspuls": [114, 116, 117, 155, 156, 161], "nodetimernn": 121, "nois": [21, 34, 83, 156], "non": [33, 36, 68, 102, 134, 156], "none": [7, 20, 22, 30, 34, 35, 36, 57, 58, 59, 61, 62, 68, 69, 71, 72, 73, 78, 79, 85, 92, 93, 100, 102, 104, 106, 108, 109, 113, 114, 115, 117, 118, 119, 121, 122, 123, 127, 132, 134, 136, 138, 140, 141, 142, 144, 148, 150, 154, 155, 156, 159, 161], "nonetyp": 142, "noninfring": 134, "norm_lay": 92, "normal": [92, 104, 109, 118, 127, 159], "normalizingflow": 127, "northeren": 24, "note": [58, 72, 73, 118, 143, 156], "notebook": 153, "notic": [73, 130, 134], "notimplementederror": 154, "now": [156, 159, 161], "np": [136, 154], "null": [35, 68, 155, 156, 161], "nullspliti3filt": [32, 35, 58], "num": 138, "num_class": 134, "num_edg": 155, "num_edge_featur": 155, "num_featur": 155, "num_head": [92, 129], "num_lay": [121, 129], "num_nod": 155, "num_puls": 117, "num_register_token": 129, "num_row": [114, 155], "num_work": [7, 72, 154, 155, 156, 159, 161], "number": [0, 7, 18, 69, 72, 73, 78, 91, 92, 93, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 117, 118, 121, 125, 126, 127, 129, 130, 132, 136, 138, 154, 155, 156, 157, 159, 160], "numer": [127, 159], "numpi": 118, "numu": 133, "numucc": 133, "o": [0, 97, 127, 154, 156, 157, 158, 160, 161], "obj": [33, 36, 144], "object": [6, 22, 33, 36, 89, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 121, 122, 123, 125, 126, 127, 129, 132, 134, 138, 140, 142, 143, 145, 150, 155, 156, 161], "observ": 159, "observatori": [20, 58], "obtain": [93, 134], "oerso": 105, "offer": 155, "offset": [117, 118], "ofintern": 37, "often": 155, "old_phras": 147, "om": [34, 36], "omit": 161, "on_fit_end": 132, "on_train_end": 122, "on_train_epoch_end": 132, "on_train_epoch_start": 132, "on_validation_end": 132, "onc": [150, 156, 158], "one": [20, 68, 83, 93, 142, 143, 148, 153, 154, 155, 156, 159, 161], "ones": 122, "onli": [0, 1, 73, 88, 93, 102, 127, 136, 140, 143, 145, 149, 154, 155, 156, 157, 159, 160, 161], "open": [0, 57, 153, 154, 155, 156, 157, 158, 159, 160], "opensciencegrid": 158, "oper": [89, 92, 101, 104], "oppos": 155, "optic": [36, 118], "optim": [100, 122, 132, 156, 161], "optimis": [0, 1, 156, 157, 160, 161], "optimizer_class": [156, 161], "optimizer_closur": 122, "optimizer_kwarg": [156, 161], "optimizer_step": 122, "option": [7, 20, 30, 73, 79, 85, 91, 92, 93, 102, 104, 106, 108, 109, 113, 114, 115, 117, 118, 119, 121, 127, 132, 134, 136, 137, 138, 140, 142, 148, 154, 155, 156, 159, 161], "orca": [94, 99], "orca115": [94, 98], "orca150": [94, 99, 161], "orca150superdens": [94, 99], "orca6": [94, 98], "orca_150": 99, "order": [0, 33, 57, 78, 89, 117, 130, 134, 156, 157, 160], "ordinari": 161, "ordinarili": 159, "org": [109, 112, 134, 156, 158], "orient": [0, 88, 157, 160], "origin": [108, 155, 161], "ot": 134, "other": [25, 68, 112, 134, 153, 155, 156, 161], "otherwis": [36, 134], "our": [156, 159], "out": [104, 124, 134, 150, 153, 154, 155, 156, 159, 161], "out_featur": 92, "outdir": [7, 154, 156, 159, 161], "outer": 33, "outlin": [159, 161], "output": [18, 73, 78, 79, 91, 92, 100, 102, 103, 104, 105, 107, 109, 117, 118, 121, 125, 126, 127, 136, 142, 143, 154, 159, 161], "output_dim": [91, 161], "output_dir": [71, 72, 73, 154], "output_fil": 7, "output_file_path": 154, "output_fold": [6, 78], "outsid": 153, "over": [113, 117, 154, 155], "overal": 134, "overhead": 159, "overrid": 132, "overridden": 117, "overview": [0, 157, 160], "overwrit": [79, 132], "overwritten": [57, 138, 140], "own": [153, 156], "ownership": 153, "p": [34, 134, 154], "p11003": 156, "packag": [0, 1, 67, 144, 148, 149, 152, 153, 156, 157, 160, 161], "pad": [114, 118, 130], "padding_valu": [24, 27, 130], "pair": [20, 58, 91], "pairwis": [113, 130], "pairwise_shuffl": [65, 67], "panda": [69, 136, 154, 156, 159, 161], "paper": 134, "paradigm": [156, 161], "parallel": [7, 154, 159], "param": [38, 40, 49, 51], "paramet": [6, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 49, 51, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 79, 83, 85, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151], "parent": [33, 156], "parent_kei": 33, "parquet": [3, 10, 38, 50, 51, 59, 62, 72, 96, 97, 99, 154, 155, 156, 159], "parquet_dataset": 12, "parquet_extractor": 37, "parquet_to_sqlit": 65, "parquet_writ": 70, "parquetdataset": [154, 156], "parquetextractor": [7, 37, 38, 49, 57], "parquetread": [56, 59], "parquetwrit": [38, 70, 72, 154, 155, 159], "pars": [22, 138, 139, 140, 145, 154], "part": [154, 156, 158, 159], "particl": [30, 68, 133, 155, 156, 159], "particlenet": 101, "particular": [134, 153], "particularli": [155, 156, 161], "partit": 73, "partli": [0, 157, 160], "pass": [91, 92, 100, 102, 103, 104, 105, 106, 107, 108, 109, 114, 121, 123, 127, 129, 132, 134, 136, 153, 154, 155, 156, 159, 161], "path": [20, 57, 58, 59, 61, 62, 67, 68, 73, 78, 83, 85, 92, 114, 119, 122, 132, 138, 140, 141, 142, 148, 154, 155, 156, 159, 161], "path_to_arrai": 159, "path_to_geometry_t": 159, "patienc": 138, "pd": [154, 156, 159], "pdf": 112, "pdg": 133, "penal": 134, "peopl": [156, 161], "pep257": 153, "pep8": 153, "per": [22, 68, 92, 93, 102, 121, 127, 134, 136, 155, 156], "percentil": [117, 118], "percentileclust": [116, 117], "perceptron": [92, 104, 109], "perform": [0, 89, 91, 92, 93, 100, 101, 102, 104, 106, 109, 117, 121, 122, 123, 125, 127, 156, 157, 160, 161], "permiss": 134, "permit": 134, "person": 134, "perturb": [114, 115], "perturbation_dict": [114, 115], "pframe": 58, "philosophi": [156, 161], "photon": [51, 155, 156], "phrase": 147, "phyic": 1, "physic": [0, 1, 20, 34, 36, 77, 83, 85, 88, 124, 127, 155, 156, 157, 160, 161], "physicist": [0, 1, 156, 157, 160], "physicst": 1, "pick": 155, "pickl": [154, 156, 159, 161], "pid": [69, 133, 142, 155], "pid_kei": 133, "piecewiselinearlr": [131, 132, 156, 161], "pip": [153, 158], "pisa": 26, "place": [91, 108, 147, 153], "plai": 1, "plane": [23, 134], "pleas": [154, 155, 156, 159], "plot": 155, "plug": 1, "pmt": [93, 118, 155, 156], "point": [29, 133, 134, 156, 159, 161], "pole": [106, 108], "pone": 99, "pone_triangl": 99, "ponetriangl": [94, 99], "pool": [7, 89, 90, 102, 104, 106, 109], "pop_default": 138, "popular": 161, "port": 156, "portabl": [0, 156, 157, 160, 161], "portion": 134, "pos_i": 98, "pos_x": [98, 156], "pos_z": 98, "posit": [83, 91, 92, 93, 108, 118, 126, 129, 140, 145, 155, 159], "position_x_pr": 126, "position_y_pr": 126, "position_z_pr": 126, "positionreconstruct": [124, 126], "possibl": [0, 33, 73, 153, 157, 159, 160], "post": [102, 104, 106, 109], "post_processing_layer_s": [102, 104, 106, 156, 161], "pow": [156, 161], "power": [154, 156, 161], "pr": 121, "practic": [0, 153, 157, 160], "pre": [0, 95, 114, 133, 153, 155, 156, 157, 160, 161], "pre_configur": 3, "precis": 134, "precommit": 153, "pred": [100, 123, 127], "predict": [0, 25, 29, 31, 83, 85, 100, 103, 108, 123, 125, 127, 134, 156, 157, 160, 161], "predict_as_datafram": [100, 156, 161], "prediction_column": [79, 85, 100], "prediction_kei": 134, "prediction_label": [100, 127, 156, 161], "prefer": 113, "prepar": [0, 134, 155, 157, 160], "preprocess": 156, "present": [20, 35, 130, 138, 148, 149, 155, 161], "previou": [132, 156, 161], "primari": [68, 73, 155, 156], "primary_hadron_1_direction_phi": [155, 156], "primary_hadron_1_direction_theta": [155, 156], "primary_hadron_1_energi": [155, 156], "primary_hadron_1_position_i": [155, 156], "primary_hadron_1_position_x": [155, 156], "primary_hadron_1_position_z": [155, 156], "primary_hadron_1_typ": [155, 156], "primary_key_rescu": 73, "primary_lepton_1_direction_phi": [155, 156], "primary_lepton_1_direction_theta": [155, 156], "primary_lepton_1_energi": [155, 156], "primary_lepton_1_position_i": [155, 156], "primary_lepton_1_position_x": [155, 156], "primary_lepton_1_position_z": [155, 156], "primary_lepton_1_typ": [155, 156], "principl": [1, 156], "print": [119, 132, 150], "prior": 155, "prioriti": 153, "privat": 136, "pro": [156, 161], "probabl": [92, 134, 161], "problem": [0, 112, 153, 155, 156, 157, 160, 161], "proceedur": 73, "process": [1, 7, 83, 91, 95, 102, 104, 106, 109, 153, 154, 156, 161], "process_posit": 132, "produc": [57, 91, 123, 133, 136, 155, 156], "product": 92, "programm": [0, 157, 160], "progress": 132, "progressbar": [131, 132, 156, 161], "proj_drop": 92, "project": [0, 62, 92, 153, 156, 157, 160, 161], "prometheu": [16, 62, 94, 155, 156, 161], "prometheus_dataset": 74, "prometheus_extractor": 50, "prometheus_read": 56, "prometheusextractor": [7, 50, 51, 57], "prometheusfeatureextractor": [50, 51], "prometheusread": [56, 62], "prometheustruthextractor": [50, 51], "prompt": 156, "prone": 156, "proof": [156, 161], "properti": [18, 25, 36, 57, 71, 93, 95, 100, 107, 117, 118, 127, 133, 141, 150, 154], "protocol": 154, "prototyp": 97, "proven": [18, 20, 38, 40, 49, 51, 154], "provid": [0, 1, 7, 83, 88, 108, 114, 119, 134, 153, 154, 155, 156, 157, 160, 161], "pth": [156, 161], "public": [95, 136], "publish": [134, 156, 161], "puls": [17, 21, 22, 34, 36, 51, 68, 83, 89, 93, 108, 114, 117, 118, 123, 129, 130, 155, 156, 159, 161], "pulsemap": [21, 83, 85, 142, 155, 156], "pulsemap_extractor": [83, 85], "pulseseri": 34, "pulsmap": [83, 85], "punch4nfdi": [0, 157, 160], "pure": [7, 18, 19, 22, 36], "purpos": [0, 88, 134, 157, 159, 160], "put": [73, 156, 161], "py": [134, 156], "py3": 158, "pydant": [140, 142, 143, 145], "pydantic_cor": [140, 145], "pydocstyl": 153, "pyg": [155, 156, 161], "pylint": 153, "python": [0, 1, 7, 18, 19, 22, 33, 36, 153, 156, 157, 158, 160, 161], "python3": [96, 97, 99, 138], "pytorch": [132, 156, 158, 161], "pytorch_lightn": [100, 132, 150, 156, 161], "pytorchlightn": 156, "q": 92, "qk_scale": 92, "qkv_bia": 92, "qualiti": [0, 156, 157, 160], "quantiti": [26, 127, 130, 156], "queri": [68, 69, 73, 92, 155, 156], "query_databas": [65, 68], "query_t": 155, "queso": 27, "question": 156, "quick": 156, "r": [93, 112, 154, 156, 158, 159], "radial": 112, "radialedg": [111, 112], "radiat": [117, 118, 156, 161], "radiu": [112, 156], "rais": [20, 22, 119, 140, 145, 154], "random": [65, 69, 72, 117, 142, 155, 156], "randomli": [69, 114, 115, 143, 156, 161], "rang": [127, 157, 159, 160, 161], "rare": 154, "rasmu": [0, 105, 157, 160], "rate": 132, "rather": [127, 150, 156, 161], "ratio": [92, 108], "raw": [0, 117, 118, 155, 156, 157, 159, 160, 161], "re": [141, 155, 156, 159, 161], "reach": [155, 159], "read": [0, 7, 33, 58, 59, 61, 62, 95, 104, 124, 154, 155, 156, 157, 159, 160], "read_csv": 159, "read_sql": 156, "readabl": 156, "reader": [3, 159], "readi": [159, 161], "readm": 156, "readout": [102, 104, 106, 109], "readout_layer_s": [102, 104, 106, 109, 156, 161], "readthedoc": 156, "receiv": [0, 157, 160, 161], "reciev": [71, 154, 159, 161], "recommend": [156, 158, 159, 161], "reconstruct": [0, 1, 21, 23, 24, 28, 29, 31, 77, 106, 108, 121, 124, 127, 155, 156, 157, 160], "record": 150, "recov": 127, "recreat": [155, 156, 161], "recurr": 120, "recurs": [22, 36, 57, 58, 119, 144, 148], "reduc": [156, 161], "reduce_opt": 89, "refer": [99, 142, 155, 156, 159, 161], "refresh_r": 132, "regardless": [155, 156, 161], "regist": 129, "regress": 123, "regular": [36, 92, 156, 161], "rel": [92, 108, 129], "rel_pos_bia": 92, "rel_pos_bucket": 129, "relat": [67, 148, 159], "relev": [1, 36, 67, 148, 153], "reli": 58, "reload": 161, "relu": 109, "remain": 155, "remov": [114, 138, 159], "renam": 147, "rename_state_dict_entri": [137, 147], "repeat": 150, "repeatfilt": [137, 150], "replac": [140, 142, 143, 145, 147], "repo": 153, "repositori": 153, "repres": [93, 102, 114, 115, 117, 118, 130, 140, 142, 143, 154, 155, 156, 159, 161], "represent": [36, 91, 92, 93, 115, 119, 121, 155, 156, 159, 161], "reproduc": [142, 143, 161], "repurpos": 161, "requir": [0, 20, 26, 38, 51, 68, 117, 125, 134, 142, 143, 145, 153, 154, 155, 156, 157, 158, 159, 160, 161], "requires_icecub": [137, 149], "research": [0, 156, 157, 160], "reset": 92, "reset_paramet": 92, "resolv": 69, "respect": [156, 159], "respons": [155, 156], "restrict": [127, 134, 161], "result": [68, 72, 93, 115, 118, 132, 134, 144, 156, 159, 161], "retriev": [95, 154, 155], "retro": 28, "return": [7, 17, 18, 20, 33, 34, 36, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 154, 155, 156, 159, 161], "return_discard": 36, "return_el": 134, "reusabl": [0, 157, 160], "reuseabl": [156, 161], "review": 153, "rhel_7_x86_64": 158, "right": [134, 156], "rmse": 134, "rmseloss": [131, 134], "rmsevonmisesfisher3dloss": [131, 134], "rng": 67, "rnn": [88, 102], "rnn_dropout": 102, "rnn_dynedg": 102, "rnn_hidden_s": 102, "rnn_layer": 102, "rnn_tito": 101, "role": 161, "root": 134, "roughli": 155, "row": [68, 73, 118, 130, 155, 156, 159, 161], "run": [1, 58, 78, 154, 156, 158, 159, 161], "run_sql_cod": [65, 68], "runner": [96, 97, 99, 138], "runtim": [133, 158], "runtimeerror": 20, "ryabinin": 134, "sai": [156, 161], "same": [17, 36, 68, 89, 93, 118, 125, 130, 132, 144, 150, 155, 156, 161], "sampl": [69, 92, 114, 115, 117, 127, 156, 161], "satisfi": [0, 154, 157, 160], "save": [7, 18, 20, 33, 38, 40, 49, 51, 68, 70, 71, 73, 119, 132, 134, 136, 140, 141, 142, 143, 154, 156, 159], "save_config": [141, 156, 161], "save_dataset_config": [139, 142], "save_dir": [132, 156, 161], "save_fil": [71, 154], "save_method": [7, 154, 159], "save_model_config": [139, 143], "save_state_dict": [119, 156, 161], "save_to_sql": [65, 68], "scalabl": 155, "scalar": [18, 130, 134], "scale": [91, 92, 105, 108, 113, 114, 117, 118, 127, 129, 134, 155, 161], "scaled_emb": [108, 129], "scatter": [117, 118], "scheduler_class": [156, 161], "scheduler_config": [156, 161], "scheduler_kwarg": [156, 161], "schema": 156, "scheme": [102, 104, 106, 109, 154], "scientif": [0, 1, 157, 160], "scope": 153, "script": [156, 161], "search": [57, 58, 59, 61, 62, 148, 154], "sec": 134, "second": 113, "section": 156, "see": [91, 102, 112, 114, 132, 153, 155, 156, 158], "seed": [69, 114, 115, 142, 155, 156], "seen": 91, "select": [27, 69, 136, 142, 153, 156, 159], "self": [100, 114, 123, 140, 145, 154, 155, 156, 159, 161], "sell": 134, "send": 127, "sensor": [95, 114, 155, 156, 159, 161], "sensor_i": 159, "sensor_id": [96, 98, 99, 159], "sensor_id_column": [96, 97, 98, 99, 159], "sensor_index_nam": 95, "sensor_mask": 114, "sensor_pos_i": [99, 155, 156, 161], "sensor_pos_x": [99, 155, 156, 161], "sensor_pos_z": [99, 155, 156, 161], "sensor_position_nam": 95, "sensor_string_id": 99, "sensor_tim": 159, "sensor_x": [155, 159], "sensor_z": 159, "separ": [33, 113, 132, 156, 158], "seper": [121, 155], "seq_length": [91, 108, 129, 130], "sequenc": [78, 91, 92, 118, 130, 156, 161], "seri": [21, 22, 34, 36, 68, 83, 102, 117, 121, 155, 156, 161], "serial": [154, 155], "serialis": [32, 33, 156, 161], "serv": 155, "session": [142, 143, 155, 156, 161], "set": [3, 6, 20, 22, 57, 58, 71, 91, 92, 108, 117, 118, 119, 127, 133, 153, 154, 156, 159, 161], "set_extractor": 57, "set_gcd": 20, "set_index": 159, "set_number_of_input": 117, "set_output_feature_nam": 117, "set_verbose_print_recurs": 119, "setlevel": 150, "setup": [132, 158], "setuptool": 158, "sever": [156, 161], "sh": 158, "shall": 134, "shape": [18, 113, 114, 117, 130, 134, 154, 155], "share": [100, 123, 156, 161], "shared_step": [100, 123], "shell": 158, "should": [18, 20, 33, 69, 79, 92, 93, 102, 108, 114, 115, 121, 130, 134, 140, 142, 143, 145, 153, 154, 155, 156, 158, 159, 161], "show": [69, 132, 156], "shown": 156, "shuffl": [67, 72, 155], "sigmoid": 161, "sign": 134, "signal": [83, 161], "signatur": [22, 36], "signific": 155, "significantli": 155, "signup": 156, "similar": [22, 36, 117, 156, 161], "similarli": [36, 154, 155, 156, 161], "simpl": [0, 88, 100, 156, 157, 160, 161], "simplecoarsen": 89, "simplest": [156, 161], "simpli": [156, 161], "simul": [34, 51, 62, 83, 156, 159], "sinc": [83, 134, 156], "singl": [17, 71, 73, 93, 104, 109, 118, 133, 136, 142, 143, 154, 155, 156, 159, 161], "sinusoid": [91, 108, 129], "sinusoidalposemb": [90, 91], "sipm_i": 97, "sipm_id": 97, "sipm_x": 97, "sipm_z": 97, "situat": 153, "size": [73, 91, 92, 93, 102, 104, 105, 106, 108, 109, 130, 138, 155], "skip": [35, 104, 109, 156], "skip_readout": [104, 109], "sklearn": [156, 161], "sk\u0142odowska": [0, 157, 160], "slack": 156, "slice": [92, 104, 109], "slower": 73, "small": [134, 155, 156, 161], "smaller": [71, 154], "smooth": 153, "snippet": [156, 161], "so": [134, 155, 156, 158, 159, 161], "soft": 91, "softmax": 134, "softwar": [0, 58, 134, 157, 160], "solut": [91, 92, 106, 108, 153], "solv": [1, 153, 161], "some": [58, 114, 118, 155, 156], "someth": [156, 161], "somewhat": 156, "sort": [114, 118], "sort_bi": 114, "sourc": [0, 6, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 49, 51, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 79, 83, 85, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 157, 160], "south": [106, 108], "space": [91, 112, 113, 127, 136], "space_coord": 113, "spacetim": 91, "spacetimeencod": [90, 91], "sparsetensor": 92, "spatial": 118, "special": [22, 83, 121, 130], "specialis": [156, 161], "specif": [0, 1, 6, 7, 16, 18, 21, 36, 57, 58, 68, 73, 77, 79, 87, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 107, 112, 114, 117, 120, 124, 125, 126, 127, 128, 134, 153, 154, 155, 156, 157, 159, 160, 161], "specifi": [69, 89, 118, 127, 132, 155, 156, 159, 161], "speed": [83, 113, 155], "sphere": 112, "spite": 134, "splinemp": 29, "split": [0, 35, 73, 89, 157, 160], "splitinicepuls": 68, "sql": 136, "sqlite": [1, 3, 10, 68, 73, 155, 156], "sqlite3": 156, "sqlite_dataset": 14, "sqlite_util": 65, "sqlite_writ": 70, "sqlitedatas": 155, "sqlitedataset": 154, "sqlitewrit": [70, 73, 154, 155], "squar": 134, "src": 156, "stabl": [126, 127], "stage": 132, "standalon": 121, "standard": [0, 35, 69, 79, 96, 97, 98, 99, 102, 114, 115, 117, 122, 123, 127, 138, 153, 156, 157, 159, 160, 161], "standard_argu": 138, "standard_averaged_model": 88, "standard_model": [88, 156], "standardaveragedmodel": [88, 122], "standardaveragemodel": 122, "standardflowtask": [124, 127], "standardis": 94, "standardlearnedtask": [124, 125, 126, 127, 161], "standardmodel": [88, 100, 122, 123], "start": [30, 153, 156, 159, 161], "state": [0, 79, 102, 121, 147, 157, 160], "state_dict": [79, 83, 85, 119, 122, 147, 156], "static": [134, 153], "std": 93, "std_pool": [90, 93], "std_pool_x": [90, 93], "stdout": 132, "step": [100, 122, 123, 130, 132, 156, 159, 161], "still": 142, "stochast": 92, "stop": [30, 132, 138], "store": [68, 71, 72, 73, 133, 154, 155, 156, 159, 161], "str": [6, 7, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 49, 51, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 79, 83, 85, 92, 93, 95, 96, 97, 98, 99, 100, 102, 104, 106, 108, 109, 114, 115, 117, 118, 119, 122, 127, 132, 133, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 150, 154, 159], "straightforward": 155, "strategi": [156, 161], "stream_handl": 150, "streamhandl": 150, "streamlin": 1, "string": [33, 69, 93, 95, 96, 114, 119, 140, 156, 159, 161], "string_id": [98, 159], "string_id_column": [96, 97, 98, 99, 159], "string_index_nam": 95, "string_mask": 114, "string_select": 142, "string_selection_resolv": 65, "stringselectionresolv": [65, 69], "strongli": [156, 161], "structur": [100, 144, 154, 155, 156, 161], "style": 153, "sub": 156, "subclass": [0, 88, 100, 154, 155, 156, 157, 160, 161], "subfold": 58, "subject": [108, 134], "sublicens": 134, "submodul": [144, 152], "subpackag": 152, "subsampl": [72, 155], "subsequ": 156, "subset": [92, 102, 104, 106, 109, 121, 156], "substanti": 134, "suggest": [100, 134, 156], "suit": [0, 127, 156, 157, 160], "suitabl": [1, 159], "sum": [89, 93, 100, 104, 106, 109, 123, 136, 156, 161], "sum_pool": [89, 90, 93], "sum_pool_and_distribut": [90, 93], "sum_pool_x": [89, 90, 93], "summar": [83, 85, 117, 118], "summari": [117, 118], "summaris": [156, 161], "summariz": 161, "summarization_indic": 118, "super": [154, 155, 156, 161], "supervis": [123, 127, 161], "support": [0, 7, 36, 153, 154, 155, 156, 157, 160], "suppos": [118, 155, 159], "sure": [153, 154], "swa": 122, "swapabl": 156, "switch": [134, 156, 161], "synchron": 7, "syntax": [69, 100, 134, 155, 156], "system": [148, 156, 161], "t": [36, 68, 132, 134, 154, 155, 156, 159, 161], "tabl": [17, 18, 20, 38, 40, 49, 51, 57, 68, 72, 73, 95, 114, 136, 154, 155, 156], "table_nam": [51, 68], "table_without_index": 159, "tackl": 161, "tag": 153, "take": [36, 93, 118, 121, 153, 155], "talk": 156, "target": [100, 125, 127, 134, 145, 156, 161], "target_label": [100, 127, 156, 161], "target_pr": [125, 161], "task": [0, 1, 88, 100, 123, 134, 153, 156, 157, 160], "team": [114, 153, 155, 156, 158, 159, 161], "technic": [0, 157, 159, 160], "techniqu": [0, 157, 160, 161], "telescop": [0, 1, 156, 157, 159, 160, 161], "tend": 73, "tensor": [79, 89, 91, 92, 93, 95, 100, 102, 103, 104, 105, 106, 107, 108, 109, 113, 117, 121, 122, 123, 127, 129, 130, 134, 147, 151, 155, 156, 159, 161], "term": [92, 134, 161], "termin": 156, "test": [69, 127, 142, 149, 153, 155, 156, 161], "test_dataset": 74, "test_funct": 149, "test_select": [142, 155, 156], "than": [0, 127, 150, 155, 156, 157, 160, 161], "thei": [78, 154, 155, 156, 161], "them": [0, 1, 33, 79, 88, 104, 127, 155, 156, 157, 159, 160, 161], "themselv": [1, 142, 143, 156, 161], "therebi": [1, 142, 143, 156, 161], "therefor": [33, 58, 154, 155, 156, 159, 161], "thi": [0, 7, 17, 18, 20, 22, 36, 38, 40, 49, 51, 57, 58, 67, 68, 72, 73, 83, 88, 91, 93, 100, 102, 104, 108, 109, 113, 114, 115, 117, 118, 121, 123, 125, 126, 127, 130, 132, 134, 136, 140, 142, 143, 145, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "thing": 156, "those": [20, 155, 156], "three": [109, 118, 134, 161], "threshold": [0, 83, 157, 160], "through": [0, 125, 126, 127, 134, 154, 156, 157, 160, 161], "throw": 154, "thu": [143, 161], "ti": 155, "time": [0, 68, 89, 91, 93, 102, 113, 117, 118, 121, 126, 130, 136, 150, 155, 156, 157, 159, 160], "time_column": 117, "time_coord": 113, "time_lik": 113, "time_like_weight": 113, "time_series_column": [102, 121], "time_window": 89, "timereconstruct": [124, 126], "tini": 156, "tito": [92, 102, 106], "to_config": 161, "to_csv": [156, 161], "to_parquet": 159, "todo": 156, "togeth": [0, 88, 112, 134, 157, 160], "token": 129, "too": [156, 161], "tool": [0, 1, 157, 160], "top": 161, "torch": [0, 88, 92, 114, 115, 119, 149, 155, 156, 157, 158, 159, 160, 161], "torch_cpu": 158, "torch_geometr": [93, 130, 155, 156, 161], "torch_lightn": 161, "tort": 134, "total": [130, 136, 155, 156, 159], "total_energi": [155, 156, 161], "tqdmprogressbar": 132, "track": [0, 18, 20, 24, 38, 40, 49, 51, 126, 131, 133, 153, 154, 156, 157, 160], "tradit": [0, 157, 160], "train": [0, 1, 7, 69, 77, 83, 92, 100, 108, 114, 122, 123, 130, 138, 142, 143, 145, 152, 154, 155, 156, 157, 159, 160], "train_batch": [100, 122], "train_dataload": [100, 156, 161], "train_ev": 127, "train_select": [142, 155, 156], "trainabl": 143, "trainer": [100, 132, 156, 161], "trainer_kwarg": 100, "training_config": [139, 156, 161], "training_example_data_sqlit": [138, 155, 156, 161], "training_step": [100, 122], "trainingconfig": [139, 145, 156, 161], "transform": [1, 88, 92, 93, 106, 108, 121, 127, 136, 156, 161], "transform_infer": [127, 156, 161], "transform_prediction_and_target": [127, 156, 161], "transform_support": [127, 156, 161], "transform_target": [127, 156, 161], "transit": 147, "transpar": [142, 143, 153, 156, 161], "transpos": 33, "transpose_list_of_dict": [32, 33], "traverse_and_appli": [139, 144], "treat": [102, 121], "tree": [22, 156], "tri": [22, 36], "triangl": 99, "trident": 99, "trident1211": [94, 99], "trigger": [22, 155, 156, 161], "trivial": [36, 127], "true": [35, 68, 83, 102, 104, 106, 108, 109, 114, 117, 119, 132, 134, 136, 142, 143, 145, 148, 154, 155, 156, 161], "trust": [119, 156, 161], "truth": [21, 30, 51, 68, 72, 114, 127, 136, 142, 155, 159, 161], "truth_dict": 114, "truth_label": 155, "truth_tabl": [72, 136, 142, 155, 156], "truthdata": 49, "try": [36, 154], "tum": [24, 31], "tupl": [7, 34, 36, 68, 92, 102, 104, 106, 109, 118, 127, 130, 138, 147], "turn": [118, 153], "tutorial_output": [156, 161], "two": [104, 132, 134, 154, 155, 156, 159], "txt": 158, "type": [0, 7, 20, 32, 33, 34, 49, 51, 57, 58, 59, 61, 62, 67, 68, 69, 71, 72, 73, 78, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160], "typic": [0, 33, 121, 155, 157, 159, 160], "u": [155, 159], "ultra": 155, "unaccur": 134, "unambigu": [142, 143], "unbatch_edge_index": [88, 89], "uncertainti": [126, 156, 161], "uncompress": 155, "under": [0, 156, 157, 159, 160, 161], "unfamiliar": 161, "uniform": [131, 136], "uniformweightfitt": 136, "union": [0, 7, 22, 33, 36, 57, 58, 59, 61, 62, 78, 79, 83, 85, 89, 92, 93, 100, 102, 104, 109, 114, 115, 123, 127, 142, 145, 148, 154, 157, 159, 160], "uniqu": [68, 117, 130, 142, 156, 159, 161], "unit": [0, 7, 113, 149, 153, 157, 160], "univers": [106, 108], "unlik": 155, "unscal": 161, "untransform": 125, "up": [0, 83, 153, 157, 160], "updat": [109, 121, 122, 130, 132, 156, 158, 161], "upgrad": [21, 96, 156, 158], "upon": 161, "us": [0, 1, 2, 7, 17, 18, 20, 25, 30, 32, 33, 38, 40, 49, 51, 57, 58, 65, 68, 69, 71, 72, 73, 77, 79, 83, 85, 88, 91, 92, 93, 95, 100, 102, 104, 105, 106, 108, 109, 112, 114, 115, 117, 118, 119, 121, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 149, 150, 153, 154, 157, 158, 159, 160], "usabl": [0, 157, 160], "usag": 138, "use_cach": 69, "use_global_featur": [102, 106], "use_post_processing_lay": [102, 106], "user": [0, 88, 100, 132, 155, 156, 157, 158, 160, 161], "usual": 155, "util": [1, 3, 19, 39, 88, 110, 131, 152, 155, 156, 158, 161], "utils_osc": 44, "v": 92, "v1": [140, 142, 143, 145, 158], "v4": 158, "val_batch": [100, 122], "val_dataload": 100, "valid": [36, 69, 100, 122, 123, 127, 132, 134, 138, 140, 145, 155, 156, 161], "validate_fil": 57, "validate_task": [100, 123], "validation_step": [100, 122], "validationerror": [140, 145], "valu": [30, 33, 68, 92, 93, 109, 113, 114, 115, 130, 133, 134, 138, 140, 161], "valueerror": [22, 119], "var": 126, "var1": 18, "var_n": 18, "variabl": [18, 20, 22, 36, 57, 104, 117, 118, 130, 136, 150, 154, 159, 161], "varieti": 156, "variou": [1, 70, 156], "vast": [123, 127], "vector": [89, 92, 93, 134, 154, 161], "verbos": [58, 100, 123, 132], "verbose_print": 119, "veri": [69, 155, 156, 161], "verifi": [100, 123], "versa": 132, "version": [93, 118, 127, 132, 153, 156, 161], "vertex": [126, 156], "vertexreconstruct": [124, 126], "viabl": 159, "vice": 132, "virtual": 158, "visit": 159, "vmf": 126, "vmf_loss": 134, "vmfs_factor": 134, "volum": 30, "von": 134, "vonmisesfisher2dloss": [131, 134, 156, 161], "vonmisesfisher3dloss": [131, 134], "vonmisesfisherloss": [131, 134], "w": [156, 161], "wa": [0, 7, 155, 156, 157, 159, 160, 161], "wai": [36, 69, 123, 153, 156, 159, 161], "wandb": [156, 161], "wandb_dir": [156, 161], "wandb_logg": [156, 161], "wandblogg": [156, 161], "want": [155, 156, 158, 159, 161], "warn": [150, 156], "warning_onc": [150, 156], "warranti": 134, "waterdemo81": [94, 99], "wb": 154, "we": [33, 36, 69, 118, 153, 156, 158, 159, 161], "weight": [83, 85, 92, 108, 114, 127, 134, 136, 143, 156, 161], "weight_events_oscprob": 44, "weight_fit": 131, "weight_nam": 136, "weightfitt": [131, 136], "well": [153, 156, 161], "wether": 109, "what": [1, 91, 114, 153, 156, 161], "whatev": 156, "wheel": 158, "when": [0, 33, 35, 68, 83, 92, 102, 104, 106, 109, 121, 133, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161], "whenev": 158, "where": [18, 58, 114, 115, 117, 118, 121, 130, 133, 154, 155, 156, 159, 161], "wherea": [136, 155], "whether": [34, 36, 68, 91, 92, 102, 104, 106, 108, 109, 119, 129, 134, 144, 148, 149, 156], "which": [0, 18, 20, 21, 30, 34, 38, 40, 49, 51, 69, 71, 73, 78, 89, 93, 104, 109, 114, 115, 118, 119, 125, 130, 134, 138, 154, 155, 156, 157, 160, 161], "while": [0, 22, 100, 132, 153, 155, 157, 160], "who": [147, 156, 161], "whom": 134, "whose": 83, "wide": 161, "willing": [155, 159], "window": [89, 155, 156], "wise": 93, "wish": [0, 78, 153, 157, 160], "with_standard_argu": 138, "within": [30, 89, 92, 93, 104, 109, 112, 156, 161], "without": [1, 112, 115, 117, 134, 155, 158], "work": [0, 34, 102, 153, 154, 155, 156, 157, 160, 161], "worker": [6, 7, 67, 72, 78, 138, 150], "workflow": [0, 157, 160], "would": [153, 155, 156, 159, 161], "wrap": [132, 142, 143], "write": [72, 83, 85, 154, 156, 161], "writer": [3, 159], "written": [78, 154], "wrt": 127, "www": 156, "x": [30, 91, 92, 93, 96, 113, 117, 118, 121, 127, 130, 134, 136, 155, 156, 159, 161], "x8": 155, "x_i": 92, "x_j": 92, "x_low": 136, "xyz": [95, 96, 97, 98, 99, 117, 118, 155, 159], "xyz_coord": 130, "xyzt": 130, "y": [30, 91, 96, 113, 130], "yaml": [140, 141, 156], "yield": [0, 104, 109, 134, 157, 160], "yml": [69, 138, 142, 143, 155, 156, 161], "you": [73, 78, 91, 142, 143, 153, 155, 156, 158, 159, 161], "your": [115, 153, 154, 155, 156, 158], "yourself": 153, "z": [30, 91, 96, 113, 117, 118, 130], "z_name": 117, "z_offset": [117, 118], "z_scale": [117, 118], "zenith": [126, 133, 156, 161], "zenith_kappa": 126, "zenith_kei": 133, "zenith_pr": 126, "zenithreconstruct": [124, 126], "zenithreconstructionwithkappa": [124, 126, 156, 161], "\u00f8rs\u00f8e": [0, 157, 160]}, "titles": ["Usage", "Subpackages", "graphnet.constants module", "graphnet.data package", "graphnet.data.constants module", "graphnet.data.curated_datamodule module", "graphnet.data.dataclasses module", "graphnet.data.dataconverter module", "graphnet.data.dataloader module", "graphnet.data.datamodule module", "graphnet.data.dataset package", "graphnet.data.dataset.dataset module", "graphnet.data.dataset.parquet package", "graphnet.data.dataset.parquet.parquet_dataset module", "graphnet.data.dataset.sqlite package", "graphnet.data.dataset.sqlite.sqlite_dataset module", "graphnet.data.extractors package", "graphnet.data.extractors.combine_extractors module", "graphnet.data.extractors.extractor module", "graphnet.data.extractors.icecube package", "graphnet.data.extractors.icecube.i3extractor module", "graphnet.data.extractors.icecube.i3featureextractor module", "graphnet.data.extractors.icecube.i3genericextractor module", "graphnet.data.extractors.icecube.i3hybridrecoextractor module", "graphnet.data.extractors.icecube.i3ntmuonlabelsextractor module", "graphnet.data.extractors.icecube.i3particleextractor module", "graphnet.data.extractors.icecube.i3pisaextractor module", "graphnet.data.extractors.icecube.i3quesoextractor module", "graphnet.data.extractors.icecube.i3retroextractor module", "graphnet.data.extractors.icecube.i3splinempeextractor module", "graphnet.data.extractors.icecube.i3truthextractor module", "graphnet.data.extractors.icecube.i3tumextractor module", "graphnet.data.extractors.icecube.utilities package", "graphnet.data.extractors.icecube.utilities.collections module", "graphnet.data.extractors.icecube.utilities.frames module", "graphnet.data.extractors.icecube.utilities.i3_filters module", "graphnet.data.extractors.icecube.utilities.types module", "graphnet.data.extractors.internal package", "graphnet.data.extractors.internal.parquet_extractor module", "graphnet.data.extractors.km3net package", "graphnet.data.extractors.km3net.km3netrootextractor module", "graphnet.data.extractors.km3net.km3netrootpulseextractor module", "graphnet.data.extractors.km3net.km3netroottriggpulseextractor module", "graphnet.data.extractors.km3net.km3netroottruthextractor module", "graphnet.data.extractors.km3net.utilities package", "graphnet.data.extractors.km3net.utilities.km3net_utilities module", "graphnet.data.extractors.km3net.utilities.utils_osc module", "graphnet.data.extractors.km3net.utilities.weight_events_oscprob module", "graphnet.data.extractors.liquido package", "graphnet.data.extractors.liquido.h5_extractor module", "graphnet.data.extractors.prometheus package", "graphnet.data.extractors.prometheus.prometheus_extractor module", "graphnet.data.parquet package", "graphnet.data.parquet.deprecated_methods module", "graphnet.data.pre_configured package", "graphnet.data.pre_configured.dataconverters module", "graphnet.data.readers package", "graphnet.data.readers.graphnet_file_reader module", "graphnet.data.readers.i3reader module", "graphnet.data.readers.internal_parquet_reader module", "graphnet.data.readers.km3netrootreader module", "graphnet.data.readers.liquido_reader module", "graphnet.data.readers.prometheus_reader module", "graphnet.data.sqlite package", "graphnet.data.sqlite.deprecated_methods module", "graphnet.data.utilities package", "graphnet.data.utilities.parquet_to_sqlite module", "graphnet.data.utilities.random module", "graphnet.data.utilities.sqlite_utilities module", "graphnet.data.utilities.string_selection_resolver module", "graphnet.data.writers package", "graphnet.data.writers.graphnet_writer module", "graphnet.data.writers.parquet_writer module", "graphnet.data.writers.sqlite_writer module", "graphnet.datasets package", "graphnet.datasets.prometheus_datasets module", "graphnet.datasets.test_dataset module", "graphnet.deployment package", "graphnet.deployment.deployer module", "graphnet.deployment.deployment_module module", "graphnet.deployment.i3modules package", "graphnet.deployment.i3modules.deprecated_methods module", "graphnet.deployment.icecube package", "graphnet.deployment.icecube.cleaning_module module", "graphnet.deployment.icecube.i3deployer module", "graphnet.deployment.icecube.inference_module module", "graphnet.exceptions package", "graphnet.exceptions.exceptions module", "graphnet.models package", "graphnet.models.coarsening module", "graphnet.models.components package", "graphnet.models.components.embedding module", "graphnet.models.components.layers module", "graphnet.models.components.pool module", "graphnet.models.detector package", "graphnet.models.detector.detector module", "graphnet.models.detector.icecube module", "graphnet.models.detector.liquido module", "graphnet.models.detector.orca module", "graphnet.models.detector.prometheus module", "graphnet.models.easy_model module", "graphnet.models.gnn package", "graphnet.models.gnn.RNN_tito module", "graphnet.models.gnn.convnet module", "graphnet.models.gnn.dynedge module", "graphnet.models.gnn.dynedge_jinst module", "graphnet.models.gnn.dynedge_kaggle_tito module", "graphnet.models.gnn.gnn module", "graphnet.models.gnn.icemix module", "graphnet.models.gnn.particlenet module", "graphnet.models.graphs package", "graphnet.models.graphs.edges package", "graphnet.models.graphs.edges.edges module", "graphnet.models.graphs.edges.minkowski module", "graphnet.models.graphs.graph_definition module", "graphnet.models.graphs.graphs module", "graphnet.models.graphs.nodes package", "graphnet.models.graphs.nodes.nodes module", "graphnet.models.graphs.utils module", "graphnet.models.model module", "graphnet.models.rnn package", "graphnet.models.rnn.node_rnn module", "graphnet.models.standard_averaged_model module", "graphnet.models.standard_model module", "graphnet.models.task package", "graphnet.models.task.classification module", "graphnet.models.task.reconstruction module", "graphnet.models.task.task module", "graphnet.models.transformer package", "graphnet.models.transformer.iseecube module", "graphnet.models.utils module", "graphnet.training package", "graphnet.training.callbacks module", "graphnet.training.labels module", "graphnet.training.loss_functions module", "graphnet.training.utils module", "graphnet.training.weight_fitting module", "graphnet.utilities package", "graphnet.utilities.argparse module", "graphnet.utilities.config package", "graphnet.utilities.config.base_config module", "graphnet.utilities.config.configurable module", "graphnet.utilities.config.dataset_config module", "graphnet.utilities.config.model_config module", "graphnet.utilities.config.parsing module", "graphnet.utilities.config.training_config module", "graphnet.utilities.decorators module", "graphnet.utilities.deprecation_tools module", "graphnet.utilities.filesys module", "graphnet.utilities.imports module", "graphnet.utilities.logging module", "graphnet.utilities.maths module", "src", "Contributing To GraphNeT", "Data Conversion in GraphNeT", "Datasets In GraphNeT", "GraphNeT tutorial", "GraphNeT", "Installation", "Integrating New Experiments into GraphNeT", "GraphNeT", "Models In GraphNeT", "&lt;no title&gt;"], "titleterms": {"1": 159, "2": 159, "In": [155, 161], "The": [156, 161], "To": 153, "acknowledg": 0, "ad": [155, 156, 159, 161], "advanc": 156, "appendix": 156, "appli": 159, "argpars": 138, "backbon": 161, "base_config": 140, "befor": 159, "callback": 132, "checkpoint": 161, "choos": 155, "class": [156, 159, 161], "classif": 125, "cleaning_modul": 83, "coarsen": 89, "code": 153, "collect": 33, "combin": [155, 156], "combine_extractor": 17, "compon": [90, 91, 92, 93], "config": [139, 140, 141, 142, 143, 144, 145], "configur": 141, "constant": [2, 4], "content": 156, "contribut": 153, "convent": 153, "convers": 154, "convnet": 103, "creat": 156, "curated_datamodul": 5, "custom": [155, 156], "cvmf": 158, "data": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 154, 159], "dataclass": 6, "dataconfig": 156, "dataconvert": [7, 55, 154], "dataload": 8, "datamodul": 9, "dataset": [10, 11, 12, 13, 14, 15, 74, 75, 76, 155, 156], "dataset_config": 142, "datasetconfig": 156, "decor": 146, "deploy": [77, 78, 79, 80, 81, 82, 83, 84, 85], "deployment_modul": 79, "deprecated_method": [53, 64, 81], "deprecation_tool": 147, "detector": [94, 95, 96, 97, 98, 99, 159], "dynedg": 104, "dynedge_jinst": 105, "dynedge_kaggle_tito": 106, "easy_model": 100, "edg": [111, 112, 113], "embed": 91, "energi": 161, "event": 155, "exampl": [156, 159, 161], "except": [86, 87], "experi": [159, 161], "extractor": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 154, 159], "filesi": 148, "frame": 34, "function": 156, "geometri": 159, "github": 153, "gnn": [101, 102, 103, 104, 105, 106, 107, 108, 109], "graph": [110, 111, 112, 113, 114, 115, 116, 117, 118], "graph_definit": 114, "graphdefinit": 161, "graphnet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156], "graphnet_file_read": 57, "graphnet_writ": 71, "graphnetfileread": 159, "graphnetgraphnet": [153, 154, 155, 157, 159, 160, 161], "h5_extractor": 49, "i3_filt": 35, "i3deploy": 84, "i3extractor": 20, "i3featureextractor": 21, "i3genericextractor": 22, "i3hybridrecoextractor": 23, "i3modul": [80, 81], "i3ntmuonlabelsextractor": 24, "i3particleextractor": 25, "i3pisaextractor": 26, "i3quesoextractor": 27, "i3read": 58, "i3retroextractor": 28, "i3splinempeextractor": 29, "i3truthextractor": 30, "i3tumextractor": 31, "icecub": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 82, 83, 84, 85, 96, 158], "icemix": 108, "implement": [155, 159], "import": 149, "index": 159, "inference_modul": 85, "instal": 158, "instanti": 161, "integr": 159, "intern": [37, 38], "internal_parquet_read": 59, "introduct": 156, "iseecub": 129, "issu": 153, "km3net": [39, 40, 41, 42, 43, 44, 45, 46, 47], "km3net_util": 45, "km3netrootextractor": 40, "km3netrootpulseextractor": 41, "km3netrootread": 60, "km3netroottriggpulseextractor": 42, "km3netroottruthextractor": 43, "label": [133, 155, 156], "layer": 92, "liquido": [48, 49, 97], "liquido_read": 61, "load": 161, "log": 150, "loss_funct": 134, "math": 151, "minkowski": 113, "model": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 156, 161], "model_config": 143, "modelconfig": [156, 161], "modul": [2, 4, 5, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 79, 81, 83, 84, 85, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "multi": 159, "multipl": [155, 156], "new": [155, 159], "node": [116, 117], "node_rnn": 121, "orca": 98, "overview": 156, "own": [159, 161], "packag": [3, 10, 12, 14, 16, 19, 32, 37, 39, 44, 48, 50, 52, 54, 56, 63, 65, 70, 74, 77, 80, 82, 86, 88, 90, 94, 101, 110, 111, 116, 120, 124, 128, 131, 137, 139], "parquet": [12, 13, 52, 53], "parquet_dataset": 13, "parquet_extractor": 38, "parquet_to_sqlit": 66, "parquet_writ": 72, "parquetdataset": 155, "pars": 144, "particlenet": 109, "pool": 93, "pre_configur": [54, 55], "prometheu": [50, 51, 99], "prometheus_dataset": 75, "prometheus_extractor": 51, "prometheus_read": 62, "pull": 153, "qualiti": 153, "quick": 158, "random": 67, "reader": [56, 57, 58, 59, 60, 61, 62, 154], "reconstruct": [126, 161], "reproduc": 156, "request": 153, "rnn": [120, 121], "rnn_tito": 102, "save": 161, "select": 155, "sqlite": [14, 15, 63, 64], "sqlite_dataset": 15, "sqlite_util": 68, "sqlite_writ": 73, "sqlitedataset": [155, 156], "src": 152, "standard_averaged_model": 122, "standard_model": 123, "standardmodel": [156, 161], "start": 158, "state_dict": 161, "string_selection_resolv": 69, "submodul": [1, 3, 10, 12, 14, 16, 19, 32, 37, 39, 44, 48, 50, 52, 54, 56, 63, 65, 70, 74, 77, 80, 82, 86, 88, 90, 94, 101, 110, 111, 116, 120, 124, 128, 131, 137, 139], "subpackag": [1, 3, 10, 16, 19, 39, 77, 88, 110, 137], "subset": 155, "support": 159, "syntax": 161, "tabl": 159, "task": [124, 125, 126, 127, 161], "test_dataset": 76, "track": 161, "train": [131, 132, 133, 134, 135, 136, 161], "training_config": 145, "transform": [128, 129], "truth": 156, "tutori": 156, "type": 36, "us": [155, 156, 161], "usag": 0, "util": [32, 33, 34, 35, 36, 44, 45, 46, 47, 65, 66, 67, 68, 69, 118, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "utils_osc": 46, "v": 155, "weight_events_oscprob": 47, "weight_fit": 136, "write": 159, "writer": [70, 71, 72, 73, 154], "your": [159, 161]}})